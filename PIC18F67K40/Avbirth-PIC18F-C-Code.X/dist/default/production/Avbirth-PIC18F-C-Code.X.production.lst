

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Oct 06 16:28:13 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	text42,global,reloc=2,class=CODE,delta=1
    52                           	psect	text43,global,reloc=2,class=CODE,delta=1
    53                           	psect	text44,global,reloc=2,class=CODE,delta=1
    54                           	psect	text45,global,reloc=2,class=CODE,delta=1
    55                           	psect	text46,global,reloc=2,class=CODE,delta=1
    56                           	psect	text47,global,reloc=2,class=CODE,delta=1
    57                           	psect	text48,global,reloc=2,class=CODE,delta=1
    58                           	psect	text49,global,reloc=2,class=CODE,delta=1
    59                           	psect	text50,global,reloc=2,class=CODE,delta=1
    60                           	psect	text51,global,reloc=2,class=CODE,delta=1
    61                           	psect	text52,global,reloc=2,class=CODE,delta=1
    62                           	psect	text53,global,reloc=2,class=CODE,delta=1
    63                           	psect	text54,global,reloc=2,class=CODE,delta=1
    64                           	psect	text55,global,reloc=2,class=CODE,delta=1
    65                           	psect	text56,global,reloc=2,class=CODE,delta=1
    66                           	psect	text57,global,reloc=2,class=CODE,delta=1
    67                           	psect	text58,global,reloc=2,class=CODE,delta=1
    68                           	psect	text59,global,reloc=2,class=CODE,delta=1
    69                           	psect	text60,global,reloc=2,class=CODE,delta=1
    70                           	psect	text61,global,reloc=2,class=CODE,delta=1
    71                           	psect	text62,global,reloc=2,class=CODE,delta=1
    72                           	psect	text63,global,reloc=2,class=CODE,delta=1
    73                           	psect	text64,global,reloc=2,class=CODE,delta=1
    74                           	psect	text65,global,reloc=2,class=CODE,delta=1
    75                           	psect	text66,global,reloc=2,class=CODE,delta=1
    76                           	psect	text67,global,reloc=2,class=CODE,delta=1
    77                           	psect	text68,global,reloc=2,class=CODE,delta=1
    78                           	psect	text69,global,reloc=2,class=CODE,delta=1
    79                           	psect	text70,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	text71,global,reloc=2,class=CODE,delta=1
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    83                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    84                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    85                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    86  0000                     
    87                           ; Version 2.20
    88                           ; Generated 05/05/2020 GMT
    89                           ; 
    90                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC18F67K40 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121  0000                     
   122                           	psect	nvCOMRAM
   123  000021                     __pnvCOMRAM:
   124                           	callstack 0
   125  000021                     _ADCC_ADI_InterruptHandler:
   126                           	callstack 0
   127  000021                     	ds	3
   128  000024                     _INT3_InterruptHandler:
   129                           	callstack 0
   130  000024                     	ds	3
   131  000027                     _INT2_InterruptHandler:
   132                           	callstack 0
   133  000027                     	ds	3
   134  00002A                     _INT1_InterruptHandler:
   135                           	callstack 0
   136  00002A                     	ds	3
   137  00002D                     _INT0_InterruptHandler:
   138                           	callstack 0
   139  00002D                     	ds	3
   140  000030                     _TMR0_InterruptHandler:
   141                           	callstack 0
   142  000030                     	ds	3
   143  000033                     _TMR4_InterruptHandler:
   144                           	callstack 0
   145  000033                     	ds	3
   146  0000                     _INT2PPSbits	set	3570
   147  0000                     _INT0PPSbits	set	3568
   148  0000                     _INT3PPSbits	set	3571
   149  0000                     _INT1PPSbits	set	3569
   150  0000                     _TX4REG	set	3812
   151  0000                     _RC4REG	set	3811
   152  0000                     _RC4STAbits	set	3815
   153  0000                     _TX4STAbits	set	3816
   154  0000                     _PIR4bits	set	3639
   155  0000                     _SP4BRGH	set	3814
   156  0000                     _SP4BRGL	set	3813
   157  0000                     _TX4STA	set	3816
   158  0000                     _RC4STA	set	3815
   159  0000                     _BAUD4CON	set	3817
   160  0000                     _PIR1bits	set	3636
   161  0000                     _PIE1bits	set	3626
   162  0000                     _PIE3bits	set	3628
   163  0000                     _PIE0bits	set	3625
   164  0000                     _PIR0bits	set	3635
   165  0000                     _PIE5bits	set	3630
   166  0000                     _PIR5bits	set	3640
   167  0000                     _TX2REG	set	3826
   168  0000                     _RC2REG	set	3825
   169  0000                     _RC2STAbits	set	3829
   170  0000                     _TX2STAbits	set	3830
   171  0000                     _PIR3bits	set	3638
   172  0000                     _SP2BRGH	set	3828
   173  0000                     _SP2BRGL	set	3827
   174  0000                     _TX2STA	set	3830
   175  0000                     _RC2STA	set	3829
   176  0000                     _BAUD2CON	set	3831
   177  0000                     _PMD5	set	3665
   178  0000                     _PMD4	set	3664
   179  0000                     _PMD3	set	3663
   180  0000                     _PMD2	set	3662
   181  0000                     _PMD1	set	3661
   182  0000                     _PMD0	set	3660
   183  0000                     _OSCTUNE	set	3656
   184  0000                     _OSCFRQ	set	3657
   185  0000                     _OSCEN	set	3655
   186  0000                     _OSCCON3	set	3653
   187  0000                     _OSCCON1	set	3651
   188  0000                     _RG6PPS	set	3720
   189  0000                     _RX2PPSbits	set	3601
   190  0000                     _RE0PPS	set	3698
   191  0000                     _RE1PPS	set	3699
   192  0000                     _RB6PPS	set	3680
   193  0000                     _ODCOND	set	3749
   194  0000                     _ODCONC	set	3744
   195  0000                     _ODCONH	set	3775
   196  0000                     _ODCONB	set	3736
   197  0000                     _ODCONG	set	3770
   198  0000                     _ODCONA	set	3728
   199  0000                     _ODCONF	set	3762
   200  0000                     _ODCONE	set	3757
   201  0000                     _WPUH	set	3776
   202  0000                     _WPUC	set	3745
   203  0000                     _WPUA	set	3729
   204  0000                     _WPUG	set	3771
   205  0000                     _WPUB	set	3737
   206  0000                     _WPUE	set	3758
   207  0000                     _WPUF	set	3763
   208  0000                     _WPUD	set	3750
   209  0000                     _ANSELA	set	3730
   210  0000                     _ANSELF	set	3764
   211  0000                     _ANSELG	set	3772
   212  0000                     _ANSELE	set	3759
   213  0000                     _ANSELB	set	3738
   214  0000                     _ANSELD	set	3751
   215  0000                     _ADCON1bits	set	3929
   216  0000                     _ADCON2bits	set	3930
   217  0000                     _ADPRE	set	3934
   218  0000                     _ADACQ	set	3932
   219  0000                     _ADCON3bits	set	3931
   220  0000                     _ADCLK	set	3927
   221  0000                     _ADACT	set	3926
   222  0000                     _ADREF	set	3928
   223  0000                     _ADCON3	set	3931
   224  0000                     _ADCON2	set	3930
   225  0000                     _ADCON1	set	3929
   226  0000                     _ADCAP	set	3933
   227  0000                     _ADPCH	set	3935
   228  0000                     _LATHbits	set	3968
   229  0000                     _PORTAbits	set	3977
   230  0000                     _LATAbits	set	3961
   231  0000                     _LATCbits	set	3963
   232  0000                     _ADERRL	set	3950
   233  0000                     _ADERRH	set	3951
   234  0000                     _ADPREVL	set	3937
   235  0000                     _ADPREVH	set	3938
   236  0000                     _ADFLTRL	set	3954
   237  0000                     _ADFLTRH	set	3955
   238  0000                     _ADSTATbits	set	3941
   239  0000                     _ADACCL	set	3952
   240  0000                     _ADACCH	set	3953
   241  0000                     _ADCNT	set	3943
   242  0000                     _ADRESL	set	3939
   243  0000                     _ADRESH	set	3940
   244  0000                     _ADCON0bits	set	3936
   245  0000                     _ADCON0	set	3936
   246  0000                     _ADSTAT	set	3941
   247  0000                     _ADRPT	set	3942
   248  0000                     _ADSTPTH	set	3945
   249  0000                     _ADSTPTL	set	3944
   250  0000                     _ADUTHH	set	3949
   251  0000                     _ADUTHL	set	3948
   252  0000                     _ADLTHH	set	3947
   253  0000                     _ADLTHL	set	3946
   254  0000                     _PORTBbits	set	3978
   255  0000                     _INTCONbits	set	4082
   256  0000                     _T0CON0bits	set	4053
   257  0000                     _T0CON0	set	4053
   258  0000                     _TMR0L	set	4051
   259  0000                     _TMR0H	set	4052
   260  0000                     _T0CON1	set	4054
   261  0000                     _CCP2CONbits	set	4007
   262  0000                     _CCPR2L	set	4005
   263  0000                     _CCPR2H	set	4006
   264  0000                     _CCP2CON	set	4007
   265  0000                     _PR4	set	4022
   266  0000                     _TMR4	set	4021
   267  0000                     _T4CONbits	set	4023
   268  0000                     _T4RSTbits	set	4026
   269  0000                     _T4HLTbits	set	4024
   270  0000                     _T4CON	set	4023
   271  0000                     _T4TMR	set	4021
   272  0000                     _T4PR	set	4022
   273  0000                     _T4RST	set	4026
   274  0000                     _T4HLT	set	4024
   275  0000                     _T4CLKCON	set	4025
   276  0000                     _CCP1CONbits	set	4011
   277  0000                     _CCPTMRS0bits	set	4013
   278  0000                     _CCPR1L	set	4009
   279  0000                     _CCPR1H	set	4010
   280  0000                     _CCP1CON	set	4011
   281  0000                     _TRISD	set	3972
   282  0000                     _TRISC	set	3971
   283  0000                     _TRISH	set	3976
   284  0000                     _TRISB	set	3970
   285  0000                     _TRISG	set	3975
   286  0000                     _TRISA	set	3969
   287  0000                     _TRISF	set	3974
   288  0000                     _TRISE	set	3973
   289  0000                     _LATH	set	3968
   290  0000                     _LATC	set	3963
   291  0000                     _LATG	set	3967
   292  0000                     _LATB	set	3962
   293  0000                     _LATF	set	3966
   294  0000                     _LATA	set	3961
   295  0000                     _LATD	set	3964
   296  0000                     _LATE	set	3965
   297  0000                     _LATFbits	set	3966
   298  0000                     _LATGbits	set	3967
   299                           
   300                           ; #config settings
   301                           
   302                           	psect	cinit
   303  001576                     __pcinit:
   304                           	callstack 0
   305  001576                     start_initialization:
   306                           	callstack 0
   307  001576                     __initialization:
   308                           	callstack 0
   309                           
   310                           ; Clear objects allocated to COMRAM (9 bytes)
   311  001576  EE00  F036         	lfsr	0,__pbssCOMRAM
   312  00157A  0E09               	movlw	9
   313  00157C                     clear_0:
   314  00157C  6AEE               	clrf	postinc0,c
   315  00157E  06E8               	decf	wreg,f,c
   316  001580  E1FD               	bnz	clear_0
   317  001582                     end_of_initialization:
   318                           	callstack 0
   319  001582                     __end_of__initialization:
   320                           	callstack 0
   321  001582  903F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   322  001584  923F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   323  001586  0100               	movlb	0
   324  001588  EFF4  F004         	goto	_main	;jump to C main() function
   325                           
   326                           	psect	bssCOMRAM
   327  000036                     __pbssCOMRAM:
   328                           	callstack 0
   329  000036                     _Pumps:
   330                           	callstack 0
   331  000036                     	ds	4
   332  00003A                     TMR4_ISR@CountCallBack:
   333                           	callstack 0
   334  00003A                     	ds	2
   335  00003C                     _interruptAction:
   336                           	callstack 0
   337  00003C                     	ds	1
   338  00003D                     _INTERRUPT_STEPPER_BREAK_FLAG:
   339                           	callstack 0
   340  00003D                     	ds	1
   341  00003E                     _UART_RX_in:
   342                           	callstack 0
   343  00003E                     	ds	1
   344                           
   345                           	psect	cstackCOMRAM
   346  000001                     __pcstackCOMRAM:
   347                           	callstack 0
   348  000001                     ?_ADCC_GetConversionResult:
   349                           	callstack 0
   350  000001                     ADCC_StartConversion@channel:
   351                           	callstack 0
   352  000001                     EUSART4_Write@txData:
   353                           	callstack 0
   354  000001                     i2EUSART2_Write@txData:
   355                           	callstack 0
   356  000001                     i2set_INTERRUPT_STEPPER_BREAK_FLAG@in:
   357                           	callstack 0
   358  000001                     PWM1_LoadDutyValue@dutyValue:
   359                           	callstack 0
   360  000001                     PWM2_LoadDutyValue@dutyValue:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x0
   364  000001                     	ds	1
   365  000002                     
   366                           ; 1 bytes @ 0x1
   367  000002                     	ds	1
   368  000003                     ??_ADCC_GetConversionResult:
   369  000003                     setPump1PWM@pwm:
   370                           	callstack 0
   371  000003                     setPump2PWM@pwm:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x2
   375  000003                     	ds	2
   376  000005                     ??_ADCC_DefaultInterruptHandler:
   377  000005                     
   378                           ; 1 bytes @ 0x4
   379  000005                     	ds	2
   380  000007                     ADCC_DefaultInterruptHandler@convertedValue:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x6
   384  000007                     	ds	2
   385  000009                     ??_INTERRUPT_InterruptManager:
   386                           
   387                           ; 1 bytes @ 0x8
   388  000009                     	ds	4
   389  00000D                     ??_setStepSize:
   390  00000D                     ?___wmul:
   391                           	callstack 0
   392  00000D                     EUSART2_Write@txData:
   393                           	callstack 0
   394  00000D                     set_INTERRUPT_STEPPER_BREAK_FLAG@in:
   395                           	callstack 0
   396  00000D                     stepperSleep@in:
   397                           	callstack 0
   398  00000D                     setDirection@dir:
   399                           	callstack 0
   400  00000D                     ___wmul@multiplier:
   401                           	callstack 0
   402  00000D                     TMR4_SetInterruptHandler@InterruptHandler:
   403                           	callstack 0
   404  00000D                     TMR0_SetInterruptHandler@InterruptHandler:
   405                           	callstack 0
   406  00000D                     INT0_SetInterruptHandler@InterruptHandler:
   407                           	callstack 0
   408  00000D                     INT1_SetInterruptHandler@InterruptHandler:
   409                           	callstack 0
   410  00000D                     INT2_SetInterruptHandler@InterruptHandler:
   411                           	callstack 0
   412  00000D                     INT3_SetInterruptHandler@InterruptHandler:
   413                           	callstack 0
   414  00000D                     ADCC_SetADIInterruptHandler@InterruptHandler:
   415                           	callstack 0
   416                           
   417                           ; 3 bytes @ 0xC
   418  00000D                     	ds	2
   419  00000F                     setStepSize@size:
   420                           	callstack 0
   421  00000F                     ___wmul@multiplicand:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0xE
   425  00000F                     	ds	1
   426  000010                     moveUntilZ@size:
   427                           	callstack 0
   428                           
   429                           ; 1 bytes @ 0xF
   430  000010                     	ds	1
   431  000011                     ??_moveUntilZ:
   432  000011                     ___wmul@product:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x10
   436  000011                     	ds	1
   437  000012                     moveUntilZ@dir:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x11
   441  000012                     	ds	1
   442  000013                     Step@num_steps:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x12
   446  000013                     	ds	2
   447  000015                     Step@size:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x14
   451  000015                     	ds	1
   452  000016                     ??_Step:
   453                           
   454                           ; 1 bytes @ 0x15
   455  000016                     	ds	1
   456  000017                     Step@dir:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0x16
   460  000017                     	ds	1
   461  000018                     Step@stepsCounter:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x17
   465  000018                     	ds	2
   466  00001A                     ??_inchForwards:
   467  00001A                     ??_inchBackwards:
   468                           
   469                           ; 1 bytes @ 0x19
   470  00001A                     	ds	2
   471  00001C                     inchForwards@size:
   472                           	callstack 0
   473  00001C                     inchBackwards@size:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x1B
   477  00001C                     	ds	1
   478  00001D                     inchForwards@multiplier:
   479                           	callstack 0
   480  00001D                     inchBackwards@multiplier:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x1C
   484  00001D                     	ds	2
   485  00001F                     ??_main:
   486                           
   487                           ; 1 bytes @ 0x1E
   488  00001F                     	ds	2
   489                           
   490 ;;
   491 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   492 ;;
   493 ;; *************** function _main *****************
   494 ;; Defined at:
   495 ;;		line 48 in file "main.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;		None
   498 ;; Auto vars:     Size  Location     Type
   499 ;;		None
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   511 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   512 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   513 ;;Total ram usage:        2 bytes
   514 ;; Hardware stack levels required when called:    8
   515 ;; This function calls:
   516 ;;		_SYSTEM_Initialize
   517 ;;		_get_interruptAction
   518 ;;		_inchBackwards
   519 ;;		_inchForwards
   520 ;;		_initPumps
   521 ;;		_moveUntilZ
   522 ;;		_reset_interruptAction
   523 ;;		_set_INTERRUPT_STEPPER_BREAK_FLAG
   524 ;; This function is called by:
   525 ;;		Startup code after reset
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           	psect	text0
   530  0009E8                     __ptext0:
   531                           	callstack 0
   532  0009E8                     _main:
   533                           	callstack 23
   534  0009E8                     
   535                           ;main.c: 51:     SYSTEM_Initialize();
   536  0009E8  EC1E  F009         	call	_SYSTEM_Initialize	;wreg free
   537  0009EC                     
   538                           ;main.c: 58:     (INTCONbits.GIE = 1);
   539  0009EC  8EF2               	bsf	242,7,c	;volatile
   540  0009EE                     
   541                           ;main.c: 64:     (INTCONbits.PEIE = 1);
   542  0009EE  8CF2               	bsf	242,6,c	;volatile
   543  0009F0                     
   544                           ;main.c: 69:     initPumps();
   545  0009F0  EC2D  F00A         	call	_initPumps	;wreg free
   546  0009F4  EFC0  F005         	goto	l3849
   547  0009F8                     l3739:
   548                           
   549                           ;main.c: 77:                 reset_interruptAction();
   550  0009F8  EC56  F00B         	call	_reset_interruptAction	;wreg free
   551  0009FC                     
   552                           ;main.c: 78:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   553  0009FC  0E00               	movlw	0
   554  0009FE  EC4E  F00B         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   555  000A02                     
   556                           ;main.c: 79:                 moveUntilZ(FORWARDS, Full);
   557  000A02  0E01               	movlw	1
   558  000A04  6E10               	movwf	moveUntilZ@size^0,c
   559  000A06  0E00               	movlw	0
   560  000A08  EC5A  F008         	call	_moveUntilZ
   561                           
   562                           ;main.c: 80:                 break;
   563  000A0C  EFC0  F005         	goto	l3849
   564  000A10                     l3745:
   565                           
   566                           ;main.c: 82:                 reset_interruptAction();
   567  000A10  EC56  F00B         	call	_reset_interruptAction	;wreg free
   568  000A14                     
   569                           ;main.c: 83:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   570  000A14  0E00               	movlw	0
   571  000A16  EC4E  F00B         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   572  000A1A                     
   573                           ;main.c: 84:                 moveUntilZ(BACKWARDS, Full);
   574  000A1A  0E01               	movlw	1
   575  000A1C  6E10               	movwf	moveUntilZ@size^0,c
   576  000A1E  0E01               	movlw	1
   577  000A20  EC5A  F008         	call	_moveUntilZ
   578                           
   579                           ;main.c: 85:                 break;
   580  000A24  EFC0  F005         	goto	l3849
   581  000A28                     l3751:
   582                           
   583                           ;main.c: 87:                 reset_interruptAction();
   584  000A28  EC56  F00B         	call	_reset_interruptAction	;wreg free
   585  000A2C                     
   586                           ;main.c: 88:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   587  000A2C  0E00               	movlw	0
   588  000A2E  EC4E  F00B         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   589  000A32                     
   590                           ;main.c: 89:                 moveUntilZ(FORWARDS, Half);
   591  000A32  0E02               	movlw	2
   592  000A34  6E10               	movwf	moveUntilZ@size^0,c
   593  000A36  0E00               	movlw	0
   594  000A38  EC5A  F008         	call	_moveUntilZ
   595                           
   596                           ;main.c: 90:                 break;
   597  000A3C  EFC0  F005         	goto	l3849
   598  000A40                     l3757:
   599                           
   600                           ;main.c: 92:                 reset_interruptAction();
   601  000A40  EC56  F00B         	call	_reset_interruptAction	;wreg free
   602  000A44                     
   603                           ;main.c: 93:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   604  000A44  0E00               	movlw	0
   605  000A46  EC4E  F00B         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   606  000A4A                     
   607                           ;main.c: 94:                 moveUntilZ(BACKWARDS, Half);
   608  000A4A  0E02               	movlw	2
   609  000A4C  6E10               	movwf	moveUntilZ@size^0,c
   610  000A4E  0E01               	movlw	1
   611  000A50  EC5A  F008         	call	_moveUntilZ
   612                           
   613                           ;main.c: 95:                 break;
   614  000A54  EFC0  F005         	goto	l3849
   615  000A58                     l3763:
   616                           
   617                           ;main.c: 97:                 reset_interruptAction();
   618  000A58  EC56  F00B         	call	_reset_interruptAction	;wreg free
   619  000A5C                     
   620                           ;main.c: 98:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   621  000A5C  0E00               	movlw	0
   622  000A5E  EC4E  F00B         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   623  000A62                     
   624                           ;main.c: 99:                 moveUntilZ(FORWARDS, Quarter);
   625  000A62  0E04               	movlw	4
   626  000A64  6E10               	movwf	moveUntilZ@size^0,c
   627  000A66  0E00               	movlw	0
   628  000A68  EC5A  F008         	call	_moveUntilZ
   629                           
   630                           ;main.c: 100:                 break;
   631  000A6C  EFC0  F005         	goto	l3849
   632  000A70                     l3769:
   633                           
   634                           ;main.c: 102:                 reset_interruptAction();
   635  000A70  EC56  F00B         	call	_reset_interruptAction	;wreg free
   636  000A74                     
   637                           ;main.c: 103:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   638  000A74  0E00               	movlw	0
   639  000A76  EC4E  F00B         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   640  000A7A                     
   641                           ;main.c: 104:                 moveUntilZ(BACKWARDS, Quarter);
   642  000A7A  0E04               	movlw	4
   643  000A7C  6E10               	movwf	moveUntilZ@size^0,c
   644  000A7E  0E01               	movlw	1
   645  000A80  EC5A  F008         	call	_moveUntilZ
   646                           
   647                           ;main.c: 105:                 break;
   648  000A84  EFC0  F005         	goto	l3849
   649  000A88                     l3775:
   650                           
   651                           ;main.c: 107:                 reset_interruptAction();
   652  000A88  EC56  F00B         	call	_reset_interruptAction	;wreg free
   653  000A8C                     
   654                           ;main.c: 108:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   655  000A8C  0E00               	movlw	0
   656  000A8E  EC4E  F00B         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   657  000A92                     
   658                           ;main.c: 109:                 moveUntilZ(FORWARDS, Eighth);
   659  000A92  0E08               	movlw	8
   660  000A94  6E10               	movwf	moveUntilZ@size^0,c
   661  000A96  0E00               	movlw	0
   662  000A98  EC5A  F008         	call	_moveUntilZ
   663                           
   664                           ;main.c: 110:                 break;
   665  000A9C  EFC0  F005         	goto	l3849
   666  000AA0                     l3781:
   667                           
   668                           ;main.c: 112:                 reset_interruptAction();
   669  000AA0  EC56  F00B         	call	_reset_interruptAction	;wreg free
   670  000AA4                     
   671                           ;main.c: 113:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   672  000AA4  0E00               	movlw	0
   673  000AA6  EC4E  F00B         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   674  000AAA                     
   675                           ;main.c: 114:                 moveUntilZ(BACKWARDS, Eighth);
   676  000AAA  0E08               	movlw	8
   677  000AAC  6E10               	movwf	moveUntilZ@size^0,c
   678  000AAE  0E01               	movlw	1
   679  000AB0  EC5A  F008         	call	_moveUntilZ
   680                           
   681                           ;main.c: 115:                 break;
   682  000AB4  EFC0  F005         	goto	l3849
   683  000AB8                     l3787:
   684                           
   685                           ;main.c: 117:                 reset_interruptAction();
   686  000AB8  EC56  F00B         	call	_reset_interruptAction	;wreg free
   687  000ABC                     
   688                           ;main.c: 118:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   689  000ABC  0E00               	movlw	0
   690  000ABE  EC4E  F00B         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   691  000AC2                     
   692                           ;main.c: 119:                 inchForwards(Full);
   693  000AC2  0E01               	movlw	1
   694  000AC4  EC85  F006         	call	_inchForwards
   695                           
   696                           ;main.c: 120:                 break;
   697  000AC8  EFC0  F005         	goto	l3849
   698  000ACC                     l3793:
   699                           
   700                           ;main.c: 122:                 reset_interruptAction();
   701  000ACC  EC56  F00B         	call	_reset_interruptAction	;wreg free
   702  000AD0                     
   703                           ;main.c: 123:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   704  000AD0  0E00               	movlw	0
   705  000AD2  EC4E  F00B         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   706  000AD6                     
   707                           ;main.c: 124:                 inchBackwards(Full);
   708  000AD6  0E01               	movlw	1
   709  000AD8  ECDB  F006         	call	_inchBackwards
   710                           
   711                           ;main.c: 125:                 break;
   712  000ADC  EFC0  F005         	goto	l3849
   713  000AE0                     l3799:
   714                           
   715                           ;main.c: 127:                 reset_interruptAction();
   716  000AE0  EC56  F00B         	call	_reset_interruptAction	;wreg free
   717  000AE4                     
   718                           ;main.c: 128:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   719  000AE4  0E00               	movlw	0
   720  000AE6  EC4E  F00B         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   721  000AEA                     
   722                           ;main.c: 129:                 inchForwards(Half);
   723  000AEA  0E02               	movlw	2
   724  000AEC  EC85  F006         	call	_inchForwards
   725                           
   726                           ;main.c: 130:                 break;
   727  000AF0  EFC0  F005         	goto	l3849
   728  000AF4                     l3805:
   729                           
   730                           ;main.c: 132:                 reset_interruptAction();
   731  000AF4  EC56  F00B         	call	_reset_interruptAction	;wreg free
   732  000AF8                     
   733                           ;main.c: 133:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   734  000AF8  0E00               	movlw	0
   735  000AFA  EC4E  F00B         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   736  000AFE                     
   737                           ;main.c: 134:                 inchBackwards(Half);
   738  000AFE  0E02               	movlw	2
   739  000B00  ECDB  F006         	call	_inchBackwards
   740                           
   741                           ;main.c: 135:                 break;
   742  000B04  EFC0  F005         	goto	l3849
   743  000B08                     l3811:
   744                           
   745                           ;main.c: 137:                 reset_interruptAction();
   746  000B08  EC56  F00B         	call	_reset_interruptAction	;wreg free
   747  000B0C                     
   748                           ;main.c: 138:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   749  000B0C  0E00               	movlw	0
   750  000B0E  EC4E  F00B         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   751  000B12                     
   752                           ;main.c: 139:                 inchForwards(Quarter);
   753  000B12  0E04               	movlw	4
   754  000B14  EC85  F006         	call	_inchForwards
   755                           
   756                           ;main.c: 140:                 break;
   757  000B18  EFC0  F005         	goto	l3849
   758  000B1C                     l3817:
   759                           
   760                           ;main.c: 142:                 reset_interruptAction();
   761  000B1C  EC56  F00B         	call	_reset_interruptAction	;wreg free
   762  000B20                     
   763                           ;main.c: 143:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   764  000B20  0E00               	movlw	0
   765  000B22  EC4E  F00B         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   766  000B26                     
   767                           ;main.c: 144:                 inchBackwards(Quarter);
   768  000B26  0E04               	movlw	4
   769  000B28  ECDB  F006         	call	_inchBackwards
   770                           
   771                           ;main.c: 145:                 break;
   772  000B2C  EFC0  F005         	goto	l3849
   773  000B30                     l3823:
   774                           
   775                           ;main.c: 147:                 reset_interruptAction();
   776  000B30  EC56  F00B         	call	_reset_interruptAction	;wreg free
   777  000B34                     
   778                           ;main.c: 148:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   779  000B34  0E00               	movlw	0
   780  000B36  EC4E  F00B         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   781  000B3A                     
   782                           ;main.c: 149:                 inchForwards(Eighth);
   783  000B3A  0E08               	movlw	8
   784  000B3C  EC85  F006         	call	_inchForwards
   785                           
   786                           ;main.c: 150:                 break;
   787  000B40  EFC0  F005         	goto	l3849
   788  000B44                     l3829:
   789                           
   790                           ;main.c: 152:                 reset_interruptAction();
   791  000B44  EC56  F00B         	call	_reset_interruptAction	;wreg free
   792  000B48                     
   793                           ;main.c: 153:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   794  000B48  0E00               	movlw	0
   795  000B4A  EC4E  F00B         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   796  000B4E                     
   797                           ;main.c: 154:                 inchBackwards(Eighth);
   798  000B4E  0E08               	movlw	8
   799  000B50  ECDB  F006         	call	_inchBackwards
   800                           
   801                           ;main.c: 155:                 break;
   802  000B54  EFC0  F005         	goto	l3849
   803  000B58                     l3835:
   804                           
   805                           ;main.c: 157:                 reset_interruptAction();
   806  000B58  EC56  F00B         	call	_reset_interruptAction	;wreg free
   807  000B5C                     
   808                           ;main.c: 158:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   809  000B5C  0E00               	movlw	0
   810  000B5E  EC4E  F00B         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   811  000B62                     
   812                           ;main.c: 159:                 inchBackwards(Sixteenth);
   813  000B62  0E10               	movlw	16
   814  000B64  ECDB  F006         	call	_inchBackwards
   815                           
   816                           ;main.c: 160:                 break;
   817  000B68  EFC0  F005         	goto	l3849
   818  000B6C                     l3841:
   819                           
   820                           ;main.c: 162:                 reset_interruptAction();
   821  000B6C  EC56  F00B         	call	_reset_interruptAction	;wreg free
   822  000B70                     
   823                           ;main.c: 163:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   824  000B70  0E00               	movlw	0
   825  000B72  EC4E  F00B         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   826  000B76                     
   827                           ;main.c: 164:                 inchBackwards(Sixteenth);
   828  000B76  0E10               	movlw	16
   829  000B78  ECDB  F006         	call	_inchBackwards
   830                           
   831                           ;main.c: 165:                 break;
   832  000B7C  EFC0  F005         	goto	l3849
   833  000B80                     l930:
   834  000B80                     l3849:
   835  000B80  EC60  F00B         	call	_get_interruptAction	;wreg free
   836  000B84  6E1F               	movwf	??_main^0,c
   837  000B86  6A20               	clrf	(??_main+1)^0,c
   838                           
   839                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   840                           ; Switch size 1, requested type "simple"
   841                           ; Number of cases is 1, Range of values is 0 to 0
   842                           ; switch strategies available:
   843                           ; Name         Instructions Cycles
   844                           ; simple_byte            4     3 (average)
   845                           ;	Chosen strategy is simple_byte
   846  000B88  5020               	movf	(??_main+1)^0,w,c
   847  000B8A  0A00               	xorlw	0	; case 0
   848  000B8C  B4D8               	btfsc	status,2,c
   849  000B8E  EFCB  F005         	goto	l3965
   850  000B92  EFC0  F005         	goto	l930
   851  000B96                     l3965:
   852                           
   853                           ; Switch size 1, requested type "simple"
   854                           ; Number of cases is 18, Range of values is 2 to 19
   855                           ; switch strategies available:
   856                           ; Name         Instructions Cycles
   857                           ; simple_byte           55    28 (average)
   858                           ;	Chosen strategy is simple_byte
   859  000B96  501F               	movf	??_main^0,w,c
   860  000B98  0A02               	xorlw	2	; case 2
   861  000B9A  B4D8               	btfsc	status,2,c
   862  000B9C  EF5C  F005         	goto	l3787
   863  000BA0  0A01               	xorlw	1	; case 3
   864  000BA2  B4D8               	btfsc	status,2,c
   865  000BA4  EF66  F005         	goto	l3793
   866  000BA8  0A07               	xorlw	7	; case 4
   867  000BAA  B4D8               	btfsc	status,2,c
   868  000BAC  EF70  F005         	goto	l3799
   869  000BB0  0A01               	xorlw	1	; case 5
   870  000BB2  B4D8               	btfsc	status,2,c
   871  000BB4  EF7A  F005         	goto	l3805
   872  000BB8  0A03               	xorlw	3	; case 6
   873  000BBA  B4D8               	btfsc	status,2,c
   874  000BBC  EF84  F005         	goto	l3811
   875  000BC0  0A01               	xorlw	1	; case 7
   876  000BC2  B4D8               	btfsc	status,2,c
   877  000BC4  EF8E  F005         	goto	l3817
   878  000BC8  0A0F               	xorlw	15	; case 8
   879  000BCA  B4D8               	btfsc	status,2,c
   880  000BCC  EF98  F005         	goto	l3823
   881  000BD0  0A01               	xorlw	1	; case 9
   882  000BD2  B4D8               	btfsc	status,2,c
   883  000BD4  EFA2  F005         	goto	l3829
   884  000BD8  0A03               	xorlw	3	; case 10
   885  000BDA  B4D8               	btfsc	status,2,c
   886  000BDC  EFAC  F005         	goto	l3835
   887  000BE0  0A01               	xorlw	1	; case 11
   888  000BE2  B4D8               	btfsc	status,2,c
   889  000BE4  EFB6  F005         	goto	l3841
   890  000BE8  0A07               	xorlw	7	; case 12
   891  000BEA  B4D8               	btfsc	status,2,c
   892  000BEC  EFFC  F004         	goto	l3739
   893  000BF0  0A01               	xorlw	1	; case 13
   894  000BF2  B4D8               	btfsc	status,2,c
   895  000BF4  EF08  F005         	goto	l3745
   896  000BF8  0A03               	xorlw	3	; case 14
   897  000BFA  B4D8               	btfsc	status,2,c
   898  000BFC  EF14  F005         	goto	l3751
   899  000C00  0A01               	xorlw	1	; case 15
   900  000C02  B4D8               	btfsc	status,2,c
   901  000C04  EF20  F005         	goto	l3757
   902  000C08  0A1F               	xorlw	31	; case 16
   903  000C0A  B4D8               	btfsc	status,2,c
   904  000C0C  EF2C  F005         	goto	l3763
   905  000C10  0A01               	xorlw	1	; case 17
   906  000C12  B4D8               	btfsc	status,2,c
   907  000C14  EF38  F005         	goto	l3769
   908  000C18  0A03               	xorlw	3	; case 18
   909  000C1A  B4D8               	btfsc	status,2,c
   910  000C1C  EF44  F005         	goto	l3775
   911  000C20  0A01               	xorlw	1	; case 19
   912  000C22  B4D8               	btfsc	status,2,c
   913  000C24  EF50  F005         	goto	l3781
   914  000C28  EFC0  F005         	goto	l930
   915  000C2C  EFF2  F004         	goto	start
   916  000C30                     __end_of_main:
   917                           	callstack 0
   918                           
   919 ;; *************** function _set_INTERRUPT_STEPPER_BREAK_FLAG *****************
   920 ;; Defined at:
   921 ;;		line 67 in file "mcc_generated_files/interrupt_manager.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;  in              1    wreg     _Bool 
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  in              1   12[COMRAM] _Bool 
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   936 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   938 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   939 ;;Total ram usage:        1 bytes
   940 ;; Hardware stack levels used:    1
   941 ;; Hardware stack levels required when called:    5
   942 ;; This function calls:
   943 ;;		Nothing
   944 ;; This function is called by:
   945 ;;		_main
   946 ;;		_calibrate
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           	psect	text1
   951  00169C                     __ptext1:
   952                           	callstack 0
   953  00169C                     _set_INTERRUPT_STEPPER_BREAK_FLAG:
   954                           	callstack 25
   955                           
   956                           ;incstack = 0
   957                           ;set_INTERRUPT_STEPPER_BREAK_FLAG@in stored from wreg
   958  00169C  6E0D               	movwf	set_INTERRUPT_STEPPER_BREAK_FLAG@in^0,c
   959  00169E                     
   960                           ;mcc_generated_files/interrupt_manager.c: 68:     INTERRUPT_STEPPER_BREAK_FLAG = in;
   961  00169E  C00D  F03D         	movff	set_INTERRUPT_STEPPER_BREAK_FLAG@in,_INTERRUPT_STEPPER_BREAK_FLAG	;volatile
   962  0016A2  0012               	return		;funcret
   963  0016A4                     __end_of_set_INTERRUPT_STEPPER_BREAK_FLAG:
   964                           	callstack 0
   965                           
   966 ;; *************** function _reset_interruptAction *****************
   967 ;; Defined at:
   968 ;;		line 75 in file "mcc_generated_files/interrupt_manager.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;		None
   971 ;; Auto vars:     Size  Location     Type
   972 ;;		None
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		wreg, status,2
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   986 ;;Total ram usage:        0 bytes
   987 ;; Hardware stack levels used:    1
   988 ;; Hardware stack levels required when called:    5
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_main
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text2
   997  0016AC                     __ptext2:
   998                           	callstack 0
   999  0016AC                     _reset_interruptAction:
  1000                           	callstack 25
  1001  0016AC                     
  1002                           ;mcc_generated_files/interrupt_manager.c: 76:     interruptAction = NULL_ACTION;
  1003  0016AC  0E00               	movlw	0
  1004  0016AE  6E3C               	movwf	_interruptAction^0,c	;volatile
  1005  0016B0  0012               	return		;funcret
  1006  0016B2                     __end_of_reset_interruptAction:
  1007                           	callstack 0
  1008                           
  1009 ;; *************** function _moveUntilZ *****************
  1010 ;; Defined at:
  1011 ;;		line 62 in file "step/step.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;  dir             1    wreg     enum E14453
  1014 ;;  size            1   15[COMRAM] enum E14457
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;  dir             1   17[COMRAM] enum E14453
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1026 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1027 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1028 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1029 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1030 ;;Total ram usage:        3 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; Hardware stack levels required when called:    6
  1033 ;; This function calls:
  1034 ;;		_get_INTERRUPT_STEPPER_BREAK_FLAG
  1035 ;;		_setDirection
  1036 ;;		_setStepSize
  1037 ;;		_stepperSleep
  1038 ;; This function is called by:
  1039 ;;		_main
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           	psect	text3
  1044  0010B4                     __ptext3:
  1045                           	callstack 0
  1046  0010B4                     _moveUntilZ:
  1047                           	callstack 24
  1048                           
  1049                           ;incstack = 0
  1050                           ;moveUntilZ@dir stored from wreg
  1051  0010B4  6E12               	movwf	moveUntilZ@dir^0,c
  1052  0010B6                     
  1053                           ;step/step.c: 63:     stepperSleep(0);
  1054  0010B6  0E00               	movlw	0
  1055  0010B8  EC3D  F00A         	call	_stepperSleep
  1056                           
  1057                           ;step/step.c: 64:     setDirection(dir);
  1058  0010BC  5012               	movf	moveUntilZ@dir^0,w,c
  1059  0010BE  EC4B  F00A         	call	_setDirection
  1060  0010C2                     
  1061                           ;step/step.c: 65:     setStepSize(size);
  1062  0010C2  5010               	movf	moveUntilZ@size^0,w,c
  1063  0010C4  EC84  F007         	call	_setStepSize
  1064                           
  1065                           ;step/step.c: 66:     while (get_INTERRUPT_STEPPER_BREAK_FLAG() == 0) {
  1066  0010C8  EF76  F008         	goto	l3285
  1067  0010CC                     l1004:
  1068  0010CC  827B               	bsf	123,1,c	;volatile
  1069  0010CE                     
  1070                           ;step/step.c: 70:         _delay((unsigned long)((1000)*(8000000/4000000.0)));
  1071  0010CE  0E03               	movlw	3
  1072  0010D0  6E11               	movwf	??_moveUntilZ^0,c
  1073  0010D2  0E98               	movlw	152
  1074  0010D4                     u1857:
  1075  0010D4  2EE8               	decfsz	wreg,f,c
  1076  0010D6  D7FE               	bra	u1857
  1077  0010D8  2E11               	decfsz	??_moveUntilZ^0,f,c
  1078  0010DA  D7FC               	bra	u1857
  1079  0010DC  927B               	bcf	123,1,c	;volatile
  1080  0010DE                     
  1081                           ;step/step.c: 72:         _delay((unsigned long)((1000)*(8000000/4000000.0)));
  1082  0010DE  0E03               	movlw	3
  1083  0010E0  6E11               	movwf	??_moveUntilZ^0,c
  1084  0010E2  0E98               	movlw	152
  1085  0010E4                     u1867:
  1086  0010E4  2EE8               	decfsz	wreg,f,c
  1087  0010E6  D7FE               	bra	u1867
  1088  0010E8  2E11               	decfsz	??_moveUntilZ^0,f,c
  1089  0010EA  D7FC               	bra	u1867
  1090  0010EC                     l3285:
  1091                           
  1092                           ;step/step.c: 66:     while (get_INTERRUPT_STEPPER_BREAK_FLAG() == 0) {
  1093  0010EC  EC5E  F00B         	call	_get_INTERRUPT_STEPPER_BREAK_FLAG	;wreg free
  1094  0010F0  0900               	iorlw	0
  1095  0010F2  B4D8               	btfsc	status,2,c
  1096  0010F4  EF7E  F008         	goto	u1241
  1097  0010F8  EF80  F008         	goto	u1240
  1098  0010FC                     u1241:
  1099  0010FC  EF66  F008         	goto	l1004
  1100  001100                     u1240:
  1101  001100                     
  1102                           ;step/step.c: 74:     stepperSleep(1);
  1103  001100  0E01               	movlw	1
  1104  001102  EC3D  F00A         	call	_stepperSleep
  1105  001106  0012               	return		;funcret
  1106  001108                     __end_of_moveUntilZ:
  1107                           	callstack 0
  1108                           
  1109 ;; *************** function _initPumps *****************
  1110 ;; Defined at:
  1111 ;;		line 8 in file "pumps/pumps.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;		None
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;		None
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		wreg, status,2, cstack
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1129 ;;Total ram usage:        0 bytes
  1130 ;; Hardware stack levels used:    1
  1131 ;; Hardware stack levels required when called:    6
  1132 ;; This function calls:
  1133 ;;		_TMR4_Start
  1134 ;; This function is called by:
  1135 ;;		_main
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text4
  1140  00145A                     __ptext4:
  1141                           	callstack 0
  1142  00145A                     _initPumps:
  1143                           	callstack 24
  1144  00145A                     
  1145                           ;pumps/pumps.c: 9:     TMR4_Start();
  1146  00145A  EC5C  F00B         	call	_TMR4_Start	;wreg free
  1147  00145E  867F               	bsf	127,3,c	;volatile
  1148  001460  927F               	bcf	127,1,c	;volatile
  1149  001462  847E               	bsf	126,2,c	;volatile
  1150  001464  967E               	bcf	126,3,c	;volatile
  1151  001466  987F               	bcf	127,4,c	;volatile
  1152  001468                     
  1153                           ;pumps/pumps.c: 15:     Pumps.Pump1_PWM = 0;
  1154  001468  0E00               	movlw	0
  1155  00146A  6E37               	movwf	(_Pumps+1)^0,c	;volatile
  1156  00146C  0E00               	movlw	0
  1157  00146E  6E36               	movwf	_Pumps^0,c	;volatile
  1158  001470                     
  1159                           ;pumps/pumps.c: 16:     Pumps.Pump2_PWM = 0;
  1160  001470  0E00               	movlw	0
  1161  001472  6E39               	movwf	(_Pumps+3)^0,c	;volatile
  1162  001474  0E00               	movlw	0
  1163  001476  6E38               	movwf	(_Pumps+2)^0,c	;volatile
  1164  001478  0012               	return		;funcret
  1165  00147A                     __end_of_initPumps:
  1166                           	callstack 0
  1167                           
  1168 ;; *************** function _TMR4_Start *****************
  1169 ;; Defined at:
  1170 ;;		line 109 in file "mcc_generated_files/tmr4.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;		None
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;		None
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      void 
  1177 ;; Registers used:
  1178 ;;		None
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1188 ;;Total ram usage:        0 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; Hardware stack levels required when called:    5
  1191 ;; This function calls:
  1192 ;;		Nothing
  1193 ;; This function is called by:
  1194 ;;		_initPumps
  1195 ;;		_TMR4_StartTimer
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text5
  1200  0016B8                     __ptext5:
  1201                           	callstack 0
  1202  0016B8                     _TMR4_Start:
  1203                           	callstack 24
  1204  0016B8                     
  1205                           ;mcc_generated_files/tmr4.c: 112:     T4CONbits.TMR4ON = 1;
  1206  0016B8  8EB7               	bsf	183,7,c	;volatile
  1207  0016BA  0012               	return		;funcret
  1208  0016BC                     __end_of_TMR4_Start:
  1209                           	callstack 0
  1210                           
  1211 ;; *************** function _inchForwards *****************
  1212 ;; Defined at:
  1213 ;;		line 96 in file "step/step.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  size            1    wreg     enum E14457
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;  size            1   27[COMRAM] enum E14457
  1218 ;;  multiplier      2   28[COMRAM] unsigned short 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1229 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1230 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1231 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1232 ;;Total ram usage:        5 bytes
  1233 ;; Hardware stack levels used:    1
  1234 ;; Hardware stack levels required when called:    7
  1235 ;; This function calls:
  1236 ;;		_Step
  1237 ;;		___wmul
  1238 ;; This function is called by:
  1239 ;;		_main
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text6
  1244  000D0A                     __ptext6:
  1245                           	callstack 0
  1246  000D0A                     _inchForwards:
  1247                           	callstack 23
  1248                           
  1249                           ;incstack = 0
  1250                           ;inchForwards@size stored from wreg
  1251  000D0A  6E1C               	movwf	inchForwards@size^0,c
  1252  000D0C                     
  1253                           ;step/step.c: 97:     uint16_t multiplier;;step/step.c: 102:         switch (size) {
  1254  000D0C  EFA6  F006         	goto	l3305
  1255  000D10                     l3291:
  1256                           
  1257                           ;step/step.c: 104:             {;step/step.c: 105:                 multiplier = 1;
  1258  000D10  0E00               	movlw	0
  1259  000D12  6E1E               	movwf	(inchForwards@multiplier+1)^0,c
  1260  000D14  0E01               	movlw	1
  1261  000D16  6E1D               	movwf	inchForwards@multiplier^0,c
  1262                           
  1263                           ;step/step.c: 106:                 break;
  1264  000D18  EFC7  F006         	goto	l3307
  1265  000D1C                     l3293:
  1266                           
  1267                           ;step/step.c: 109:             {;step/step.c: 110:                 multiplier = 2;
  1268  000D1C  0E00               	movlw	0
  1269  000D1E  6E1E               	movwf	(inchForwards@multiplier+1)^0,c
  1270  000D20  0E02               	movlw	2
  1271  000D22  6E1D               	movwf	inchForwards@multiplier^0,c
  1272                           
  1273                           ;step/step.c: 111:                 break;
  1274  000D24  EFC7  F006         	goto	l3307
  1275  000D28                     l3295:
  1276                           
  1277                           ;step/step.c: 114:             {;step/step.c: 115:                 multiplier = 4;
  1278  000D28  0E00               	movlw	0
  1279  000D2A  6E1E               	movwf	(inchForwards@multiplier+1)^0,c
  1280  000D2C  0E04               	movlw	4
  1281  000D2E  6E1D               	movwf	inchForwards@multiplier^0,c
  1282                           
  1283                           ;step/step.c: 116:                 break;
  1284  000D30  EFC7  F006         	goto	l3307
  1285  000D34                     l3297:
  1286                           
  1287                           ;step/step.c: 119:             {;step/step.c: 120:                  multiplier = 8;
  1288  000D34  0E00               	movlw	0
  1289  000D36  6E1E               	movwf	(inchForwards@multiplier+1)^0,c
  1290  000D38  0E08               	movlw	8
  1291  000D3A  6E1D               	movwf	inchForwards@multiplier^0,c
  1292                           
  1293                           ;step/step.c: 121:                 break;
  1294  000D3C  EFC7  F006         	goto	l3307
  1295  000D40                     l3299:
  1296                           
  1297                           ;step/step.c: 124:             {;step/step.c: 125:                  multiplier = 16;
  1298  000D40  0E00               	movlw	0
  1299  000D42  6E1E               	movwf	(inchForwards@multiplier+1)^0,c
  1300  000D44  0E10               	movlw	16
  1301  000D46  6E1D               	movwf	inchForwards@multiplier^0,c
  1302                           
  1303                           ;step/step.c: 126:                 break;
  1304  000D48  EFC7  F006         	goto	l3307
  1305  000D4C                     l3305:
  1306  000D4C  501C               	movf	inchForwards@size^0,w,c
  1307  000D4E  6E1A               	movwf	??_inchForwards^0,c
  1308  000D50  6A1B               	clrf	(??_inchForwards+1)^0,c
  1309                           
  1310                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1311                           ; Switch size 1, requested type "simple"
  1312                           ; Number of cases is 1, Range of values is 0 to 0
  1313                           ; switch strategies available:
  1314                           ; Name         Instructions Cycles
  1315                           ; simple_byte            4     3 (average)
  1316                           ;	Chosen strategy is simple_byte
  1317  000D52  501B               	movf	(??_inchForwards+1)^0,w,c
  1318  000D54  0A00               	xorlw	0	; case 0
  1319  000D56  B4D8               	btfsc	status,2,c
  1320  000D58  EFB0  F006         	goto	l3967
  1321  000D5C  EF88  F006         	goto	l3291
  1322  000D60                     l3967:
  1323                           
  1324                           ; Switch size 1, requested type "simple"
  1325                           ; Number of cases is 5, Range of values is 1 to 16
  1326                           ; switch strategies available:
  1327                           ; Name         Instructions Cycles
  1328                           ; simple_byte           16     9 (average)
  1329                           ;	Chosen strategy is simple_byte
  1330  000D60  501A               	movf	??_inchForwards^0,w,c
  1331  000D62  0A01               	xorlw	1	; case 1
  1332  000D64  B4D8               	btfsc	status,2,c
  1333  000D66  EF88  F006         	goto	l3291
  1334  000D6A  0A03               	xorlw	3	; case 2
  1335  000D6C  B4D8               	btfsc	status,2,c
  1336  000D6E  EF8E  F006         	goto	l3293
  1337  000D72  0A06               	xorlw	6	; case 4
  1338  000D74  B4D8               	btfsc	status,2,c
  1339  000D76  EF94  F006         	goto	l3295
  1340  000D7A  0A0C               	xorlw	12	; case 8
  1341  000D7C  B4D8               	btfsc	status,2,c
  1342  000D7E  EF9A  F006         	goto	l3297
  1343  000D82  0A18               	xorlw	24	; case 16
  1344  000D84  B4D8               	btfsc	status,2,c
  1345  000D86  EFA0  F006         	goto	l3299
  1346  000D8A  EF88  F006         	goto	l3291
  1347  000D8E                     l3307:
  1348                           
  1349                           ;step/step.c: 135:     Step(FORWARDS, (200 * 2 * multiplier), size);
  1350  000D8E  C01D  F00D         	movff	inchForwards@multiplier,___wmul@multiplier
  1351  000D92  C01E  F00E         	movff	inchForwards@multiplier+1,___wmul@multiplier+1
  1352  000D96  0E01               	movlw	1
  1353  000D98  6E10               	movwf	(___wmul@multiplicand+1)^0,c
  1354  000D9A  0E90               	movlw	144
  1355  000D9C  6E0F               	movwf	___wmul@multiplicand^0,c
  1356  000D9E  EC07  F00A         	call	___wmul	;wreg free
  1357  000DA2  C00D  F013         	movff	?___wmul,Step@num_steps
  1358  000DA6  C00E  F014         	movff	?___wmul+1,Step@num_steps+1
  1359  000DAA  C01C  F015         	movff	inchForwards@size,Step@size
  1360  000DAE  0E00               	movlw	0
  1361  000DB0  EC31  F007         	call	_Step
  1362  000DB4  0012               	return		;funcret
  1363  000DB6                     __end_of_inchForwards:
  1364                           	callstack 0
  1365                           
  1366 ;; *************** function _inchBackwards *****************
  1367 ;; Defined at:
  1368 ;;		line 138 in file "step/step.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  size            1    wreg     enum E14457
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;  size            1   27[COMRAM] enum E14457
  1373 ;;  multiplier      2   28[COMRAM] unsigned short 
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      void 
  1376 ;; Registers used:
  1377 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1384 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1385 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1386 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1387 ;;Total ram usage:        5 bytes
  1388 ;; Hardware stack levels used:    1
  1389 ;; Hardware stack levels required when called:    7
  1390 ;; This function calls:
  1391 ;;		_Step
  1392 ;;		___wmul
  1393 ;; This function is called by:
  1394 ;;		_main
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           	psect	text7
  1399  000DB6                     __ptext7:
  1400                           	callstack 0
  1401  000DB6                     _inchBackwards:
  1402                           	callstack 23
  1403                           
  1404                           ;incstack = 0
  1405                           ;inchBackwards@size stored from wreg
  1406  000DB6  6E1C               	movwf	inchBackwards@size^0,c
  1407  000DB8                     
  1408                           ;step/step.c: 139:     uint16_t multiplier;;step/step.c: 140:     switch (size) {
  1409  000DB8  EFFC  F006         	goto	l3329
  1410  000DBC                     l3315:
  1411                           
  1412                           ;step/step.c: 142:         {;step/step.c: 143:             multiplier = 1;
  1413  000DBC  0E00               	movlw	0
  1414  000DBE  6E1E               	movwf	(inchBackwards@multiplier+1)^0,c
  1415  000DC0  0E01               	movlw	1
  1416  000DC2  6E1D               	movwf	inchBackwards@multiplier^0,c
  1417                           
  1418                           ;step/step.c: 144:             break;
  1419  000DC4  EF1D  F007         	goto	l3331
  1420  000DC8                     l3317:
  1421                           
  1422                           ;step/step.c: 147:         {;step/step.c: 148:             multiplier = 2;
  1423  000DC8  0E00               	movlw	0
  1424  000DCA  6E1E               	movwf	(inchBackwards@multiplier+1)^0,c
  1425  000DCC  0E02               	movlw	2
  1426  000DCE  6E1D               	movwf	inchBackwards@multiplier^0,c
  1427                           
  1428                           ;step/step.c: 149:             break;
  1429  000DD0  EF1D  F007         	goto	l3331
  1430  000DD4                     l3319:
  1431                           
  1432                           ;step/step.c: 152:         {;step/step.c: 153:             multiplier = 4;
  1433  000DD4  0E00               	movlw	0
  1434  000DD6  6E1E               	movwf	(inchBackwards@multiplier+1)^0,c
  1435  000DD8  0E04               	movlw	4
  1436  000DDA  6E1D               	movwf	inchBackwards@multiplier^0,c
  1437                           
  1438                           ;step/step.c: 154:             break;
  1439  000DDC  EF1D  F007         	goto	l3331
  1440  000DE0                     l3321:
  1441                           
  1442                           ;step/step.c: 157:         {;step/step.c: 158:             multiplier = 8;
  1443  000DE0  0E00               	movlw	0
  1444  000DE2  6E1E               	movwf	(inchBackwards@multiplier+1)^0,c
  1445  000DE4  0E08               	movlw	8
  1446  000DE6  6E1D               	movwf	inchBackwards@multiplier^0,c
  1447                           
  1448                           ;step/step.c: 159:             break;
  1449  000DE8  EF1D  F007         	goto	l3331
  1450  000DEC                     l3323:
  1451                           
  1452                           ;step/step.c: 162:         {;step/step.c: 163:             multiplier = 16;
  1453  000DEC  0E00               	movlw	0
  1454  000DEE  6E1E               	movwf	(inchBackwards@multiplier+1)^0,c
  1455  000DF0  0E10               	movlw	16
  1456  000DF2  6E1D               	movwf	inchBackwards@multiplier^0,c
  1457                           
  1458                           ;step/step.c: 164:             break;
  1459  000DF4  EF1D  F007         	goto	l3331
  1460  000DF8                     l3329:
  1461  000DF8  501C               	movf	inchBackwards@size^0,w,c
  1462  000DFA  6E1A               	movwf	??_inchBackwards^0,c
  1463  000DFC  6A1B               	clrf	(??_inchBackwards+1)^0,c
  1464                           
  1465                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1466                           ; Switch size 1, requested type "simple"
  1467                           ; Number of cases is 1, Range of values is 0 to 0
  1468                           ; switch strategies available:
  1469                           ; Name         Instructions Cycles
  1470                           ; simple_byte            4     3 (average)
  1471                           ;	Chosen strategy is simple_byte
  1472  000DFE  501B               	movf	(??_inchBackwards+1)^0,w,c
  1473  000E00  0A00               	xorlw	0	; case 0
  1474  000E02  B4D8               	btfsc	status,2,c
  1475  000E04  EF06  F007         	goto	l3969
  1476  000E08  EFDE  F006         	goto	l3315
  1477  000E0C                     l3969:
  1478                           
  1479                           ; Switch size 1, requested type "simple"
  1480                           ; Number of cases is 5, Range of values is 1 to 16
  1481                           ; switch strategies available:
  1482                           ; Name         Instructions Cycles
  1483                           ; simple_byte           16     9 (average)
  1484                           ;	Chosen strategy is simple_byte
  1485  000E0C  501A               	movf	??_inchBackwards^0,w,c
  1486  000E0E  0A01               	xorlw	1	; case 1
  1487  000E10  B4D8               	btfsc	status,2,c
  1488  000E12  EFDE  F006         	goto	l3315
  1489  000E16  0A03               	xorlw	3	; case 2
  1490  000E18  B4D8               	btfsc	status,2,c
  1491  000E1A  EFE4  F006         	goto	l3317
  1492  000E1E  0A06               	xorlw	6	; case 4
  1493  000E20  B4D8               	btfsc	status,2,c
  1494  000E22  EFEA  F006         	goto	l3319
  1495  000E26  0A0C               	xorlw	12	; case 8
  1496  000E28  B4D8               	btfsc	status,2,c
  1497  000E2A  EFF0  F006         	goto	l3321
  1498  000E2E  0A18               	xorlw	24	; case 16
  1499  000E30  B4D8               	btfsc	status,2,c
  1500  000E32  EFF6  F006         	goto	l3323
  1501  000E36  EFDE  F006         	goto	l3315
  1502  000E3A                     l3331:
  1503                           
  1504                           ;step/step.c: 172:     Step(BACKWARDS, (200 * 2 * multiplier), size);
  1505  000E3A  C01D  F00D         	movff	inchBackwards@multiplier,___wmul@multiplier
  1506  000E3E  C01E  F00E         	movff	inchBackwards@multiplier+1,___wmul@multiplier+1
  1507  000E42  0E01               	movlw	1
  1508  000E44  6E10               	movwf	(___wmul@multiplicand+1)^0,c
  1509  000E46  0E90               	movlw	144
  1510  000E48  6E0F               	movwf	___wmul@multiplicand^0,c
  1511  000E4A  EC07  F00A         	call	___wmul	;wreg free
  1512  000E4E  C00D  F013         	movff	?___wmul,Step@num_steps
  1513  000E52  C00E  F014         	movff	?___wmul+1,Step@num_steps+1
  1514  000E56  C01C  F015         	movff	inchBackwards@size,Step@size
  1515  000E5A  0E01               	movlw	1
  1516  000E5C  EC31  F007         	call	_Step
  1517  000E60  0012               	return		;funcret
  1518  000E62                     __end_of_inchBackwards:
  1519                           	callstack 0
  1520                           
  1521 ;; *************** function ___wmul *****************
  1522 ;; Defined at:
  1523 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;  multiplier      2   12[COMRAM] unsigned int 
  1526 ;;  multiplicand    2   14[COMRAM] unsigned int 
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  product         2   16[COMRAM] unsigned int 
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  2   12[COMRAM] unsigned int 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2, status,0, prodl, prodh
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1538 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1539 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1541 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1542 ;;Total ram usage:        6 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; Hardware stack levels required when called:    5
  1545 ;; This function calls:
  1546 ;;		Nothing
  1547 ;; This function is called by:
  1548 ;;		_inchForwards
  1549 ;;		_inchBackwards
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text8
  1554  00140E                     __ptext8:
  1555                           	callstack 0
  1556  00140E                     ___wmul:
  1557                           	callstack 24
  1558  00140E  500D               	movf	___wmul@multiplier^0,w,c
  1559  001410  020F               	mulwf	___wmul@multiplicand^0,c
  1560  001412  CFF3 F011          	movff	prodl,___wmul@product
  1561  001416  CFF4 F012          	movff	prodh,___wmul@product+1
  1562  00141A  500D               	movf	___wmul@multiplier^0,w,c
  1563  00141C  0210               	mulwf	(___wmul@multiplicand+1)^0,c
  1564  00141E  50F3               	movf	243,w,c
  1565  001420  2612               	addwf	(___wmul@product+1)^0,f,c
  1566  001422  500E               	movf	(___wmul@multiplier+1)^0,w,c
  1567  001424  020F               	mulwf	___wmul@multiplicand^0,c
  1568  001426  50F3               	movf	243,w,c
  1569  001428  2612               	addwf	(___wmul@product+1)^0,f,c
  1570  00142A  C011  F00D         	movff	___wmul@product,?___wmul
  1571  00142E  C012  F00E         	movff	___wmul@product+1,?___wmul+1
  1572  001432  0012               	return		;funcret
  1573  001434                     __end_of___wmul:
  1574                           	callstack 0
  1575                           
  1576 ;; *************** function _Step *****************
  1577 ;; Defined at:
  1578 ;;		line 5 in file "step/step.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;  dir             1    wreg     enum E14453
  1581 ;;  num_steps       2   18[COMRAM] unsigned short 
  1582 ;;  size            1   20[COMRAM] enum E14457
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  dir             1   22[COMRAM] enum E14453
  1585 ;;  stepsCounter    2   23[COMRAM] unsigned short 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2, status,0, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1595 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1596 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1597 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1598 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1599 ;;Total ram usage:        7 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; Hardware stack levels required when called:    6
  1602 ;; This function calls:
  1603 ;;		_EUSART2_Write
  1604 ;;		_get_INTERRUPT_STEPPER_BREAK_FLAG
  1605 ;;		_setDirection
  1606 ;;		_setStepSize
  1607 ;;		_stepperSleep
  1608 ;; This function is called by:
  1609 ;;		_inchForwards
  1610 ;;		_inchBackwards
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           	psect	text9
  1615  000E62                     __ptext9:
  1616                           	callstack 0
  1617  000E62                     _Step:
  1618                           	callstack 23
  1619                           
  1620                           ;incstack = 0
  1621                           ;Step@dir stored from wreg
  1622  000E62  6E17               	movwf	Step@dir^0,c
  1623  000E64                     
  1624                           ;step/step.c: 8:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1625  000E64  0E34               	movlw	52
  1626  000E66  6E16               	movwf	??_Step^0,c
  1627  000E68  0EF2               	movlw	242
  1628  000E6A                     u1877:
  1629  000E6A  2EE8               	decfsz	wreg,f,c
  1630  000E6C  D7FE               	bra	u1877
  1631  000E6E  2E16               	decfsz	??_Step^0,f,c
  1632  000E70  D7FC               	bra	u1877
  1633  000E72                     
  1634                           ;step/step.c: 20:     setDirection(dir);
  1635  000E72  5017               	movf	Step@dir^0,w,c
  1636  000E74  EC4B  F00A         	call	_setDirection
  1637  000E78                     
  1638                           ;step/step.c: 23:     stepperSleep(0);
  1639  000E78  0E00               	movlw	0
  1640  000E7A  EC3D  F00A         	call	_stepperSleep
  1641  000E7E                     
  1642                           ;step/step.c: 24:     setStepSize(size);
  1643  000E7E  5015               	movf	Step@size^0,w,c
  1644  000E80  EC84  F007         	call	_setStepSize
  1645  000E84                     
  1646                           ;step/step.c: 26:     uint16_t stepsCounter;;step/step.c: 27:     for (stepsCounter = 0;
      +                           stepsCounter < num_steps; stepsCounter++) {
  1647  000E84  0E00               	movlw	0
  1648  000E86  6E19               	movwf	(Step@stepsCounter+1)^0,c
  1649  000E88  0E00               	movlw	0
  1650  000E8A  6E18               	movwf	Step@stepsCounter^0,c
  1651  000E8C  EF66  F007         	goto	l978
  1652  000E90                     l3213:
  1653                           
  1654                           ;step/step.c: 28:         if (get_INTERRUPT_STEPPER_BREAK_FLAG()) {
  1655  000E90  EC5E  F00B         	call	_get_INTERRUPT_STEPPER_BREAK_FLAG	;wreg free
  1656  000E94  0900               	iorlw	0
  1657  000E96  B4D8               	btfsc	status,2,c
  1658  000E98  EF50  F007         	goto	u1151
  1659  000E9C  EF52  F007         	goto	u1150
  1660  000EA0                     u1151:
  1661  000EA0  EF54  F007         	goto	l983
  1662  000EA4                     u1150:
  1663  000EA4  EF71  F007         	goto	l3225
  1664  000EA8                     l983:
  1665  000EA8  827B               	bsf	123,1,c	;volatile
  1666  000EAA                     
  1667                           ;step/step.c: 33:             _delay((unsigned long)((1000)*(8000000/4000000.0)));
  1668  000EAA  0E03               	movlw	3
  1669  000EAC  6E16               	movwf	??_Step^0,c
  1670  000EAE  0E98               	movlw	152
  1671  000EB0                     u1887:
  1672  000EB0  2EE8               	decfsz	wreg,f,c
  1673  000EB2  D7FE               	bra	u1887
  1674  000EB4  2E16               	decfsz	??_Step^0,f,c
  1675  000EB6  D7FC               	bra	u1887
  1676  000EB8  927B               	bcf	123,1,c	;volatile
  1677  000EBA                     
  1678                           ;step/step.c: 35:             _delay((unsigned long)((1000)*(8000000/4000000.0)));
  1679  000EBA  0E03               	movlw	3
  1680  000EBC  6E16               	movwf	??_Step^0,c
  1681  000EBE  0E98               	movlw	152
  1682  000EC0                     u1897:
  1683  000EC0  2EE8               	decfsz	wreg,f,c
  1684  000EC2  D7FE               	bra	u1897
  1685  000EC4  2E16               	decfsz	??_Step^0,f,c
  1686  000EC6  D7FC               	bra	u1897
  1687  000EC8                     
  1688                           ;step/step.c: 37:     }
  1689  000EC8  4A18               	infsnz	Step@stepsCounter^0,f,c
  1690  000ECA  2A19               	incf	(Step@stepsCounter+1)^0,f,c
  1691  000ECC                     l978:
  1692  000ECC  5013               	movf	Step@num_steps^0,w,c
  1693  000ECE  5C18               	subwf	Step@stepsCounter^0,w,c
  1694  000ED0  5014               	movf	(Step@num_steps+1)^0,w,c
  1695  000ED2  5819               	subwfb	(Step@stepsCounter+1)^0,w,c
  1696  000ED4  A0D8               	btfss	status,0,c
  1697  000ED6  EF6F  F007         	goto	u1161
  1698  000EDA  EF71  F007         	goto	u1160
  1699  000EDE                     u1161:
  1700  000EDE  EF48  F007         	goto	l3213
  1701  000EE2                     u1160:
  1702  000EE2                     l3225:
  1703                           
  1704                           ;step/step.c: 38:     if(stepsCounter == num_steps){
  1705  000EE2  5013               	movf	Step@num_steps^0,w,c
  1706  000EE4  1818               	xorwf	Step@stepsCounter^0,w,c
  1707  000EE6  E107               	bnz	u1171
  1708  000EE8  5014               	movf	(Step@num_steps+1)^0,w,c
  1709  000EEA  1819               	xorwf	(Step@stepsCounter+1)^0,w,c
  1710  000EEC  A4D8               	btfss	status,2,c
  1711  000EEE  EF7B  F007         	goto	u1171
  1712  000EF2  EF7D  F007         	goto	u1170
  1713  000EF6                     u1171:
  1714  000EF6  EF80  F007         	goto	l3229
  1715  000EFA                     u1170:
  1716  000EFA                     
  1717                           ;step/step.c: 40:         EUSART2_Write(0x0D);
  1718  000EFA  0E0D               	movlw	13
  1719  000EFC  EC67  F00A         	call	_EUSART2_Write
  1720  000F00                     l3229:
  1721                           
  1722                           ;step/step.c: 44:     stepperSleep(1);
  1723  000F00  0E01               	movlw	1
  1724  000F02  EC3D  F00A         	call	_stepperSleep
  1725  000F06  0012               	return		;funcret
  1726  000F08                     __end_of_Step:
  1727                           	callstack 0
  1728                           
  1729 ;; *************** function _stepperSleep *****************
  1730 ;; Defined at:
  1731 ;;		line 175 in file "step/step.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;  in              1    wreg     _Bool 
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;  in              1   12[COMRAM] _Bool 
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  1    wreg      void 
  1738 ;; Registers used:
  1739 ;;		wreg, status,2
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1746 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1748 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1749 ;;Total ram usage:        1 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; Hardware stack levels required when called:    5
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_Step
  1756 ;;		_moveUntilZ
  1757 ;;		_slowStepTest
  1758 ;;		_calibrate
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text10
  1763  00147A                     __ptext10:
  1764                           	callstack 0
  1765  00147A                     _stepperSleep:
  1766                           	callstack 24
  1767                           
  1768                           ;incstack = 0
  1769                           ;stepperSleep@in stored from wreg
  1770  00147A  6E0D               	movwf	stepperSleep@in^0,c
  1771  00147C                     
  1772                           ;step/step.c: 176:     if (in) {
  1773  00147C  500D               	movf	stepperSleep@in^0,w,c
  1774  00147E  B4D8               	btfsc	status,2,c
  1775  001480  EF44  F00A         	goto	u41
  1776  001484  EF46  F00A         	goto	u40
  1777  001488                     u41:
  1778  001488  EF49  F00A         	goto	l1048
  1779  00148C                     u40:
  1780  00148C  9879               	bcf	121,4,c	;volatile
  1781  00148E  EF4A  F00A         	goto	l1050
  1782  001492                     l1048:
  1783  001492  8879               	bsf	121,4,c	;volatile
  1784  001494                     l1050:
  1785  001494  0012               	return		;funcret
  1786  001496                     __end_of_stepperSleep:
  1787                           	callstack 0
  1788                           
  1789 ;; *************** function _setStepSize *****************
  1790 ;; Defined at:
  1791 ;;		line 193 in file "step/step.c"
  1792 ;; Parameters:    Size  Location     Type
  1793 ;;  size            1    wreg     enum E14457
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;  size            1   14[COMRAM] enum E14457
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  1    wreg      void 
  1798 ;; Registers used:
  1799 ;;		wreg, status,2, status,0
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1806 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1807 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1808 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1809 ;;Total ram usage:        3 bytes
  1810 ;; Hardware stack levels used:    1
  1811 ;; Hardware stack levels required when called:    5
  1812 ;; This function calls:
  1813 ;;		Nothing
  1814 ;; This function is called by:
  1815 ;;		_Step
  1816 ;;		_moveUntilZ
  1817 ;;		_slowStepTest
  1818 ;;		_calibrate
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text11
  1823  000F08                     __ptext11:
  1824                           	callstack 0
  1825  000F08                     _setStepSize:
  1826                           	callstack 24
  1827                           
  1828                           ;incstack = 0
  1829                           ;setStepSize@size stored from wreg
  1830  000F08  6E0F               	movwf	setStepSize@size^0,c
  1831  000F0A                     
  1832                           ;step/step.c: 194:     switch (size) {
  1833  000F0A  EFA3  F007         	goto	l1881
  1834  000F0E                     l1060:
  1835  000F0E  9280               	bcf	128,1,c	;volatile
  1836  000F10  9080               	bcf	128,0,c	;volatile
  1837  000F12  9A79               	bcf	121,5,c	;volatile
  1838  000F14  EFC8  F007         	goto	l1099
  1839  000F18                     l1068:
  1840  000F18  8280               	bsf	128,1,c	;volatile
  1841  000F1A  9080               	bcf	128,0,c	;volatile
  1842  000F1C  9A79               	bcf	121,5,c	;volatile
  1843  000F1E  EFC8  F007         	goto	l1099
  1844  000F22                     l1075:
  1845  000F22  9280               	bcf	128,1,c	;volatile
  1846  000F24  8080               	bsf	128,0,c	;volatile
  1847  000F26  9A79               	bcf	121,5,c	;volatile
  1848  000F28  EFC8  F007         	goto	l1099
  1849  000F2C                     l1082:
  1850  000F2C  8280               	bsf	128,1,c	;volatile
  1851  000F2E  8080               	bsf	128,0,c	;volatile
  1852  000F30  9A79               	bcf	121,5,c	;volatile
  1853  000F32  EFC8  F007         	goto	l1099
  1854  000F36                     l1089:
  1855  000F36  8280               	bsf	128,1,c	;volatile
  1856  000F38  8080               	bsf	128,0,c	;volatile
  1857  000F3A  8A79               	bsf	121,5,c	;volatile
  1858  000F3C  EFC8  F007         	goto	l1099
  1859  000F40                     l1097:
  1860  000F40  9879               	bcf	121,4,c	;volatile
  1861  000F42  EFC8  F007         	goto	l1099
  1862  000F46                     l1881:
  1863  000F46  500F               	movf	setStepSize@size^0,w,c
  1864  000F48  6E0D               	movwf	??_setStepSize^0,c
  1865  000F4A  6A0E               	clrf	(??_setStepSize+1)^0,c
  1866                           
  1867                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1868                           ; Switch size 1, requested type "simple"
  1869                           ; Number of cases is 1, Range of values is 0 to 0
  1870                           ; switch strategies available:
  1871                           ; Name         Instructions Cycles
  1872                           ; simple_byte            4     3 (average)
  1873                           ;	Chosen strategy is simple_byte
  1874  000F4C  500E               	movf	(??_setStepSize+1)^0,w,c
  1875  000F4E  0A00               	xorlw	0	; case 0
  1876  000F50  B4D8               	btfsc	status,2,c
  1877  000F52  EFAD  F007         	goto	l3971
  1878  000F56  EFA0  F007         	goto	l1097
  1879  000F5A                     l3971:
  1880                           
  1881                           ; Switch size 1, requested type "simple"
  1882                           ; Number of cases is 6, Range of values is 0 to 16
  1883                           ; switch strategies available:
  1884                           ; Name         Instructions Cycles
  1885                           ; simple_byte           19    10 (average)
  1886                           ;	Chosen strategy is simple_byte
  1887  000F5A  500D               	movf	??_setStepSize^0,w,c
  1888  000F5C  0A00               	xorlw	0	; case 0
  1889  000F5E  B4D8               	btfsc	status,2,c
  1890  000F60  EFA0  F007         	goto	l1097
  1891  000F64  0A01               	xorlw	1	; case 1
  1892  000F66  B4D8               	btfsc	status,2,c
  1893  000F68  EF87  F007         	goto	l1060
  1894  000F6C  0A03               	xorlw	3	; case 2
  1895  000F6E  B4D8               	btfsc	status,2,c
  1896  000F70  EF8C  F007         	goto	l1068
  1897  000F74  0A06               	xorlw	6	; case 4
  1898  000F76  B4D8               	btfsc	status,2,c
  1899  000F78  EF91  F007         	goto	l1075
  1900  000F7C  0A0C               	xorlw	12	; case 8
  1901  000F7E  B4D8               	btfsc	status,2,c
  1902  000F80  EF96  F007         	goto	l1082
  1903  000F84  0A18               	xorlw	24	; case 16
  1904  000F86  B4D8               	btfsc	status,2,c
  1905  000F88  EF9B  F007         	goto	l1089
  1906  000F8C  EFA0  F007         	goto	l1097
  1907  000F90                     l1099:
  1908  000F90  0012               	return		;funcret
  1909  000F92                     __end_of_setStepSize:
  1910                           	callstack 0
  1911                           
  1912 ;; *************** function _setDirection *****************
  1913 ;; Defined at:
  1914 ;;		line 243 in file "step/step.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;  dir             1    wreg     enum E14453
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;  dir             1   12[COMRAM] enum E14453
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1929 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1931 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1932 ;;Total ram usage:        1 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    5
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_Step
  1939 ;;		_moveUntilZ
  1940 ;;		_slowStepTest
  1941 ;;		_calibrate
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           	psect	text12
  1946  001496                     __ptext12:
  1947                           	callstack 0
  1948  001496                     _setDirection:
  1949                           	callstack 24
  1950                           
  1951                           ;incstack = 0
  1952                           ;setDirection@dir stored from wreg
  1953  001496  6E0D               	movwf	setDirection@dir^0,c
  1954  001498                     
  1955                           ;step/step.c: 244:     if (dir == FORWARDS) {
  1956  001498  500D               	movf	setDirection@dir^0,w,c
  1957  00149A  A4D8               	btfss	status,2,c
  1958  00149C  EF52  F00A         	goto	u31
  1959  0014A0  EF54  F00A         	goto	u30
  1960  0014A4                     u31:
  1961  0014A4  EF57  F00A         	goto	l1106
  1962  0014A8                     u30:
  1963  0014A8  807B               	bsf	123,0,c	;volatile
  1964  0014AA  EF58  F00A         	goto	l1108
  1965  0014AE                     l1106:
  1966  0014AE  907B               	bcf	123,0,c	;volatile
  1967  0014B0                     l1108:
  1968  0014B0  0012               	return		;funcret
  1969  0014B2                     __end_of_setDirection:
  1970                           	callstack 0
  1971                           
  1972 ;; *************** function _get_INTERRUPT_STEPPER_BREAK_FLAG *****************
  1973 ;; Defined at:
  1974 ;;		line 63 in file "mcc_generated_files/interrupt_manager.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;		None
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;		None
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      _Bool 
  1981 ;; Registers used:
  1982 ;;		wreg, status,2
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1992 ;;Total ram usage:        0 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; Hardware stack levels required when called:    5
  1995 ;; This function calls:
  1996 ;;		Nothing
  1997 ;; This function is called by:
  1998 ;;		_Step
  1999 ;;		_moveUntilZ
  2000 ;;		_slowStepTest
  2001 ;;		_calibrate
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           	psect	text13
  2006  0016BC                     __ptext13:
  2007                           	callstack 0
  2008  0016BC                     _get_INTERRUPT_STEPPER_BREAK_FLAG:
  2009                           	callstack 24
  2010  0016BC                     
  2011                           ;mcc_generated_files/interrupt_manager.c: 64:     return INTERRUPT_STEPPER_BREAK_FLAG;
  2012  0016BC  503D               	movf	_INTERRUPT_STEPPER_BREAK_FLAG^0,w,c	;volatile
  2013  0016BE  0012               	return		;funcret
  2014  0016C0                     __end_of_get_INTERRUPT_STEPPER_BREAK_FLAG:
  2015                           	callstack 0
  2016                           
  2017 ;; *************** function _EUSART2_Write *****************
  2018 ;; Defined at:
  2019 ;;		line 112 in file "mcc_generated_files/eusart2.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  txData          1    wreg     unsigned char 
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;  txData          1   12[COMRAM] unsigned char 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      void 
  2026 ;; Registers used:
  2027 ;;		wreg
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2034 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2036 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2037 ;;Total ram usage:        1 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; Hardware stack levels required when called:    5
  2040 ;; This function calls:
  2041 ;;		Nothing
  2042 ;; This function is called by:
  2043 ;;		_Step
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text14
  2048  0014CE                     __ptext14:
  2049                           	callstack 0
  2050  0014CE                     _EUSART2_Write:
  2051                           	callstack 23
  2052                           
  2053                           ;incstack = 0
  2054                           ;EUSART2_Write@txData stored from wreg
  2055  0014CE  6E0D               	movwf	EUSART2_Write@txData^0,c
  2056  0014D0                     l279:
  2057                           
  2058                           ;mcc_generated_files/eusart2.c: 115:     while(0 == PIR3bits.TX2IF)
  2059  0014D0  010E               	movlb	14	; () banked
  2060  0014D2  AD36               	btfss	54,6,b	;volatile
  2061  0014D4  EF6E  F00A         	goto	u11
  2062  0014D8  EF70  F00A         	goto	u10
  2063  0014DC                     u11:
  2064  0014DC  EF68  F00A         	goto	l279
  2065  0014E0                     u10:
  2066  0014E0                     
  2067                           ; BSR set to: 14
  2068                           ;mcc_generated_files/eusart2.c: 120:     TX2REG = txData;
  2069  0014E0  C00D  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
  2070  0014E4                     
  2071                           ; BSR set to: 14
  2072  0014E4  0012               	return		;funcret
  2073  0014E6                     __end_of_EUSART2_Write:
  2074                           	callstack 0
  2075                           
  2076 ;; *************** function _get_interruptAction *****************
  2077 ;; Defined at:
  2078 ;;		line 71 in file "mcc_generated_files/interrupt_manager.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;		None
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;		None
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  1    wreg      unsigned char 
  2085 ;; Registers used:
  2086 ;;		wreg, status,2
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2096 ;;Total ram usage:        0 bytes
  2097 ;; Hardware stack levels used:    1
  2098 ;; Hardware stack levels required when called:    5
  2099 ;; This function calls:
  2100 ;;		Nothing
  2101 ;; This function is called by:
  2102 ;;		_main
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           	psect	text15
  2107  0016C0                     __ptext15:
  2108                           	callstack 0
  2109  0016C0                     _get_interruptAction:
  2110                           	callstack 25
  2111  0016C0                     
  2112                           ;mcc_generated_files/interrupt_manager.c: 72:     return interruptAction;
  2113  0016C0  503C               	movf	_interruptAction^0,w,c	;volatile
  2114  0016C2  0012               	return		;funcret
  2115  0016C4                     __end_of_get_interruptAction:
  2116                           	callstack 0
  2117                           
  2118 ;; *************** function _SYSTEM_Initialize *****************
  2119 ;; Defined at:
  2120 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;		None
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;		None
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg, status,2, status,0, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2138 ;;Total ram usage:        0 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; Hardware stack levels required when called:    7
  2141 ;; This function calls:
  2142 ;;		_ADCC_Initialize
  2143 ;;		_EUSART2_Initialize
  2144 ;;		_EUSART4_Initialize
  2145 ;;		_EXT_INT_Initialize
  2146 ;;		_INTERRUPT_Initialize
  2147 ;;		_OSCILLATOR_Initialize
  2148 ;;		_PIN_MANAGER_Initialize
  2149 ;;		_PMD_Initialize
  2150 ;;		_PWM1_Initialize
  2151 ;;		_PWM2_Initialize
  2152 ;;		_TMR0_Initialize
  2153 ;;		_TMR4_Initialize
  2154 ;; This function is called by:
  2155 ;;		_main
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           	psect	text16
  2160  00123C                     __ptext16:
  2161                           	callstack 0
  2162  00123C                     _SYSTEM_Initialize:
  2163                           	callstack 23
  2164  00123C                     
  2165                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  2166  00123C  ECC6  F00A         	call	_INTERRUPT_Initialize	;wreg free
  2167                           
  2168                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  2169  001240  EC59  F00A         	call	_PMD_Initialize	;wreg free
  2170                           
  2171                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2172  001244  EC18  F006         	call	_PIN_MANAGER_Initialize	;wreg free
  2173                           
  2174                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2175  001248  EC73  F00A         	call	_OSCILLATOR_Initialize	;wreg free
  2176                           
  2177                           ;mcc_generated_files/mcc.c: 56:     PWM1_Initialize();
  2178  00124C  ECEF  F00A         	call	_PWM1_Initialize	;wreg free
  2179                           
  2180                           ;mcc_generated_files/mcc.c: 57:     PWM2_Initialize();
  2181  001250  ECE6  F00A         	call	_PWM2_Initialize	;wreg free
  2182  001254                     
  2183                           ;mcc_generated_files/mcc.c: 58:     ADCC_Initialize();
  2184  001254  EC2B  F008         	call	_ADCC_Initialize	;wreg free
  2185  001258                     
  2186                           ;mcc_generated_files/mcc.c: 59:     TMR4_Initialize();
  2187  001258  EC37  F009         	call	_TMR4_Initialize	;wreg free
  2188  00125C                     
  2189                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
  2190  00125C  ECC9  F007         	call	_EXT_INT_Initialize	;wreg free
  2191  001260                     
  2192                           ;mcc_generated_files/mcc.c: 61:     TMR0_Initialize();
  2193  001260  ECF3  F009         	call	_TMR0_Initialize	;wreg free
  2194                           
  2195                           ;mcc_generated_files/mcc.c: 62:     EUSART4_Initialize();
  2196  001264  EC7F  F00A         	call	_EUSART4_Initialize	;wreg free
  2197                           
  2198                           ;mcc_generated_files/mcc.c: 63:     EUSART2_Initialize();
  2199  001268  EC8B  F00A         	call	_EUSART2_Initialize	;wreg free
  2200  00126C  0012               	return		;funcret
  2201  00126E                     __end_of_SYSTEM_Initialize:
  2202                           	callstack 0
  2203                           
  2204 ;; *************** function _TMR4_Initialize *****************
  2205 ;; Defined at:
  2206 ;;		line 65 in file "mcc_generated_files/tmr4.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;		None
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;		None
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  1    wreg      void 
  2213 ;; Registers used:
  2214 ;;		wreg, status,2, status,0, cstack
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2224 ;;Total ram usage:        0 bytes
  2225 ;; Hardware stack levels used:    1
  2226 ;; Hardware stack levels required when called:    6
  2227 ;; This function calls:
  2228 ;;		_TMR4_SetInterruptHandler
  2229 ;; This function is called by:
  2230 ;;		_SYSTEM_Initialize
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           	psect	text17
  2235  00126E                     __ptext17:
  2236                           	callstack 0
  2237  00126E                     _TMR4_Initialize:
  2238                           	callstack 23
  2239  00126E                     
  2240                           ;mcc_generated_files/tmr4.c: 70:     T4CLKCON = 0x01;
  2241  00126E  0E01               	movlw	1
  2242  001270  6EB9               	movwf	185,c	;volatile
  2243                           
  2244                           ;mcc_generated_files/tmr4.c: 73:     T4HLT = 0x00;
  2245  001272  0E00               	movlw	0
  2246  001274  6EB8               	movwf	184,c	;volatile
  2247                           
  2248                           ;mcc_generated_files/tmr4.c: 76:     T4RST = 0x00;
  2249  001276  0E00               	movlw	0
  2250  001278  6EBA               	movwf	186,c	;volatile
  2251                           
  2252                           ;mcc_generated_files/tmr4.c: 79:     T4PR = 0x7C;
  2253  00127A  0E7C               	movlw	124
  2254  00127C  6EB6               	movwf	182,c	;volatile
  2255                           
  2256                           ;mcc_generated_files/tmr4.c: 82:     T4TMR = 0x00;
  2257  00127E  0E00               	movlw	0
  2258  001280  6EB5               	movwf	181,c	;volatile
  2259  001282                     
  2260                           ;mcc_generated_files/tmr4.c: 85:     PIR5bits.TMR4IF = 0;
  2261  001282  010E               	movlb	14	; () banked
  2262  001284  9738               	bcf	56,3,b	;volatile
  2263  001286                     
  2264                           ; BSR set to: 14
  2265                           ;mcc_generated_files/tmr4.c: 88:     PIE5bits.TMR4IE = 1;
  2266  001286  872E               	bsf	46,3,b	;volatile
  2267  001288                     
  2268                           ; BSR set to: 14
  2269                           ;mcc_generated_files/tmr4.c: 91:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
  2270  001288  0E52               	movlw	low _TMR4_DefaultInterruptHandler
  2271  00128A  6E0D               	movwf	TMR4_SetInterruptHandler@InterruptHandler^0,c
  2272  00128C  0E16               	movlw	high _TMR4_DefaultInterruptHandler
  2273  00128E  6E0E               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+1)^0,c
  2274  001290  0E00               	movlw	low (_TMR4_DefaultInterruptHandler shr (0+16))
  2275  001292  6E0F               	movwf	(TMR4_SetInterruptHandler@InterruptHandler+2)^0,c
  2276  001294  ECF8  F00A         	call	_TMR4_SetInterruptHandler	;wreg free
  2277  001298                     
  2278                           ;mcc_generated_files/tmr4.c: 94:     T4CON = 0x8F;
  2279  001298  0E8F               	movlw	143
  2280  00129A  6EB7               	movwf	183,c	;volatile
  2281  00129C  0012               	return		;funcret
  2282  00129E                     __end_of_TMR4_Initialize:
  2283                           	callstack 0
  2284                           
  2285 ;; *************** function _TMR4_SetInterruptHandler *****************
  2286 ;; Defined at:
  2287 ;;		line 194 in file "mcc_generated_files/tmr4.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  InterruptHan    3   12[COMRAM] PTR FTN()void 
  2290 ;;		 -> TMR4_DefaultInterruptHandler(1), 
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;		None
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  1    wreg      void 
  2295 ;; Registers used:
  2296 ;;		wreg, status,2, status,0
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2302 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2305 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2306 ;;Total ram usage:        3 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; Hardware stack levels required when called:    5
  2309 ;; This function calls:
  2310 ;;		Nothing
  2311 ;; This function is called by:
  2312 ;;		_TMR4_Initialize
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           	psect	text18
  2317  0015F0                     __ptext18:
  2318                           	callstack 0
  2319  0015F0                     _TMR4_SetInterruptHandler:
  2320                           	callstack 23
  2321  0015F0                     
  2322                           ;mcc_generated_files/tmr4.c: 195:     TMR4_InterruptHandler = InterruptHandler;
  2323  0015F0  C00D  F033         	movff	TMR4_SetInterruptHandler@InterruptHandler,_TMR4_InterruptHandler
  2324  0015F4  C00E  F034         	movff	TMR4_SetInterruptHandler@InterruptHandler+1,_TMR4_InterruptHandler+1
  2325  0015F8  C00F  F035         	movff	TMR4_SetInterruptHandler@InterruptHandler+2,_TMR4_InterruptHandler+2
  2326  0015FC  0012               	return		;funcret
  2327  0015FE                     __end_of_TMR4_SetInterruptHandler:
  2328                           	callstack 0
  2329                           
  2330 ;; *************** function _TMR0_Initialize *****************
  2331 ;; Defined at:
  2332 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;		None
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;		None
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  1    wreg      void 
  2339 ;; Registers used:
  2340 ;;		wreg, status,2, status,0, cstack
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2350 ;;Total ram usage:        0 bytes
  2351 ;; Hardware stack levels used:    1
  2352 ;; Hardware stack levels required when called:    6
  2353 ;; This function calls:
  2354 ;;		_TMR0_SetInterruptHandler
  2355 ;; This function is called by:
  2356 ;;		_SYSTEM_Initialize
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	text19
  2361  0013E6                     __ptext19:
  2362                           	callstack 0
  2363  0013E6                     _TMR0_Initialize:
  2364                           	callstack 23
  2365  0013E6                     
  2366                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x5F;
  2367  0013E6  0E5F               	movlw	95
  2368  0013E8  6ED6               	movwf	214,c	;volatile
  2369                           
  2370                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xBE;
  2371  0013EA  0EBE               	movlw	190
  2372  0013EC  6ED4               	movwf	212,c	;volatile
  2373                           
  2374                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  2375  0013EE  0E00               	movlw	0
  2376  0013F0  6ED3               	movwf	211,c	;volatile
  2377  0013F2                     
  2378                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  2379  0013F2  010E               	movlb	14	; () banked
  2380  0013F4  9B33               	bcf	51,5,b	;volatile
  2381  0013F6                     
  2382                           ; BSR set to: 14
  2383                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  2384  0013F6  8B29               	bsf	41,5,b	;volatile
  2385  0013F8                     
  2386                           ; BSR set to: 14
  2387                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2388  0013F8  0EC8               	movlw	low _TMR0_DefaultInterruptHandler
  2389  0013FA  6E0D               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  2390  0013FC  0E16               	movlw	high _TMR0_DefaultInterruptHandler
  2391  0013FE  6E0E               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  2392  001400  0E00               	movlw	low (_TMR0_DefaultInterruptHandler shr (0+16))
  2393  001402  6E0F               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+2)^0,c
  2394  001404  ECFF  F00A         	call	_TMR0_SetInterruptHandler	;wreg free
  2395  001408                     
  2396                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x8F;
  2397  001408  0E8F               	movlw	143
  2398  00140A  6ED5               	movwf	213,c	;volatile
  2399  00140C  0012               	return		;funcret
  2400  00140E                     __end_of_TMR0_Initialize:
  2401                           	callstack 0
  2402                           
  2403 ;; *************** function _TMR0_SetInterruptHandler *****************
  2404 ;; Defined at:
  2405 ;;		line 142 in file "mcc_generated_files/tmr0.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;  InterruptHan    3   12[COMRAM] PTR FTN()void 
  2408 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;		None
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2420 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2423 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2424 ;;Total ram usage:        3 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; Hardware stack levels required when called:    5
  2427 ;; This function calls:
  2428 ;;		Nothing
  2429 ;; This function is called by:
  2430 ;;		_TMR0_Initialize
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           	psect	text20
  2435  0015FE                     __ptext20:
  2436                           	callstack 0
  2437  0015FE                     _TMR0_SetInterruptHandler:
  2438                           	callstack 23
  2439  0015FE                     
  2440                           ;mcc_generated_files/tmr0.c: 143:     TMR0_InterruptHandler = InterruptHandler;
  2441  0015FE  C00D  F030         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  2442  001602  C00E  F031         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  2443  001606  C00F  F032         	movff	TMR0_SetInterruptHandler@InterruptHandler+2,_TMR0_InterruptHandler+2
  2444  00160A  0012               	return		;funcret
  2445  00160C                     __end_of_TMR0_SetInterruptHandler:
  2446                           	callstack 0
  2447                           
  2448 ;; *************** function _PWM2_Initialize *****************
  2449 ;; Defined at:
  2450 ;;		line 64 in file "mcc_generated_files/pwm2.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;		None
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;		None
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      void 
  2457 ;; Registers used:
  2458 ;;		wreg, status,2
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2468 ;;Total ram usage:        0 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:    5
  2471 ;; This function calls:
  2472 ;;		Nothing
  2473 ;; This function is called by:
  2474 ;;		_SYSTEM_Initialize
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text21
  2479  0015CC                     __ptext21:
  2480                           	callstack 0
  2481  0015CC                     _PWM2_Initialize:
  2482                           	callstack 24
  2483  0015CC                     
  2484                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x8C;
  2485  0015CC  0E8C               	movlw	140
  2486  0015CE  6EA7               	movwf	167,c	;volatile
  2487                           
  2488                           ;mcc_generated_files/pwm2.c: 72:  CCPR2H = 0x00;
  2489  0015D0  0E00               	movlw	0
  2490  0015D2  6EA6               	movwf	166,c	;volatile
  2491                           
  2492                           ;mcc_generated_files/pwm2.c: 75:  CCPR2L = 0x00;
  2493  0015D4  0E00               	movlw	0
  2494  0015D6  6EA5               	movwf	165,c	;volatile
  2495  0015D8                     
  2496                           ;mcc_generated_files/pwm2.c: 86:     CCPTMRS0bits.C2TSEL0 = 0x1;
  2497  0015D8  84AD               	bsf	173,2,c	;volatile
  2498  0015DA                     
  2499                           ;mcc_generated_files/pwm2.c: 87:  CCPTMRS0bits.C2TSEL1 = 0x0;
  2500  0015DA  96AD               	bcf	173,3,c	;volatile
  2501  0015DC  0012               	return		;funcret
  2502  0015DE                     __end_of_PWM2_Initialize:
  2503                           	callstack 0
  2504                           
  2505 ;; *************** function _PWM1_Initialize *****************
  2506 ;; Defined at:
  2507 ;;		line 64 in file "mcc_generated_files/pwm1.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;		None
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;		None
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      void 
  2514 ;; Registers used:
  2515 ;;		wreg, status,2
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2525 ;;Total ram usage:        0 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:    5
  2528 ;; This function calls:
  2529 ;;		Nothing
  2530 ;; This function is called by:
  2531 ;;		_SYSTEM_Initialize
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text22
  2536  0015DE                     __ptext22:
  2537                           	callstack 0
  2538  0015DE                     _PWM1_Initialize:
  2539                           	callstack 24
  2540  0015DE                     
  2541                           ;mcc_generated_files/pwm1.c: 69:  CCP1CON = 0x8C;
  2542  0015DE  0E8C               	movlw	140
  2543  0015E0  6EAB               	movwf	171,c	;volatile
  2544                           
  2545                           ;mcc_generated_files/pwm1.c: 72:  CCPR1H = 0x00;
  2546  0015E2  0E00               	movlw	0
  2547  0015E4  6EAA               	movwf	170,c	;volatile
  2548                           
  2549                           ;mcc_generated_files/pwm1.c: 75:  CCPR1L = 0x00;
  2550  0015E6  0E00               	movlw	0
  2551  0015E8  6EA9               	movwf	169,c	;volatile
  2552  0015EA                     
  2553                           ;mcc_generated_files/pwm1.c: 86:     CCPTMRS0bits.C1TSEL0 = 0x1;
  2554  0015EA  80AD               	bsf	173,0,c	;volatile
  2555  0015EC                     
  2556                           ;mcc_generated_files/pwm1.c: 87:  CCPTMRS0bits.C1TSEL1 = 0x0;
  2557  0015EC  92AD               	bcf	173,1,c	;volatile
  2558  0015EE  0012               	return		;funcret
  2559  0015F0                     __end_of_PWM1_Initialize:
  2560                           	callstack 0
  2561                           
  2562 ;; *************** function _PMD_Initialize *****************
  2563 ;; Defined at:
  2564 ;;		line 80 in file "mcc_generated_files/mcc.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;		None
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;		None
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  1    wreg      void 
  2571 ;; Registers used:
  2572 ;;		wreg, status,2
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2582 ;;Total ram usage:        0 bytes
  2583 ;; Hardware stack levels used:    1
  2584 ;; Hardware stack levels required when called:    5
  2585 ;; This function calls:
  2586 ;;		Nothing
  2587 ;; This function is called by:
  2588 ;;		_SYSTEM_Initialize
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           	psect	text23
  2593  0014B2                     __ptext23:
  2594                           	callstack 0
  2595  0014B2                     _PMD_Initialize:
  2596                           	callstack 24
  2597  0014B2                     
  2598                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
  2599  0014B2  0E00               	movlw	0
  2600  0014B4  010E               	movlb	14	; () banked
  2601  0014B6  6F4C               	movwf	76,b	;volatile
  2602                           
  2603                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
  2604  0014B8  0E00               	movlw	0
  2605  0014BA  6F4D               	movwf	77,b	;volatile
  2606                           
  2607                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
  2608  0014BC  0E00               	movlw	0
  2609  0014BE  6F4E               	movwf	78,b	;volatile
  2610                           
  2611                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
  2612  0014C0  0E00               	movlw	0
  2613  0014C2  6F4F               	movwf	79,b	;volatile
  2614                           
  2615                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
  2616  0014C4  0E00               	movlw	0
  2617  0014C6  6F50               	movwf	80,b	;volatile
  2618                           
  2619                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
  2620  0014C8  0E00               	movlw	0
  2621  0014CA  6F51               	movwf	81,b	;volatile
  2622  0014CC                     
  2623                           ; BSR set to: 14
  2624  0014CC  0012               	return		;funcret
  2625  0014CE                     __end_of_PMD_Initialize:
  2626                           	callstack 0
  2627                           
  2628 ;; *************** function _PIN_MANAGER_Initialize *****************
  2629 ;; Defined at:
  2630 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;		None
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;		None
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      void 
  2637 ;; Registers used:
  2638 ;;		wreg, status,2
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2648 ;;Total ram usage:        0 bytes
  2649 ;; Hardware stack levels used:    1
  2650 ;; Hardware stack levels required when called:    5
  2651 ;; This function calls:
  2652 ;;		Nothing
  2653 ;; This function is called by:
  2654 ;;		_SYSTEM_Initialize
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           	psect	text24
  2659  000C30                     __ptext24:
  2660                           	callstack 0
  2661  000C30                     _PIN_MANAGER_Initialize:
  2662                           	callstack 24
  2663  000C30                     
  2664                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x00;
  2665  000C30  0E00               	movlw	0
  2666  000C32  6E7D               	movwf	125,c	;volatile
  2667                           
  2668                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
  2669  000C34  0E00               	movlw	0
  2670  000C36  6E7C               	movwf	124,c	;volatile
  2671                           
  2672                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
  2673  000C38  0E00               	movlw	0
  2674  000C3A  6E79               	movwf	121,c	;volatile
  2675                           
  2676                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
  2677  000C3C  0E00               	movlw	0
  2678  000C3E  6E7E               	movwf	126,c	;volatile
  2679                           
  2680                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x0F;
  2681  000C40  0E0F               	movlw	15
  2682  000C42  6E7A               	movwf	122,c	;volatile
  2683                           
  2684                           ;mcc_generated_files/pin_manager.c: 67:     LATG = 0x00;
  2685  000C44  0E00               	movlw	0
  2686  000C46  6E7F               	movwf	127,c	;volatile
  2687                           
  2688                           ;mcc_generated_files/pin_manager.c: 68:     LATC = 0x00;
  2689  000C48  0E00               	movlw	0
  2690  000C4A  6E7B               	movwf	123,c	;volatile
  2691                           
  2692                           ;mcc_generated_files/pin_manager.c: 69:     LATH = 0x00;
  2693  000C4C  0E00               	movlw	0
  2694  000C4E  6E80               	movwf	128,c	;volatile
  2695                           
  2696                           ;mcc_generated_files/pin_manager.c: 74:     TRISE = 0xFC;
  2697  000C50  0EFC               	movlw	252
  2698  000C52  6E85               	movwf	133,c	;volatile
  2699                           
  2700                           ;mcc_generated_files/pin_manager.c: 75:     TRISF = 0x83;
  2701  000C54  0E83               	movlw	131
  2702  000C56  6E86               	movwf	134,c	;volatile
  2703                           
  2704                           ;mcc_generated_files/pin_manager.c: 76:     TRISA = 0xCF;
  2705  000C58  0ECF               	movlw	207
  2706  000C5A  6E81               	movwf	129,c	;volatile
  2707                           
  2708                           ;mcc_generated_files/pin_manager.c: 77:     TRISG = 0x85;
  2709  000C5C  0E85               	movlw	133
  2710  000C5E  6E87               	movwf	135,c	;volatile
  2711                           
  2712                           ;mcc_generated_files/pin_manager.c: 78:     TRISB = 0xBF;
  2713  000C60  0EBF               	movlw	191
  2714  000C62  6E82               	movwf	130,c	;volatile
  2715                           
  2716                           ;mcc_generated_files/pin_manager.c: 79:     TRISH = 0x0C;
  2717  000C64  0E0C               	movlw	12
  2718  000C66  6E88               	movwf	136,c	;volatile
  2719                           
  2720                           ;mcc_generated_files/pin_manager.c: 80:     TRISC = 0xFC;
  2721  000C68  0EFC               	movlw	252
  2722  000C6A  6E83               	movwf	131,c	;volatile
  2723  000C6C                     
  2724                           ;mcc_generated_files/pin_manager.c: 81:     TRISD = 0xFF;
  2725  000C6C  6884               	setf	132,c	;volatile
  2726                           
  2727                           ;mcc_generated_files/pin_manager.c: 86:     ANSELD = 0x86;
  2728  000C6E  0E86               	movlw	134
  2729  000C70  010E               	movlb	14	; () banked
  2730  000C72  6FA7               	movwf	167,b	;volatile
  2731                           
  2732                           ;mcc_generated_files/pin_manager.c: 87:     ANSELB = 0x40;
  2733  000C74  0E40               	movlw	64
  2734  000C76  6F9A               	movwf	154,b	;volatile
  2735                           
  2736                           ;mcc_generated_files/pin_manager.c: 88:     ANSELE = 0x00;
  2737  000C78  0E00               	movlw	0
  2738  000C7A  6FAF               	movwf	175,b	;volatile
  2739                           
  2740                           ;mcc_generated_files/pin_manager.c: 89:     ANSELG = 0x25;
  2741  000C7C  0E25               	movlw	37
  2742  000C7E  6FBC               	movwf	188,b	;volatile
  2743                           
  2744                           ;mcc_generated_files/pin_manager.c: 90:     ANSELF = 0x80;
  2745  000C80  0E80               	movlw	128
  2746  000C82  6FB4               	movwf	180,b	;volatile
  2747                           
  2748                           ;mcc_generated_files/pin_manager.c: 91:     ANSELA = 0xC0;
  2749  000C84  0EC0               	movlw	192
  2750  000C86  6F92               	movwf	146,b	;volatile
  2751                           
  2752                           ;mcc_generated_files/pin_manager.c: 96:     WPUD = 0x00;
  2753  000C88  0E00               	movlw	0
  2754  000C8A  6FA6               	movwf	166,b	;volatile
  2755                           
  2756                           ;mcc_generated_files/pin_manager.c: 97:     WPUF = 0x00;
  2757  000C8C  0E00               	movlw	0
  2758  000C8E  6FB3               	movwf	179,b	;volatile
  2759                           
  2760                           ;mcc_generated_files/pin_manager.c: 98:     WPUE = 0x00;
  2761  000C90  0E00               	movlw	0
  2762  000C92  6FAE               	movwf	174,b	;volatile
  2763                           
  2764                           ;mcc_generated_files/pin_manager.c: 99:     WPUB = 0x0F;
  2765  000C94  0E0F               	movlw	15
  2766  000C96  6F99               	movwf	153,b	;volatile
  2767                           
  2768                           ;mcc_generated_files/pin_manager.c: 100:     WPUG = 0x00;
  2769  000C98  0E00               	movlw	0
  2770  000C9A  6FBB               	movwf	187,b	;volatile
  2771                           
  2772                           ;mcc_generated_files/pin_manager.c: 101:     WPUA = 0x00;
  2773  000C9C  0E00               	movlw	0
  2774  000C9E  6F91               	movwf	145,b	;volatile
  2775                           
  2776                           ;mcc_generated_files/pin_manager.c: 102:     WPUC = 0x00;
  2777  000CA0  0E00               	movlw	0
  2778  000CA2  6FA1               	movwf	161,b	;volatile
  2779                           
  2780                           ;mcc_generated_files/pin_manager.c: 103:     WPUH = 0x00;
  2781  000CA4  0E00               	movlw	0
  2782  000CA6  6FC0               	movwf	192,b	;volatile
  2783                           
  2784                           ;mcc_generated_files/pin_manager.c: 108:     ODCONE = 0x00;
  2785  000CA8  0E00               	movlw	0
  2786  000CAA  6FAD               	movwf	173,b	;volatile
  2787                           
  2788                           ;mcc_generated_files/pin_manager.c: 109:     ODCONF = 0x00;
  2789  000CAC  0E00               	movlw	0
  2790  000CAE  6FB2               	movwf	178,b	;volatile
  2791                           
  2792                           ;mcc_generated_files/pin_manager.c: 110:     ODCONA = 0x00;
  2793  000CB0  0E00               	movlw	0
  2794  000CB2  6F90               	movwf	144,b	;volatile
  2795                           
  2796                           ;mcc_generated_files/pin_manager.c: 111:     ODCONG = 0x00;
  2797  000CB4  0E00               	movlw	0
  2798  000CB6  6FBA               	movwf	186,b	;volatile
  2799                           
  2800                           ;mcc_generated_files/pin_manager.c: 112:     ODCONB = 0x00;
  2801  000CB8  0E00               	movlw	0
  2802  000CBA  6F98               	movwf	152,b	;volatile
  2803                           
  2804                           ;mcc_generated_files/pin_manager.c: 113:     ODCONH = 0x00;
  2805  000CBC  0E00               	movlw	0
  2806  000CBE  6FBF               	movwf	191,b	;volatile
  2807                           
  2808                           ;mcc_generated_files/pin_manager.c: 114:     ODCONC = 0x00;
  2809  000CC0  0E00               	movlw	0
  2810  000CC2  6FA0               	movwf	160,b	;volatile
  2811                           
  2812                           ;mcc_generated_files/pin_manager.c: 115:     ODCOND = 0x00;
  2813  000CC4  0E00               	movlw	0
  2814  000CC6  6FA5               	movwf	165,b	;volatile
  2815                           
  2816                           ;mcc_generated_files/pin_manager.c: 124:     INT1PPSbits.INT1PPS = 0x09;
  2817  000CC8  010D               	movlb	13	; () banked
  2818  000CCA  51F1               	movf	241,w,b	;volatile
  2819  000CCC  0BC0               	andlw	-64
  2820  000CCE  0909               	iorlw	9
  2821  000CD0  6FF1               	movwf	241,b	;volatile
  2822                           
  2823                           ;mcc_generated_files/pin_manager.c: 125:     INT3PPSbits.INT3PPS = 0x0B;
  2824  000CD2  51F3               	movf	243,w,b	;volatile
  2825  000CD4  0BC0               	andlw	-64
  2826  000CD6  090B               	iorlw	11
  2827  000CD8  6FF3               	movwf	243,b	;volatile
  2828                           
  2829                           ;mcc_generated_files/pin_manager.c: 126:     RB6PPS = 0x12;
  2830  000CDA  0E12               	movlw	18
  2831  000CDC  010E               	movlb	14	; () banked
  2832  000CDE  6F60               	movwf	96,b	;volatile
  2833                           
  2834                           ;mcc_generated_files/pin_manager.c: 127:     RE1PPS = 0x06;
  2835  000CE0  0E06               	movlw	6
  2836  000CE2  6F73               	movwf	115,b	;volatile
  2837                           
  2838                           ;mcc_generated_files/pin_manager.c: 128:     RE0PPS = 0x05;
  2839  000CE4  0E05               	movlw	5
  2840  000CE6  6F72               	movwf	114,b	;volatile
  2841                           
  2842                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPSbits.INT0PPS = 0x08;
  2843  000CE8  010D               	movlb	13	; () banked
  2844  000CEA  51F0               	movf	240,w,b	;volatile
  2845  000CEC  0BC0               	andlw	-64
  2846  000CEE  0908               	iorlw	8
  2847  000CF0  6FF0               	movwf	240,b	;volatile
  2848                           
  2849                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPSbits.INT2PPS = 0x0A;
  2850  000CF2  51F2               	movf	242,w,b	;volatile
  2851  000CF4  0BC0               	andlw	-64
  2852  000CF6  090A               	iorlw	10
  2853  000CF8  6FF2               	movwf	242,b	;volatile
  2854                           
  2855                           ;mcc_generated_files/pin_manager.c: 131:     RX2PPSbits.RX2PPS = 0x37;
  2856  000CFA  010E               	movlb	14	; () banked
  2857  000CFC  5111               	movf	17,w,b	;volatile
  2858  000CFE  0BC0               	andlw	-64
  2859  000D00  0937               	iorlw	55
  2860  000D02  6F11               	movwf	17,b	;volatile
  2861                           
  2862                           ;mcc_generated_files/pin_manager.c: 132:     RG6PPS = 0x0E;
  2863  000D04  0E0E               	movlw	14
  2864  000D06  6F88               	movwf	136,b	;volatile
  2865  000D08                     
  2866                           ; BSR set to: 14
  2867  000D08  0012               	return		;funcret
  2868  000D0A                     __end_of_PIN_MANAGER_Initialize:
  2869                           	callstack 0
  2870                           
  2871 ;; *************** function _OSCILLATOR_Initialize *****************
  2872 ;; Defined at:
  2873 ;;		line 66 in file "mcc_generated_files/mcc.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;		None
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;		None
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      void 
  2880 ;; Registers used:
  2881 ;;		wreg, status,2
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2891 ;;Total ram usage:        0 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; Hardware stack levels required when called:    5
  2894 ;; This function calls:
  2895 ;;		Nothing
  2896 ;; This function is called by:
  2897 ;;		_SYSTEM_Initialize
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           	psect	text25
  2902  0014E6                     __ptext25:
  2903                           	callstack 0
  2904  0014E6                     _OSCILLATOR_Initialize:
  2905                           	callstack 24
  2906  0014E6                     
  2907                           ;mcc_generated_files/mcc.c: 69:     OSCCON1 = 0x60;
  2908  0014E6  0E60               	movlw	96
  2909  0014E8  010E               	movlb	14	; () banked
  2910  0014EA  6F43               	movwf	67,b	;volatile
  2911                           
  2912                           ;mcc_generated_files/mcc.c: 71:     OSCCON3 = 0x00;
  2913  0014EC  0E00               	movlw	0
  2914  0014EE  6F45               	movwf	69,b	;volatile
  2915                           
  2916                           ;mcc_generated_files/mcc.c: 73:     OSCEN = 0x00;
  2917  0014F0  0E00               	movlw	0
  2918  0014F2  6F47               	movwf	71,b	;volatile
  2919                           
  2920                           ;mcc_generated_files/mcc.c: 75:     OSCFRQ = 0x03;
  2921  0014F4  0E03               	movlw	3
  2922  0014F6  6F49               	movwf	73,b	;volatile
  2923                           
  2924                           ;mcc_generated_files/mcc.c: 77:     OSCTUNE = 0x00;
  2925  0014F8  0E00               	movlw	0
  2926  0014FA  6F48               	movwf	72,b	;volatile
  2927  0014FC                     
  2928                           ; BSR set to: 14
  2929  0014FC  0012               	return		;funcret
  2930  0014FE                     __end_of_OSCILLATOR_Initialize:
  2931                           	callstack 0
  2932                           
  2933 ;; *************** function _INTERRUPT_Initialize *****************
  2934 ;; Defined at:
  2935 ;;		line 79 in file "mcc_generated_files/interrupt_manager.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;		None
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;		None
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      void 
  2942 ;; Registers used:
  2943 ;;		wreg, status,2
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2953 ;;Total ram usage:        0 bytes
  2954 ;; Hardware stack levels used:    1
  2955 ;; Hardware stack levels required when called:    5
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_SYSTEM_Initialize
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           	psect	text26
  2964  00158C                     __ptext26:
  2965                           	callstack 0
  2966  00158C                     _INTERRUPT_Initialize:
  2967                           	callstack 24
  2968  00158C                     
  2969                           ;mcc_generated_files/interrupt_manager.c: 81:     INTCONbits.IPEN = 0;
  2970  00158C  9AF2               	bcf	242,5,c	;volatile
  2971                           
  2972                           ;mcc_generated_files/interrupt_manager.c: 85:     PIE3bits.RC2IE = 1;
  2973  00158E  010E               	movlb	14	; () banked
  2974  001590  8F2C               	bsf	44,7,b	;volatile
  2975                           
  2976                           ;mcc_generated_files/interrupt_manager.c: 87:     PIR3bits.RC2IF = 0;
  2977  001592  9F36               	bcf	54,7,b	;volatile
  2978                           
  2979                           ;mcc_generated_files/interrupt_manager.c: 90:     PIR0bits.INT0IF = 0;
  2980  001594  9133               	bcf	51,0,b	;volatile
  2981                           
  2982                           ;mcc_generated_files/interrupt_manager.c: 91:     PIR0bits.INT1IF = 0;
  2983  001596  9333               	bcf	51,1,b	;volatile
  2984                           
  2985                           ;mcc_generated_files/interrupt_manager.c: 92:     PIR0bits.INT2IF = 0;
  2986  001598  9533               	bcf	51,2,b	;volatile
  2987                           
  2988                           ;mcc_generated_files/interrupt_manager.c: 93:     PIR0bits.INT3IF = 0;
  2989  00159A  9733               	bcf	51,3,b	;volatile
  2990  00159C                     
  2991                           ; BSR set to: 14
  2992                           ;mcc_generated_files/interrupt_manager.c: 96:     interruptAction = NULL_ACTION;
  2993  00159C  0E00               	movlw	0
  2994  00159E  6E3C               	movwf	_interruptAction^0,c	;volatile
  2995  0015A0                     
  2996                           ; BSR set to: 14
  2997  0015A0  0012               	return		;funcret
  2998  0015A2                     __end_of_INTERRUPT_Initialize:
  2999                           	callstack 0
  3000                           
  3001 ;; *************** function _EXT_INT_Initialize *****************
  3002 ;; Defined at:
  3003 ;;		line 149 in file "mcc_generated_files/ext_int.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;		None
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		wreg, status,2, status,0, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3021 ;;Total ram usage:        0 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; Hardware stack levels required when called:    6
  3024 ;; This function calls:
  3025 ;;		_INT0_SetInterruptHandler
  3026 ;;		_INT1_SetInterruptHandler
  3027 ;;		_INT2_SetInterruptHandler
  3028 ;;		_INT3_SetInterruptHandler
  3029 ;; This function is called by:
  3030 ;;		_SYSTEM_Initialize
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           	psect	text27
  3035  000F92                     __ptext27:
  3036                           	callstack 0
  3037  000F92                     _EXT_INT_Initialize:
  3038                           	callstack 23
  3039  000F92                     
  3040                           ;mcc_generated_files/ext_int.c: 154:     (PIR0bits.INT0IF = 0);
  3041  000F92  010E               	movlb	14	; () banked
  3042  000F94  9133               	bcf	51,0,b	;volatile
  3043                           
  3044                           ;mcc_generated_files/ext_int.c: 155:     (INTCONbits.INT0EDG = 0);
  3045  000F96  90F2               	bcf	242,0,c	;volatile
  3046  000F98                     
  3047                           ; BSR set to: 14
  3048                           ;mcc_generated_files/ext_int.c: 157:     INT0_SetInterruptHandler(INT0_DefaultInterruptH
      +                          andler);
  3049  000F98  0ED0               	movlw	low _INT0_DefaultInterruptHandler
  3050  000F9A  6E0D               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  3051  000F9C  0E16               	movlw	high _INT0_DefaultInterruptHandler
  3052  000F9E  6E0E               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  3053  000FA0  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
  3054  000FA2  6E0F               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)^0,c
  3055  000FA4  EC1B  F00B         	call	_INT0_SetInterruptHandler	;wreg free
  3056  000FA8                     
  3057                           ;mcc_generated_files/ext_int.c: 158:     (PIE0bits.INT0IE = 1);
  3058  000FA8  010E               	movlb	14	; () banked
  3059  000FAA  8129               	bsf	41,0,b	;volatile
  3060  000FAC                     
  3061                           ; BSR set to: 14
  3062                           ;mcc_generated_files/ext_int.c: 163:     (PIR0bits.INT1IF = 0);
  3063  000FAC  9333               	bcf	51,1,b	;volatile
  3064  000FAE                     
  3065                           ; BSR set to: 14
  3066                           ;mcc_generated_files/ext_int.c: 164:     (INTCONbits.INT1EDG = 0);
  3067  000FAE  92F2               	bcf	242,1,c	;volatile
  3068                           
  3069                           ;mcc_generated_files/ext_int.c: 166:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
  3070  000FB0  0ECE               	movlw	low _INT1_DefaultInterruptHandler
  3071  000FB2  6E0D               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  3072  000FB4  0E16               	movlw	high _INT1_DefaultInterruptHandler
  3073  000FB6  6E0E               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  3074  000FB8  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
  3075  000FBA  6E0F               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)^0,c
  3076  000FBC  EC14  F00B         	call	_INT1_SetInterruptHandler	;wreg free
  3077  000FC0                     
  3078                           ;mcc_generated_files/ext_int.c: 167:     (PIE0bits.INT1IE = 1);
  3079  000FC0  010E               	movlb	14	; () banked
  3080  000FC2  8329               	bsf	41,1,b	;volatile
  3081  000FC4                     
  3082                           ; BSR set to: 14
  3083                           ;mcc_generated_files/ext_int.c: 172:     (PIR0bits.INT2IF = 0);
  3084  000FC4  9533               	bcf	51,2,b	;volatile
  3085  000FC6                     
  3086                           ; BSR set to: 14
  3087                           ;mcc_generated_files/ext_int.c: 173:     (INTCONbits.INT2EDG = 0);
  3088  000FC6  94F2               	bcf	242,2,c	;volatile
  3089                           
  3090                           ;mcc_generated_files/ext_int.c: 175:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
  3091  000FC8  0ECC               	movlw	low _INT2_DefaultInterruptHandler
  3092  000FCA  6E0D               	movwf	INT2_SetInterruptHandler@InterruptHandler^0,c
  3093  000FCC  0E16               	movlw	high _INT2_DefaultInterruptHandler
  3094  000FCE  6E0E               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,c
  3095  000FD0  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
  3096  000FD2  6E0F               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)^0,c
  3097  000FD4  EC0D  F00B         	call	_INT2_SetInterruptHandler	;wreg free
  3098  000FD8                     
  3099                           ;mcc_generated_files/ext_int.c: 176:     (PIE0bits.INT2IE = 1);
  3100  000FD8  010E               	movlb	14	; () banked
  3101  000FDA  8529               	bsf	41,2,b	;volatile
  3102  000FDC                     
  3103                           ; BSR set to: 14
  3104                           ;mcc_generated_files/ext_int.c: 181:     (PIR0bits.INT3IF = 0);
  3105  000FDC  9733               	bcf	51,3,b	;volatile
  3106  000FDE                     
  3107                           ; BSR set to: 14
  3108                           ;mcc_generated_files/ext_int.c: 182:     (INTCONbits.INT3EDG = 0);
  3109  000FDE  96F2               	bcf	242,3,c	;volatile
  3110                           
  3111                           ;mcc_generated_files/ext_int.c: 184:     INT3_SetInterruptHandler(INT3_DefaultInterruptH
      +                          andler);
  3112  000FE0  0ECA               	movlw	low _INT3_DefaultInterruptHandler
  3113  000FE2  6E0D               	movwf	INT3_SetInterruptHandler@InterruptHandler^0,c
  3114  000FE4  0E16               	movlw	high _INT3_DefaultInterruptHandler
  3115  000FE6  6E0E               	movwf	(INT3_SetInterruptHandler@InterruptHandler+1)^0,c
  3116  000FE8  0E00               	movlw	low (_INT3_DefaultInterruptHandler shr (0+16))
  3117  000FEA  6E0F               	movwf	(INT3_SetInterruptHandler@InterruptHandler+2)^0,c
  3118  000FEC  EC06  F00B         	call	_INT3_SetInterruptHandler	;wreg free
  3119  000FF0                     
  3120                           ;mcc_generated_files/ext_int.c: 185:     (PIE0bits.INT3IE = 1);
  3121  000FF0  010E               	movlb	14	; () banked
  3122  000FF2  8729               	bsf	41,3,b	;volatile
  3123  000FF4                     
  3124                           ; BSR set to: 14
  3125  000FF4  0012               	return		;funcret
  3126  000FF6                     __end_of_EXT_INT_Initialize:
  3127                           	callstack 0
  3128                           
  3129 ;; *************** function _INT3_SetInterruptHandler *****************
  3130 ;; Defined at:
  3131 ;;		line 140 in file "mcc_generated_files/ext_int.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;  InterruptHan    3   12[COMRAM] PTR FTN()void 
  3134 ;;		 -> INT3_DefaultInterruptHandler(1), 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;		None
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  1    wreg      void 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3146 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3149 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3150 ;;Total ram usage:        3 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    5
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_EXT_INT_Initialize
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text28
  3161  00160C                     __ptext28:
  3162                           	callstack 0
  3163  00160C                     _INT3_SetInterruptHandler:
  3164                           	callstack 23
  3165  00160C                     
  3166                           ;mcc_generated_files/ext_int.c: 141:     INT3_InterruptHandler = InterruptHandler;
  3167  00160C  C00D  F024         	movff	INT3_SetInterruptHandler@InterruptHandler,_INT3_InterruptHandler
  3168  001610  C00E  F025         	movff	INT3_SetInterruptHandler@InterruptHandler+1,_INT3_InterruptHandler+1
  3169  001614  C00F  F026         	movff	INT3_SetInterruptHandler@InterruptHandler+2,_INT3_InterruptHandler+2
  3170  001618  0012               	return		;funcret
  3171  00161A                     __end_of_INT3_SetInterruptHandler:
  3172                           	callstack 0
  3173                           
  3174 ;; *************** function _INT2_SetInterruptHandler *****************
  3175 ;; Defined at:
  3176 ;;		line 114 in file "mcc_generated_files/ext_int.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  InterruptHan    3   12[COMRAM] PTR FTN()void 
  3179 ;;		 -> INT2_DefaultInterruptHandler(1), 
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;		None
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  1    wreg      void 
  3184 ;; Registers used:
  3185 ;;		wreg, status,2, status,0
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3191 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3194 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3195 ;;Total ram usage:        3 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    5
  3198 ;; This function calls:
  3199 ;;		Nothing
  3200 ;; This function is called by:
  3201 ;;		_EXT_INT_Initialize
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text29
  3206  00161A                     __ptext29:
  3207                           	callstack 0
  3208  00161A                     _INT2_SetInterruptHandler:
  3209                           	callstack 23
  3210  00161A                     
  3211                           ;mcc_generated_files/ext_int.c: 115:     INT2_InterruptHandler = InterruptHandler;
  3212  00161A  C00D  F027         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  3213  00161E  C00E  F028         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  3214  001622  C00F  F029         	movff	INT2_SetInterruptHandler@InterruptHandler+2,_INT2_InterruptHandler+2
  3215  001626  0012               	return		;funcret
  3216  001628                     __end_of_INT2_SetInterruptHandler:
  3217                           	callstack 0
  3218                           
  3219 ;; *************** function _INT1_SetInterruptHandler *****************
  3220 ;; Defined at:
  3221 ;;		line 88 in file "mcc_generated_files/ext_int.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;  InterruptHan    3   12[COMRAM] PTR FTN()void 
  3224 ;;		 -> INT1_DefaultInterruptHandler(1), 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;		None
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  1    wreg      void 
  3229 ;; Registers used:
  3230 ;;		wreg, status,2, status,0
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3236 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3239 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3240 ;;Total ram usage:        3 bytes
  3241 ;; Hardware stack levels used:    1
  3242 ;; Hardware stack levels required when called:    5
  3243 ;; This function calls:
  3244 ;;		Nothing
  3245 ;; This function is called by:
  3246 ;;		_EXT_INT_Initialize
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           	psect	text30
  3251  001628                     __ptext30:
  3252                           	callstack 0
  3253  001628                     _INT1_SetInterruptHandler:
  3254                           	callstack 23
  3255  001628                     
  3256                           ;mcc_generated_files/ext_int.c: 89:     INT1_InterruptHandler = InterruptHandler;
  3257  001628  C00D  F02A         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  3258  00162C  C00E  F02B         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  3259  001630  C00F  F02C         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
  3260  001634  0012               	return		;funcret
  3261  001636                     __end_of_INT1_SetInterruptHandler:
  3262                           	callstack 0
  3263                           
  3264 ;; *************** function _INT0_SetInterruptHandler *****************
  3265 ;; Defined at:
  3266 ;;		line 60 in file "mcc_generated_files/ext_int.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  InterruptHan    3   12[COMRAM] PTR FTN()void 
  3269 ;;		 -> INT0_DefaultInterruptHandler(1), 
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;		None
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  1    wreg      void 
  3274 ;; Registers used:
  3275 ;;		wreg, status,2, status,0
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3281 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3284 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3285 ;;Total ram usage:        3 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    5
  3288 ;; This function calls:
  3289 ;;		Nothing
  3290 ;; This function is called by:
  3291 ;;		_EXT_INT_Initialize
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text31
  3296  001636                     __ptext31:
  3297                           	callstack 0
  3298  001636                     _INT0_SetInterruptHandler:
  3299                           	callstack 23
  3300  001636                     
  3301                           ;mcc_generated_files/ext_int.c: 61:     INT0_InterruptHandler = InterruptHandler;
  3302  001636  C00D  F02D         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  3303  00163A  C00E  F02E         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  3304  00163E  C00F  F02F         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
  3305  001642  0012               	return		;funcret
  3306  001644                     __end_of_INT0_SetInterruptHandler:
  3307                           	callstack 0
  3308                           
  3309 ;; *************** function _EUSART4_Initialize *****************
  3310 ;; Defined at:
  3311 ;;		line 56 in file "mcc_generated_files/eusart4.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;		None
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      void 
  3318 ;; Registers used:
  3319 ;;		wreg, status,2
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3329 ;;Total ram usage:        0 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:    5
  3332 ;; This function calls:
  3333 ;;		Nothing
  3334 ;; This function is called by:
  3335 ;;		_SYSTEM_Initialize
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           	psect	text32
  3340  0014FE                     __ptext32:
  3341                           	callstack 0
  3342  0014FE                     _EUSART4_Initialize:
  3343                           	callstack 24
  3344  0014FE                     
  3345                           ;mcc_generated_files/eusart4.c: 61:     BAUD4CON = 0x08;
  3346  0014FE  0E08               	movlw	8
  3347  001500  010E               	movlb	14	; () banked
  3348  001502  6FE9               	movwf	233,b	;volatile
  3349                           
  3350                           ;mcc_generated_files/eusart4.c: 64:     RC4STA = 0x80;
  3351  001504  0E80               	movlw	128
  3352  001506  6FE7               	movwf	231,b	;volatile
  3353                           
  3354                           ;mcc_generated_files/eusart4.c: 67:     TX4STA = 0x24;
  3355  001508  0E24               	movlw	36
  3356  00150A  6FE8               	movwf	232,b	;volatile
  3357                           
  3358                           ;mcc_generated_files/eusart4.c: 70:     SP4BRGL = 0xCF;
  3359  00150C  0ECF               	movlw	207
  3360  00150E  6FE5               	movwf	229,b	;volatile
  3361                           
  3362                           ;mcc_generated_files/eusart4.c: 73:     SP4BRGH = 0x00;
  3363  001510  0E00               	movlw	0
  3364  001512  6FE6               	movwf	230,b	;volatile
  3365  001514                     
  3366                           ; BSR set to: 14
  3367  001514  0012               	return		;funcret
  3368  001516                     __end_of_EUSART4_Initialize:
  3369                           	callstack 0
  3370                           
  3371 ;; *************** function _EUSART2_Initialize *****************
  3372 ;; Defined at:
  3373 ;;		line 57 in file "mcc_generated_files/eusart2.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;		None
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;		None
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  1    wreg      void 
  3380 ;; Registers used:
  3381 ;;		wreg, status,2
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3391 ;;Total ram usage:        0 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; Hardware stack levels required when called:    5
  3394 ;; This function calls:
  3395 ;;		Nothing
  3396 ;; This function is called by:
  3397 ;;		_SYSTEM_Initialize
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text33
  3402  001516                     __ptext33:
  3403                           	callstack 0
  3404  001516                     _EUSART2_Initialize:
  3405                           	callstack 24
  3406  001516                     
  3407                           ;mcc_generated_files/eusart2.c: 62:     BAUD2CON = 0x08;
  3408  001516  0E08               	movlw	8
  3409  001518  010E               	movlb	14	; () banked
  3410  00151A  6FF7               	movwf	247,b	;volatile
  3411                           
  3412                           ;mcc_generated_files/eusart2.c: 65:     RC2STA = 0x90;
  3413  00151C  0E90               	movlw	144
  3414  00151E  6FF5               	movwf	245,b	;volatile
  3415                           
  3416                           ;mcc_generated_files/eusart2.c: 68:     TX2STA = 0x24;
  3417  001520  0E24               	movlw	36
  3418  001522  6FF6               	movwf	246,b	;volatile
  3419                           
  3420                           ;mcc_generated_files/eusart2.c: 71:     SP2BRGL = 0xCF;
  3421  001524  0ECF               	movlw	207
  3422  001526  6FF3               	movwf	243,b	;volatile
  3423                           
  3424                           ;mcc_generated_files/eusart2.c: 74:     SP2BRGH = 0x00;
  3425  001528  0E00               	movlw	0
  3426  00152A  6FF4               	movwf	244,b	;volatile
  3427  00152C                     
  3428                           ; BSR set to: 14
  3429  00152C  0012               	return		;funcret
  3430  00152E                     __end_of_EUSART2_Initialize:
  3431                           	callstack 0
  3432                           
  3433 ;; *************** function _ADCC_Initialize *****************
  3434 ;; Defined at:
  3435 ;;		line 64 in file "mcc_generated_files/adcc.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;		None
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;		None
  3440 ;; Return value:  Size  Location     Type
  3441 ;;                  1    wreg      void 
  3442 ;; Registers used:
  3443 ;;		wreg, status,2, status,0, cstack
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3453 ;;Total ram usage:        0 bytes
  3454 ;; Hardware stack levels used:    1
  3455 ;; Hardware stack levels required when called:    6
  3456 ;; This function calls:
  3457 ;;		_ADCC_SetADIInterruptHandler
  3458 ;; This function is called by:
  3459 ;;		_SYSTEM_Initialize
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           
  3463                           	psect	text34
  3464  001056                     __ptext34:
  3465                           	callstack 0
  3466  001056                     _ADCC_Initialize:
  3467                           	callstack 23
  3468  001056                     
  3469                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
  3470  001056  0E00               	movlw	0
  3471  001058  6E6A               	movwf	106,c	;volatile
  3472                           
  3473                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
  3474  00105A  0E00               	movlw	0
  3475  00105C  6E6B               	movwf	107,c	;volatile
  3476                           
  3477                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
  3478  00105E  0E00               	movlw	0
  3479  001060  6E6C               	movwf	108,c	;volatile
  3480                           
  3481                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
  3482  001062  0E00               	movlw	0
  3483  001064  6E6D               	movwf	109,c	;volatile
  3484                           
  3485                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
  3486  001066  0E00               	movlw	0
  3487  001068  6E68               	movwf	104,c	;volatile
  3488                           
  3489                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
  3490  00106A  0E00               	movlw	0
  3491  00106C  6E69               	movwf	105,c	;volatile
  3492                           
  3493                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  3494  00106E  0E00               	movlw	0
  3495  001070  6E66               	movwf	102,c	;volatile
  3496                           
  3497                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  3498  001072  0E00               	movlw	0
  3499  001074  010F               	movlb	15	; () banked
  3500  001076  6F5F               	movwf	95,b	;volatile
  3501                           
  3502                           ;mcc_generated_files/adcc.c: 84:     ADCAP = 0x00;
  3503  001078  0E00               	movlw	0
  3504  00107A  6F5D               	movwf	93,b	;volatile
  3505                           
  3506                           ;mcc_generated_files/adcc.c: 86:     ADCON1 = 0x00;
  3507  00107C  0E00               	movlw	0
  3508  00107E  6F59               	movwf	89,b	;volatile
  3509                           
  3510                           ;mcc_generated_files/adcc.c: 88:     ADCON2 = 0x00;
  3511  001080  0E00               	movlw	0
  3512  001082  6F5A               	movwf	90,b	;volatile
  3513                           
  3514                           ;mcc_generated_files/adcc.c: 90:     ADCON3 = 0x00;
  3515  001084  0E00               	movlw	0
  3516  001086  6F5B               	movwf	91,b	;volatile
  3517                           
  3518                           ;mcc_generated_files/adcc.c: 92:     ADSTAT = 0x00;
  3519  001088  0E00               	movlw	0
  3520  00108A  6E65               	movwf	101,c	;volatile
  3521                           
  3522                           ;mcc_generated_files/adcc.c: 94:     ADREF = 0x00;
  3523  00108C  0E00               	movlw	0
  3524  00108E  6F58               	movwf	88,b	;volatile
  3525                           
  3526                           ;mcc_generated_files/adcc.c: 96:     ADACT = 0x00;
  3527  001090  0E00               	movlw	0
  3528  001092  6F56               	movwf	86,b	;volatile
  3529                           
  3530                           ;mcc_generated_files/adcc.c: 98:     ADCLK = 0x03;
  3531  001094  0E03               	movlw	3
  3532  001096  6F57               	movwf	87,b	;volatile
  3533                           
  3534                           ;mcc_generated_files/adcc.c: 100:     ADCON0 = 0x84;
  3535  001098  0E84               	movlw	132
  3536  00109A  6E60               	movwf	96,c	;volatile
  3537  00109C                     
  3538                           ; BSR set to: 15
  3539                           ;mcc_generated_files/adcc.c: 103:     PIR1bits.ADIF = 0;
  3540  00109C  010E               	movlb	14	; () banked
  3541  00109E  9134               	bcf	52,0,b	;volatile
  3542  0010A0                     
  3543                           ; BSR set to: 14
  3544                           ;mcc_generated_files/adcc.c: 105:     PIE1bits.ADIE = 1;
  3545  0010A0  812A               	bsf	42,0,b	;volatile
  3546  0010A2                     
  3547                           ; BSR set to: 14
  3548                           ;mcc_generated_files/adcc.c: 107:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
  3549  0010A2  0EF6               	movlw	low _ADCC_DefaultInterruptHandler
  3550  0010A4  6E0D               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler^0,c
  3551  0010A6  0E0F               	movlw	high _ADCC_DefaultInterruptHandler
  3552  0010A8  6E0E               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
  3553  0010AA  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
  3554  0010AC  6E0F               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)^0,c
  3555  0010AE  EC22  F00B         	call	_ADCC_SetADIInterruptHandler	;wreg free
  3556  0010B2  0012               	return		;funcret
  3557  0010B4                     __end_of_ADCC_Initialize:
  3558                           	callstack 0
  3559                           
  3560 ;; *************** function _ADCC_SetADIInterruptHandler *****************
  3561 ;; Defined at:
  3562 ;;		line 304 in file "mcc_generated_files/adcc.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;  InterruptHan    3   12[COMRAM] PTR FTN()void 
  3565 ;;		 -> ADCC_DefaultInterruptHandler(1), 
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;		None
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  1    wreg      void 
  3570 ;; Registers used:
  3571 ;;		wreg, status,2, status,0
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3577 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3580 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3581 ;;Total ram usage:        3 bytes
  3582 ;; Hardware stack levels used:    1
  3583 ;; Hardware stack levels required when called:    5
  3584 ;; This function calls:
  3585 ;;		Nothing
  3586 ;; This function is called by:
  3587 ;;		_ADCC_Initialize
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           	psect	text35
  3592  001644                     __ptext35:
  3593                           	callstack 0
  3594  001644                     _ADCC_SetADIInterruptHandler:
  3595                           	callstack 23
  3596  001644                     
  3597                           ;mcc_generated_files/adcc.c: 305:     ADCC_ADI_InterruptHandler = InterruptHandler;
  3598  001644  C00D  F021         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
  3599  001648  C00E  F022         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
  3600  00164C  C00F  F023         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
  3601  001650  0012               	return		;funcret
  3602  001652                     __end_of_ADCC_SetADIInterruptHandler:
  3603                           	callstack 0
  3604                           
  3605 ;; *************** function _INTERRUPT_InterruptManager *****************
  3606 ;; Defined at:
  3607 ;;		line 99 in file "mcc_generated_files/interrupt_manager.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;		None
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;		None
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      void 
  3614 ;; Registers used:
  3615 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3623 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3624 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3625 ;;Total ram usage:        4 bytes
  3626 ;; Hardware stack levels used:    1
  3627 ;; Hardware stack levels required when called:    4
  3628 ;; This function calls:
  3629 ;;		_ADCC_ISR
  3630 ;;		_EUSART2_Read
  3631 ;;		_EUSART2_is_rx_ready
  3632 ;;		_INT0_ISR
  3633 ;;		_INT1_ISR
  3634 ;;		_INT2_ISR
  3635 ;;		_INT3_ISR
  3636 ;;		_TMR0_ISR
  3637 ;;		_TMR4_ISR
  3638 ;;		_setPump1PWM
  3639 ;;		_setPump2PWM
  3640 ;;		_stepperIsAsleep
  3641 ;;		i2_EUSART2_Write
  3642 ;; This function is called by:
  3643 ;;		Interrupt level 2
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	intcode
  3648  000008                     __pintcode:
  3649                           	callstack 0
  3650  000008                     _INTERRUPT_InterruptManager:
  3651                           	callstack 23
  3652                           
  3653                           ;incstack = 0
  3654  000008  823F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3655  00000A  CFFA F00B          	movff	pclath,??_INTERRUPT_InterruptManager+2
  3656  00000E  CFFB F00C          	movff	pclatu,??_INTERRUPT_InterruptManager+3
  3657  000012                     
  3658                           ;mcc_generated_files/interrupt_manager.c: 101:     if (PIE0bits.TMR0IE == 1 && PIR0bits.
      +                          TMR0IF == 1) {
  3659  000012  010E               	movlb	14	; () banked
  3660  000014  AB29               	btfss	41,5,b	;volatile
  3661  000016  EF0F  F000         	goto	i2u125_41
  3662  00001A  EF11  F000         	goto	i2u125_40
  3663  00001E                     i2u125_41:
  3664  00001E  EF1C  F000         	goto	i2l3343
  3665  000022                     i2u125_40:
  3666  000022                     
  3667                           ; BSR set to: 14
  3668  000022  AB33               	btfss	51,5,b	;volatile
  3669  000024  EF16  F000         	goto	i2u126_41
  3670  000028  EF18  F000         	goto	i2u126_40
  3671  00002C                     i2u126_41:
  3672  00002C  EF1C  F000         	goto	i2l3343
  3673  000030                     i2u126_40:
  3674  000030                     
  3675                           ; BSR set to: 14
  3676                           ;mcc_generated_files/interrupt_manager.c: 102:         TMR0_ISR();
  3677  000030  EC35  F00B         	call	_TMR0_ISR	;wreg free
  3678                           
  3679                           ;mcc_generated_files/interrupt_manager.c: 103:     }else if (EUSART2_is_rx_ready()) {
  3680  000034  EFEC  F004         	goto	i2l647
  3681  000038                     i2l3343:
  3682                           
  3683                           ; BSR set to: 14
  3684  000038  ECD1  F00A         	call	_EUSART2_is_rx_ready	;wreg free
  3685  00003C  0900               	iorlw	0
  3686  00003E  B4D8               	btfsc	status,2,c
  3687  000040  EF24  F000         	goto	i2u127_41
  3688  000044  EF26  F000         	goto	i2u127_40
  3689  000048                     i2u127_41:
  3690  000048  EF5E  F004         	goto	i2l521
  3691  00004C                     i2u127_40:
  3692  00004C                     
  3693                           ;mcc_generated_files/interrupt_manager.c: 106:         UART_RX_in = EUSART2_Read();
  3694  00004C  EC1A  F00A         	call	_EUSART2_Read	;wreg free
  3695  000050  6E3E               	movwf	_UART_RX_in^0,c	;volatile
  3696                           
  3697                           ;mcc_generated_files/interrupt_manager.c: 107:         switch (UART_RX_in) {
  3698  000052  EFA1  F003         	goto	i2l3689
  3699  000056                     i2l3347:
  3700                           
  3701                           ;mcc_generated_files/interrupt_manager.c: 111:                 setPump1PWM(0);
  3702  000056  0E00               	movlw	0
  3703  000058  6E04               	movwf	(setPump1PWM@pwm+1)^0,c
  3704  00005A  0E00               	movlw	0
  3705  00005C  6E03               	movwf	setPump1PWM@pwm^0,c
  3706  00005E  ECA7  F008         	call	_setPump1PWM	;wreg free
  3707                           
  3708                           ;mcc_generated_files/interrupt_manager.c: 112:                 setPump2PWM(0);
  3709  000062  0E00               	movlw	0
  3710  000064  6E04               	movwf	(setPump2PWM@pwm+1)^0,c
  3711  000066  0E00               	movlw	0
  3712  000068  6E03               	movwf	setPump2PWM@pwm^0,c
  3713  00006A  EC84  F008         	call	_setPump2PWM	;wreg free
  3714  00006E                     
  3715                           ;mcc_generated_files/interrupt_manager.c: 114:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  3716  00006E  0E01               	movlw	1
  3717  000070  6E3D               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  3718  000072                     
  3719                           ;mcc_generated_files/interrupt_manager.c: 115:                 interruptAction = NULL_AC
      +                          TION;
  3720  000072  0E00               	movlw	0
  3721  000074  6E3C               	movwf	_interruptAction^0,c	;volatile
  3722  000076                     
  3723                           ;mcc_generated_files/interrupt_manager.c: 116:                 if(!stepperIsAsleep()){
  3724  000076  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  3725  00007A  0900               	iorlw	0
  3726  00007C  A4D8               	btfss	status,2,c
  3727  00007E  EF43  F000         	goto	i2u128_41
  3728  000082  EF45  F000         	goto	i2u128_40
  3729  000086                     i2u128_41:
  3730  000086  EFEC  F004         	goto	i2l647
  3731  00008A                     i2u128_40:
  3732  00008A                     
  3733                           ;mcc_generated_files/interrupt_manager.c: 118:                     EUSART2_Write(0x0C);
  3734  00008A  0E0C               	movlw	12
  3735  00008C  ECA3  F00A         	call	i2_EUSART2_Write
  3736  000090  EFEC  F004         	goto	i2l647
  3737  000094                     i2l3357:
  3738                           
  3739                           ;mcc_generated_files/interrupt_manager.c: 125:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  3740  000094  0E01               	movlw	1
  3741  000096  6E3D               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  3742                           
  3743                           ;mcc_generated_files/interrupt_manager.c: 126:                 interruptAction = NULL_AC
      +                          TION;
  3744  000098  0E00               	movlw	0
  3745  00009A  6E3C               	movwf	_interruptAction^0,c	;volatile
  3746  00009C                     
  3747                           ;mcc_generated_files/interrupt_manager.c: 127:                 if(!stepperIsAsleep()){
  3748  00009C  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  3749  0000A0  0900               	iorlw	0
  3750  0000A2  A4D8               	btfss	status,2,c
  3751  0000A4  EF56  F000         	goto	i2u129_41
  3752  0000A8  EF58  F000         	goto	i2u129_40
  3753  0000AC                     i2u129_41:
  3754  0000AC  EF9D  F004         	goto	i2l636
  3755  0000B0                     i2u129_40:
  3756  0000B0                     
  3757                           ;mcc_generated_files/interrupt_manager.c: 129:                     EUSART2_Write(0x0C);
  3758  0000B0  0E0C               	movlw	12
  3759  0000B2  ECA3  F00A         	call	i2_EUSART2_Write
  3760  0000B6  EFEC  F004         	goto	i2l647
  3761  0000BA                     i2l3363:
  3762                           
  3763                           ;mcc_generated_files/interrupt_manager.c: 135:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  3764  0000BA  0E01               	movlw	1
  3765  0000BC  6E3D               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  3766  0000BE                     
  3767                           ;mcc_generated_files/interrupt_manager.c: 137:                 if (!PORTBbits.RB0) {
  3768  0000BE  B08A               	btfsc	138,0,c	;volatile
  3769  0000C0  EF64  F000         	goto	i2u130_41
  3770  0000C4  EF66  F000         	goto	i2u130_40
  3771  0000C8                     i2u130_41:
  3772  0000C8  EF6D  F000         	goto	i2l3371
  3773  0000CC                     i2u130_40:
  3774  0000CC                     
  3775                           ;mcc_generated_files/interrupt_manager.c: 138:                     interruptAction = NUL
      +                          L_ACTION;
  3776  0000CC  0E00               	movlw	0
  3777  0000CE  6E3C               	movwf	_interruptAction^0,c	;volatile
  3778  0000D0                     
  3779                           ;mcc_generated_files/interrupt_manager.c: 139:                     EUSART2_Write(0x0F);
  3780  0000D0  0E0F               	movlw	15
  3781  0000D2  ECA3  F00A         	call	i2_EUSART2_Write
  3782                           
  3783                           ;mcc_generated_files/interrupt_manager.c: 140:                 } else {
  3784  0000D6  EFEC  F004         	goto	i2l647
  3785  0000DA                     i2l3371:
  3786                           
  3787                           ;mcc_generated_files/interrupt_manager.c: 141:                     interruptAction = STE
      +                          PPER_FORWARD_UNTIL_STOP_FULL;
  3788  0000DA  0E0C               	movlw	12
  3789  0000DC  6E3C               	movwf	_interruptAction^0,c	;volatile
  3790  0000DE                     
  3791                           ;mcc_generated_files/interrupt_manager.c: 142:                     if(!stepperIsAsleep()
      +                          ){
  3792  0000DE  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  3793  0000E2  0900               	iorlw	0
  3794  0000E4  A4D8               	btfss	status,2,c
  3795  0000E6  EF77  F000         	goto	i2u131_41
  3796  0000EA  EF79  F000         	goto	i2u131_40
  3797  0000EE                     i2u131_41:
  3798  0000EE  EF9D  F004         	goto	i2l636
  3799  0000F2                     i2u131_40:
  3800  0000F2                     
  3801                           ;mcc_generated_files/interrupt_manager.c: 144:                         EUSART2_Write(0x0
      +                          E);
  3802  0000F2  0E0E               	movlw	14
  3803  0000F4  ECA3  F00A         	call	i2_EUSART2_Write
  3804  0000F8  EFEC  F004         	goto	i2l647
  3805  0000FC                     i2l3377:
  3806                           
  3807                           ;mcc_generated_files/interrupt_manager.c: 151:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  3808  0000FC  0E01               	movlw	1
  3809  0000FE  6E3D               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  3810  000100                     
  3811                           ;mcc_generated_files/interrupt_manager.c: 153:                 if (!PORTBbits.RB1) {
  3812  000100  B28A               	btfsc	138,1,c	;volatile
  3813  000102  EF85  F000         	goto	i2u132_41
  3814  000106  EF87  F000         	goto	i2u132_40
  3815  00010A                     i2u132_41:
  3816  00010A  EF8E  F000         	goto	i2l3385
  3817  00010E                     i2u132_40:
  3818  00010E                     
  3819                           ;mcc_generated_files/interrupt_manager.c: 154:                     interruptAction = NUL
      +                          L_ACTION;
  3820  00010E  0E00               	movlw	0
  3821  000110  6E3C               	movwf	_interruptAction^0,c	;volatile
  3822  000112                     
  3823                           ;mcc_generated_files/interrupt_manager.c: 155:                     EUSART2_Write(0x10);
  3824  000112  0E10               	movlw	16
  3825  000114  ECA3  F00A         	call	i2_EUSART2_Write
  3826                           
  3827                           ;mcc_generated_files/interrupt_manager.c: 156:                 } else {
  3828  000118  EFEC  F004         	goto	i2l647
  3829  00011C                     i2l3385:
  3830                           
  3831                           ;mcc_generated_files/interrupt_manager.c: 157:                     interruptAction = STE
      +                          PPER_BACKWARD_UNTIL_STOP_FULL;
  3832  00011C  0E0D               	movlw	13
  3833  00011E  6E3C               	movwf	_interruptAction^0,c	;volatile
  3834  000120                     
  3835                           ;mcc_generated_files/interrupt_manager.c: 158:                     if(!stepperIsAsleep()
      +                          ){
  3836  000120  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  3837  000124  0900               	iorlw	0
  3838  000126  A4D8               	btfss	status,2,c
  3839  000128  EF98  F000         	goto	i2u133_41
  3840  00012C  EF9A  F000         	goto	i2u133_40
  3841  000130                     i2u133_41:
  3842  000130  EF9D  F004         	goto	i2l636
  3843  000134                     i2u133_40:
  3844  000134                     
  3845                           ;mcc_generated_files/interrupt_manager.c: 160:                         EUSART2_Write(0x0
      +                          E);
  3846  000134  0E0E               	movlw	14
  3847  000136  ECA3  F00A         	call	i2_EUSART2_Write
  3848  00013A  EFEC  F004         	goto	i2l647
  3849  00013E                     i2l3391:
  3850                           
  3851                           ;mcc_generated_files/interrupt_manager.c: 167:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  3852  00013E  0E01               	movlw	1
  3853  000140  6E3D               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  3854  000142                     
  3855                           ;mcc_generated_files/interrupt_manager.c: 169:                 if (!PORTBbits.RB0) {
  3856  000142  B08A               	btfsc	138,0,c	;volatile
  3857  000144  EFA6  F000         	goto	i2u134_41
  3858  000148  EFA8  F000         	goto	i2u134_40
  3859  00014C                     i2u134_41:
  3860  00014C  EFAF  F000         	goto	i2l3399
  3861  000150                     i2u134_40:
  3862  000150                     
  3863                           ;mcc_generated_files/interrupt_manager.c: 170:                     interruptAction = NUL
      +                          L_ACTION;
  3864  000150  0E00               	movlw	0
  3865  000152  6E3C               	movwf	_interruptAction^0,c	;volatile
  3866  000154                     
  3867                           ;mcc_generated_files/interrupt_manager.c: 171:                     EUSART2_Write(0x0F);
  3868  000154  0E0F               	movlw	15
  3869  000156  ECA3  F00A         	call	i2_EUSART2_Write
  3870                           
  3871                           ;mcc_generated_files/interrupt_manager.c: 172:                 } else {
  3872  00015A  EFEC  F004         	goto	i2l647
  3873  00015E                     i2l3399:
  3874                           
  3875                           ;mcc_generated_files/interrupt_manager.c: 173:                     interruptAction = STE
      +                          PPER_FORWARD_UNTIL_STOP_HALF;
  3876  00015E  0E0E               	movlw	14
  3877  000160  6E3C               	movwf	_interruptAction^0,c	;volatile
  3878  000162                     
  3879                           ;mcc_generated_files/interrupt_manager.c: 174:                     if(!stepperIsAsleep()
      +                          ){
  3880  000162  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  3881  000166  0900               	iorlw	0
  3882  000168  A4D8               	btfss	status,2,c
  3883  00016A  EFB9  F000         	goto	i2u135_41
  3884  00016E  EFBB  F000         	goto	i2u135_40
  3885  000172                     i2u135_41:
  3886  000172  EF9D  F004         	goto	i2l636
  3887  000176                     i2u135_40:
  3888  000176                     
  3889                           ;mcc_generated_files/interrupt_manager.c: 176:                         EUSART2_Write(0x0
      +                          E);
  3890  000176  0E0E               	movlw	14
  3891  000178  ECA3  F00A         	call	i2_EUSART2_Write
  3892  00017C  EFEC  F004         	goto	i2l647
  3893  000180                     i2l3405:
  3894                           
  3895                           ;mcc_generated_files/interrupt_manager.c: 183:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  3896  000180  0E01               	movlw	1
  3897  000182  6E3D               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  3898  000184                     
  3899                           ;mcc_generated_files/interrupt_manager.c: 185:                 if (!PORTBbits.RB1) {
  3900  000184  B28A               	btfsc	138,1,c	;volatile
  3901  000186  EFC7  F000         	goto	i2u136_41
  3902  00018A  EFC9  F000         	goto	i2u136_40
  3903  00018E                     i2u136_41:
  3904  00018E  EFD0  F000         	goto	i2l3413
  3905  000192                     i2u136_40:
  3906  000192                     
  3907                           ;mcc_generated_files/interrupt_manager.c: 186:                     interruptAction = NUL
      +                          L_ACTION;
  3908  000192  0E00               	movlw	0
  3909  000194  6E3C               	movwf	_interruptAction^0,c	;volatile
  3910  000196                     
  3911                           ;mcc_generated_files/interrupt_manager.c: 187:                     EUSART2_Write(0x10);
  3912  000196  0E10               	movlw	16
  3913  000198  ECA3  F00A         	call	i2_EUSART2_Write
  3914                           
  3915                           ;mcc_generated_files/interrupt_manager.c: 188:                 } else {
  3916  00019C  EFEC  F004         	goto	i2l647
  3917  0001A0                     i2l3413:
  3918                           
  3919                           ;mcc_generated_files/interrupt_manager.c: 189:                     interruptAction = STE
      +                          PPER_BACKWARD_UNTIL_STOP_HALF;
  3920  0001A0  0E0F               	movlw	15
  3921  0001A2  6E3C               	movwf	_interruptAction^0,c	;volatile
  3922  0001A4                     
  3923                           ;mcc_generated_files/interrupt_manager.c: 190:                     if(!stepperIsAsleep()
      +                          ){
  3924  0001A4  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  3925  0001A8  0900               	iorlw	0
  3926  0001AA  A4D8               	btfss	status,2,c
  3927  0001AC  EFDA  F000         	goto	i2u137_41
  3928  0001B0  EFDC  F000         	goto	i2u137_40
  3929  0001B4                     i2u137_41:
  3930  0001B4  EF9D  F004         	goto	i2l636
  3931  0001B8                     i2u137_40:
  3932  0001B8                     
  3933                           ;mcc_generated_files/interrupt_manager.c: 192:                         EUSART2_Write(0x0
      +                          E);
  3934  0001B8  0E0E               	movlw	14
  3935  0001BA  ECA3  F00A         	call	i2_EUSART2_Write
  3936  0001BE  EFEC  F004         	goto	i2l647
  3937  0001C2                     i2l3419:
  3938                           
  3939                           ;mcc_generated_files/interrupt_manager.c: 199:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  3940  0001C2  0E01               	movlw	1
  3941  0001C4  6E3D               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  3942  0001C6                     
  3943                           ;mcc_generated_files/interrupt_manager.c: 201:                 if (!PORTBbits.RB0) {
  3944  0001C6  B08A               	btfsc	138,0,c	;volatile
  3945  0001C8  EFE8  F000         	goto	i2u138_41
  3946  0001CC  EFEA  F000         	goto	i2u138_40
  3947  0001D0                     i2u138_41:
  3948  0001D0  EFF1  F000         	goto	i2l3427
  3949  0001D4                     i2u138_40:
  3950  0001D4                     
  3951                           ;mcc_generated_files/interrupt_manager.c: 202:                     interruptAction = NUL
      +                          L_ACTION;
  3952  0001D4  0E00               	movlw	0
  3953  0001D6  6E3C               	movwf	_interruptAction^0,c	;volatile
  3954  0001D8                     
  3955                           ;mcc_generated_files/interrupt_manager.c: 203:                     EUSART2_Write(0x0F);
  3956  0001D8  0E0F               	movlw	15
  3957  0001DA  ECA3  F00A         	call	i2_EUSART2_Write
  3958                           
  3959                           ;mcc_generated_files/interrupt_manager.c: 204:                 } else {
  3960  0001DE  EFEC  F004         	goto	i2l647
  3961  0001E2                     i2l3427:
  3962                           
  3963                           ;mcc_generated_files/interrupt_manager.c: 205:                     interruptAction = STE
      +                          PPER_FORWARD_UNTIL_STOP_QUARTER;
  3964  0001E2  0E10               	movlw	16
  3965  0001E4  6E3C               	movwf	_interruptAction^0,c	;volatile
  3966  0001E6                     
  3967                           ;mcc_generated_files/interrupt_manager.c: 206:                     if(!stepperIsAsleep()
      +                          ){
  3968  0001E6  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  3969  0001EA  0900               	iorlw	0
  3970  0001EC  A4D8               	btfss	status,2,c
  3971  0001EE  EFFB  F000         	goto	i2u139_41
  3972  0001F2  EFFD  F000         	goto	i2u139_40
  3973  0001F6                     i2u139_41:
  3974  0001F6  EF9D  F004         	goto	i2l636
  3975  0001FA                     i2u139_40:
  3976  0001FA                     
  3977                           ;mcc_generated_files/interrupt_manager.c: 208:                         EUSART2_Write(0x0
      +                          E);
  3978  0001FA  0E0E               	movlw	14
  3979  0001FC  ECA3  F00A         	call	i2_EUSART2_Write
  3980  000200  EFEC  F004         	goto	i2l647
  3981  000204                     i2l3433:
  3982                           
  3983                           ;mcc_generated_files/interrupt_manager.c: 216:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  3984  000204  0E01               	movlw	1
  3985  000206  6E3D               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  3986  000208                     
  3987                           ;mcc_generated_files/interrupt_manager.c: 218:                 if (!PORTBbits.RB1) {
  3988  000208  B28A               	btfsc	138,1,c	;volatile
  3989  00020A  EF09  F001         	goto	i2u140_41
  3990  00020E  EF0B  F001         	goto	i2u140_40
  3991  000212                     i2u140_41:
  3992  000212  EF12  F001         	goto	i2l3441
  3993  000216                     i2u140_40:
  3994  000216                     
  3995                           ;mcc_generated_files/interrupt_manager.c: 219:                     interruptAction = NUL
      +                          L_ACTION;
  3996  000216  0E00               	movlw	0
  3997  000218  6E3C               	movwf	_interruptAction^0,c	;volatile
  3998  00021A                     
  3999                           ;mcc_generated_files/interrupt_manager.c: 220:                     EUSART2_Write(0x10);
  4000  00021A  0E10               	movlw	16
  4001  00021C  ECA3  F00A         	call	i2_EUSART2_Write
  4002                           
  4003                           ;mcc_generated_files/interrupt_manager.c: 221:                 } else {
  4004  000220  EFEC  F004         	goto	i2l647
  4005  000224                     i2l3441:
  4006                           
  4007                           ;mcc_generated_files/interrupt_manager.c: 222:                     interruptAction = STE
      +                          PPER_BACKWARD_UNTIL_STOP_QUARTER;
  4008  000224  0E11               	movlw	17
  4009  000226  6E3C               	movwf	_interruptAction^0,c	;volatile
  4010  000228                     
  4011                           ;mcc_generated_files/interrupt_manager.c: 223:                     if(!stepperIsAsleep()
      +                          ){
  4012  000228  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  4013  00022C  0900               	iorlw	0
  4014  00022E  A4D8               	btfss	status,2,c
  4015  000230  EF1C  F001         	goto	i2u141_41
  4016  000234  EF1E  F001         	goto	i2u141_40
  4017  000238                     i2u141_41:
  4018  000238  EF9D  F004         	goto	i2l636
  4019  00023C                     i2u141_40:
  4020  00023C                     
  4021                           ;mcc_generated_files/interrupt_manager.c: 225:                         EUSART2_Write(0x0
      +                          E);
  4022  00023C  0E0E               	movlw	14
  4023  00023E  ECA3  F00A         	call	i2_EUSART2_Write
  4024  000242  EFEC  F004         	goto	i2l647
  4025  000246                     i2l3447:
  4026                           
  4027                           ;mcc_generated_files/interrupt_manager.c: 232:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  4028  000246  0E01               	movlw	1
  4029  000248  6E3D               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  4030  00024A                     
  4031                           ;mcc_generated_files/interrupt_manager.c: 234:                 if (!PORTBbits.RB0) {
  4032  00024A  B08A               	btfsc	138,0,c	;volatile
  4033  00024C  EF2A  F001         	goto	i2u142_41
  4034  000250  EF2C  F001         	goto	i2u142_40
  4035  000254                     i2u142_41:
  4036  000254  EF33  F001         	goto	i2l3455
  4037  000258                     i2u142_40:
  4038  000258                     
  4039                           ;mcc_generated_files/interrupt_manager.c: 235:                     interruptAction = NUL
      +                          L_ACTION;
  4040  000258  0E00               	movlw	0
  4041  00025A  6E3C               	movwf	_interruptAction^0,c	;volatile
  4042  00025C                     
  4043                           ;mcc_generated_files/interrupt_manager.c: 236:                     EUSART2_Write(0x0F);
  4044  00025C  0E0F               	movlw	15
  4045  00025E  ECA3  F00A         	call	i2_EUSART2_Write
  4046                           
  4047                           ;mcc_generated_files/interrupt_manager.c: 237:                 } else {
  4048  000262  EFEC  F004         	goto	i2l647
  4049  000266                     i2l3455:
  4050                           
  4051                           ;mcc_generated_files/interrupt_manager.c: 238:                     interruptAction = STE
      +                          PPER_FORWARD_UNTIL_STOP_EIGHTH;
  4052  000266  0E12               	movlw	18
  4053  000268  6E3C               	movwf	_interruptAction^0,c	;volatile
  4054  00026A                     
  4055                           ;mcc_generated_files/interrupt_manager.c: 239:                     if(!stepperIsAsleep()
      +                          ){
  4056  00026A  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  4057  00026E  0900               	iorlw	0
  4058  000270  A4D8               	btfss	status,2,c
  4059  000272  EF3D  F001         	goto	i2u143_41
  4060  000276  EF3F  F001         	goto	i2u143_40
  4061  00027A                     i2u143_41:
  4062  00027A  EF9D  F004         	goto	i2l636
  4063  00027E                     i2u143_40:
  4064  00027E                     
  4065                           ;mcc_generated_files/interrupt_manager.c: 241:                         EUSART2_Write(0x0
      +                          E);
  4066  00027E  0E0E               	movlw	14
  4067  000280  ECA3  F00A         	call	i2_EUSART2_Write
  4068  000284  EFEC  F004         	goto	i2l647
  4069  000288                     i2l3461:
  4070                           
  4071                           ;mcc_generated_files/interrupt_manager.c: 248:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  4072  000288  0E01               	movlw	1
  4073  00028A  6E3D               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  4074  00028C                     
  4075                           ;mcc_generated_files/interrupt_manager.c: 250:                 if (!PORTBbits.RB1) {
  4076  00028C  B28A               	btfsc	138,1,c	;volatile
  4077  00028E  EF4B  F001         	goto	i2u144_41
  4078  000292  EF4D  F001         	goto	i2u144_40
  4079  000296                     i2u144_41:
  4080  000296  EF54  F001         	goto	i2l3469
  4081  00029A                     i2u144_40:
  4082  00029A                     
  4083                           ;mcc_generated_files/interrupt_manager.c: 251:                     interruptAction = NUL
      +                          L_ACTION;
  4084  00029A  0E00               	movlw	0
  4085  00029C  6E3C               	movwf	_interruptAction^0,c	;volatile
  4086  00029E                     
  4087                           ;mcc_generated_files/interrupt_manager.c: 252:                     EUSART2_Write(0x10);
  4088  00029E  0E10               	movlw	16
  4089  0002A0  ECA3  F00A         	call	i2_EUSART2_Write
  4090                           
  4091                           ;mcc_generated_files/interrupt_manager.c: 253:                 } else {
  4092  0002A4  EFEC  F004         	goto	i2l647
  4093  0002A8                     i2l3469:
  4094                           
  4095                           ;mcc_generated_files/interrupt_manager.c: 254:                     interruptAction = STE
      +                          PPER_BACKWARD_UNTIL_STOP_EIGHTH;
  4096  0002A8  0E13               	movlw	19
  4097  0002AA  6E3C               	movwf	_interruptAction^0,c	;volatile
  4098  0002AC                     
  4099                           ;mcc_generated_files/interrupt_manager.c: 255:                     if(!stepperIsAsleep()
      +                          ){
  4100  0002AC  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  4101  0002B0  0900               	iorlw	0
  4102  0002B2  A4D8               	btfss	status,2,c
  4103  0002B4  EF5E  F001         	goto	i2u145_41
  4104  0002B8  EF60  F001         	goto	i2u145_40
  4105  0002BC                     i2u145_41:
  4106  0002BC  EF9D  F004         	goto	i2l636
  4107  0002C0                     i2u145_40:
  4108  0002C0                     
  4109                           ;mcc_generated_files/interrupt_manager.c: 257:                         EUSART2_Write(0x0
      +                          E);
  4110  0002C0  0E0E               	movlw	14
  4111  0002C2  ECA3  F00A         	call	i2_EUSART2_Write
  4112  0002C6  EFEC  F004         	goto	i2l647
  4113  0002CA                     i2l3475:
  4114                           
  4115                           ;mcc_generated_files/interrupt_manager.c: 264:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  4116  0002CA  0E01               	movlw	1
  4117  0002CC  6E3D               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  4118  0002CE                     
  4119                           ;mcc_generated_files/interrupt_manager.c: 266:                 if (!PORTBbits.RB0) {
  4120  0002CE  B08A               	btfsc	138,0,c	;volatile
  4121  0002D0  EF6C  F001         	goto	i2u146_41
  4122  0002D4  EF6E  F001         	goto	i2u146_40
  4123  0002D8                     i2u146_41:
  4124  0002D8  EF75  F001         	goto	i2l3483
  4125  0002DC                     i2u146_40:
  4126  0002DC                     
  4127                           ;mcc_generated_files/interrupt_manager.c: 267:                     interruptAction = NUL
      +                          L_ACTION;
  4128  0002DC  0E00               	movlw	0
  4129  0002DE  6E3C               	movwf	_interruptAction^0,c	;volatile
  4130  0002E0                     
  4131                           ;mcc_generated_files/interrupt_manager.c: 268:                     EUSART2_Write(0x0F);
  4132  0002E0  0E0F               	movlw	15
  4133  0002E2  ECA3  F00A         	call	i2_EUSART2_Write
  4134                           
  4135                           ;mcc_generated_files/interrupt_manager.c: 269:                 } else {
  4136  0002E6  EFEC  F004         	goto	i2l647
  4137  0002EA                     i2l3483:
  4138                           
  4139                           ;mcc_generated_files/interrupt_manager.c: 270:                     interruptAction = STE
      +                          PPER_FORWARD_UNTIL_STOP_SIXTEENTH;
  4140  0002EA  0E14               	movlw	20
  4141  0002EC  6E3C               	movwf	_interruptAction^0,c	;volatile
  4142  0002EE                     
  4143                           ;mcc_generated_files/interrupt_manager.c: 271:                     if(!stepperIsAsleep()
      +                          ){
  4144  0002EE  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  4145  0002F2  0900               	iorlw	0
  4146  0002F4  A4D8               	btfss	status,2,c
  4147  0002F6  EF7F  F001         	goto	i2u147_41
  4148  0002FA  EF81  F001         	goto	i2u147_40
  4149  0002FE                     i2u147_41:
  4150  0002FE  EF9D  F004         	goto	i2l636
  4151  000302                     i2u147_40:
  4152  000302                     
  4153                           ;mcc_generated_files/interrupt_manager.c: 273:                         EUSART2_Write(0x0
      +                          E);
  4154  000302  0E0E               	movlw	14
  4155  000304  ECA3  F00A         	call	i2_EUSART2_Write
  4156  000308  EFEC  F004         	goto	i2l647
  4157  00030C                     i2l3489:
  4158                           
  4159                           ;mcc_generated_files/interrupt_manager.c: 280:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  4160  00030C  0E01               	movlw	1
  4161  00030E  6E3D               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  4162  000310                     
  4163                           ;mcc_generated_files/interrupt_manager.c: 282:                 if (!PORTBbits.RB1) {
  4164  000310  B28A               	btfsc	138,1,c	;volatile
  4165  000312  EF8D  F001         	goto	i2u148_41
  4166  000316  EF8F  F001         	goto	i2u148_40
  4167  00031A                     i2u148_41:
  4168  00031A  EF96  F001         	goto	i2l3497
  4169  00031E                     i2u148_40:
  4170  00031E                     
  4171                           ;mcc_generated_files/interrupt_manager.c: 283:                     interruptAction = NUL
      +                          L_ACTION;
  4172  00031E  0E00               	movlw	0
  4173  000320  6E3C               	movwf	_interruptAction^0,c	;volatile
  4174  000322                     
  4175                           ;mcc_generated_files/interrupt_manager.c: 284:                     EUSART2_Write(0x10);
  4176  000322  0E10               	movlw	16
  4177  000324  ECA3  F00A         	call	i2_EUSART2_Write
  4178                           
  4179                           ;mcc_generated_files/interrupt_manager.c: 285:                 } else {
  4180  000328  EFEC  F004         	goto	i2l647
  4181  00032C                     i2l3497:
  4182                           
  4183                           ;mcc_generated_files/interrupt_manager.c: 286:                     interruptAction = STE
      +                          PPER_BACKWARD_UNTIL_STOP_SIXTEENTH;
  4184  00032C  0E15               	movlw	21
  4185  00032E  6E3C               	movwf	_interruptAction^0,c	;volatile
  4186  000330                     
  4187                           ;mcc_generated_files/interrupt_manager.c: 287:                     if(!stepperIsAsleep()
      +                          ){
  4188  000330  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  4189  000334  0900               	iorlw	0
  4190  000336  A4D8               	btfss	status,2,c
  4191  000338  EFA0  F001         	goto	i2u149_41
  4192  00033C  EFA2  F001         	goto	i2u149_40
  4193  000340                     i2u149_41:
  4194  000340  EF9D  F004         	goto	i2l636
  4195  000344                     i2u149_40:
  4196  000344                     
  4197                           ;mcc_generated_files/interrupt_manager.c: 289:                         EUSART2_Write(0x0
      +                          E);
  4198  000344  0E0E               	movlw	14
  4199  000346  ECA3  F00A         	call	i2_EUSART2_Write
  4200  00034A  EFEC  F004         	goto	i2l647
  4201  00034E                     i2l3503:
  4202                           
  4203                           ;mcc_generated_files/interrupt_manager.c: 296:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  4204  00034E  0E01               	movlw	1
  4205  000350  6E3D               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  4206  000352                     
  4207                           ;mcc_generated_files/interrupt_manager.c: 298:                 if (!PORTBbits.RB0) {
  4208  000352  B08A               	btfsc	138,0,c	;volatile
  4209  000354  EFAE  F001         	goto	i2u150_41
  4210  000358  EFB0  F001         	goto	i2u150_40
  4211  00035C                     i2u150_41:
  4212  00035C  EFB7  F001         	goto	i2l3511
  4213  000360                     i2u150_40:
  4214  000360                     
  4215                           ;mcc_generated_files/interrupt_manager.c: 299:                     interruptAction = NUL
      +                          L_ACTION;
  4216  000360  0E00               	movlw	0
  4217  000362  6E3C               	movwf	_interruptAction^0,c	;volatile
  4218  000364                     
  4219                           ;mcc_generated_files/interrupt_manager.c: 300:                     EUSART2_Write(0x0F);
  4220  000364  0E0F               	movlw	15
  4221  000366  ECA3  F00A         	call	i2_EUSART2_Write
  4222                           
  4223                           ;mcc_generated_files/interrupt_manager.c: 301:                 } else {
  4224  00036A  EFEC  F004         	goto	i2l647
  4225  00036E                     i2l3511:
  4226                           
  4227                           ;mcc_generated_files/interrupt_manager.c: 302:                     interruptAction = STE
      +                          PPER_INCH_FORWARD_FULL;
  4228  00036E  0E02               	movlw	2
  4229  000370  6E3C               	movwf	_interruptAction^0,c	;volatile
  4230  000372                     
  4231                           ;mcc_generated_files/interrupt_manager.c: 303:                     if(!stepperIsAsleep()
      +                          ){
  4232  000372  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  4233  000376  0900               	iorlw	0
  4234  000378  A4D8               	btfss	status,2,c
  4235  00037A  EFC1  F001         	goto	i2u151_41
  4236  00037E  EFC3  F001         	goto	i2u151_40
  4237  000382                     i2u151_41:
  4238  000382  EF9D  F004         	goto	i2l636
  4239  000386                     i2u151_40:
  4240  000386                     
  4241                           ;mcc_generated_files/interrupt_manager.c: 305:                         EUSART2_Write(0x0
      +                          E);
  4242  000386  0E0E               	movlw	14
  4243  000388  ECA3  F00A         	call	i2_EUSART2_Write
  4244  00038C  EFEC  F004         	goto	i2l647
  4245  000390                     i2l3517:
  4246                           
  4247                           ;mcc_generated_files/interrupt_manager.c: 312:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  4248  000390  0E01               	movlw	1
  4249  000392  6E3D               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  4250  000394                     
  4251                           ;mcc_generated_files/interrupt_manager.c: 314:                 if (!PORTBbits.RB1) {
  4252  000394  B28A               	btfsc	138,1,c	;volatile
  4253  000396  EFCF  F001         	goto	i2u152_41
  4254  00039A  EFD1  F001         	goto	i2u152_40
  4255  00039E                     i2u152_41:
  4256  00039E  EFD8  F001         	goto	i2l3525
  4257  0003A2                     i2u152_40:
  4258  0003A2                     
  4259                           ;mcc_generated_files/interrupt_manager.c: 315:                     interruptAction = NUL
      +                          L_ACTION;
  4260  0003A2  0E00               	movlw	0
  4261  0003A4  6E3C               	movwf	_interruptAction^0,c	;volatile
  4262  0003A6                     
  4263                           ;mcc_generated_files/interrupt_manager.c: 316:                     EUSART2_Write(0x10);
  4264  0003A6  0E10               	movlw	16
  4265  0003A8  ECA3  F00A         	call	i2_EUSART2_Write
  4266                           
  4267                           ;mcc_generated_files/interrupt_manager.c: 317:                 } else {
  4268  0003AC  EFEC  F004         	goto	i2l647
  4269  0003B0                     i2l3525:
  4270                           
  4271                           ;mcc_generated_files/interrupt_manager.c: 318:                     interruptAction = STE
      +                          PPER_INCH_BACKWARD_FULL;
  4272  0003B0  0E03               	movlw	3
  4273  0003B2  6E3C               	movwf	_interruptAction^0,c	;volatile
  4274  0003B4                     
  4275                           ;mcc_generated_files/interrupt_manager.c: 319:                     if(!stepperIsAsleep()
      +                          ){
  4276  0003B4  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  4277  0003B8  0900               	iorlw	0
  4278  0003BA  A4D8               	btfss	status,2,c
  4279  0003BC  EFE2  F001         	goto	i2u153_41
  4280  0003C0  EFE4  F001         	goto	i2u153_40
  4281  0003C4                     i2u153_41:
  4282  0003C4  EF9D  F004         	goto	i2l636
  4283  0003C8                     i2u153_40:
  4284  0003C8                     
  4285                           ;mcc_generated_files/interrupt_manager.c: 321:                         EUSART2_Write(0x0
      +                          E);
  4286  0003C8  0E0E               	movlw	14
  4287  0003CA  ECA3  F00A         	call	i2_EUSART2_Write
  4288  0003CE  EFEC  F004         	goto	i2l647
  4289  0003D2                     i2l3531:
  4290                           
  4291                           ;mcc_generated_files/interrupt_manager.c: 328:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  4292  0003D2  0E01               	movlw	1
  4293  0003D4  6E3D               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  4294  0003D6                     
  4295                           ;mcc_generated_files/interrupt_manager.c: 330:                 if (!PORTBbits.RB0) {
  4296  0003D6  B08A               	btfsc	138,0,c	;volatile
  4297  0003D8  EFF0  F001         	goto	i2u154_41
  4298  0003DC  EFF2  F001         	goto	i2u154_40
  4299  0003E0                     i2u154_41:
  4300  0003E0  EFF9  F001         	goto	i2l3539
  4301  0003E4                     i2u154_40:
  4302  0003E4                     
  4303                           ;mcc_generated_files/interrupt_manager.c: 331:                     interruptAction = NUL
      +                          L_ACTION;
  4304  0003E4  0E00               	movlw	0
  4305  0003E6  6E3C               	movwf	_interruptAction^0,c	;volatile
  4306  0003E8                     
  4307                           ;mcc_generated_files/interrupt_manager.c: 332:                     EUSART2_Write(0x0F);
  4308  0003E8  0E0F               	movlw	15
  4309  0003EA  ECA3  F00A         	call	i2_EUSART2_Write
  4310                           
  4311                           ;mcc_generated_files/interrupt_manager.c: 333:                 } else {
  4312  0003EE  EFEC  F004         	goto	i2l647
  4313  0003F2                     i2l3539:
  4314                           
  4315                           ;mcc_generated_files/interrupt_manager.c: 334:                     interruptAction = STE
      +                          PPER_INCH_FORWARD_HALF;
  4316  0003F2  0E04               	movlw	4
  4317  0003F4  6E3C               	movwf	_interruptAction^0,c	;volatile
  4318  0003F6                     
  4319                           ;mcc_generated_files/interrupt_manager.c: 335:                     if(!stepperIsAsleep()
      +                          ){
  4320  0003F6  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  4321  0003FA  0900               	iorlw	0
  4322  0003FC  A4D8               	btfss	status,2,c
  4323  0003FE  EF03  F002         	goto	i2u155_41
  4324  000402  EF05  F002         	goto	i2u155_40
  4325  000406                     i2u155_41:
  4326  000406  EF9D  F004         	goto	i2l636
  4327  00040A                     i2u155_40:
  4328  00040A                     
  4329                           ;mcc_generated_files/interrupt_manager.c: 337:                         EUSART2_Write(0x0
      +                          E);
  4330  00040A  0E0E               	movlw	14
  4331  00040C  ECA3  F00A         	call	i2_EUSART2_Write
  4332  000410  EFEC  F004         	goto	i2l647
  4333  000414                     i2l3545:
  4334                           
  4335                           ;mcc_generated_files/interrupt_manager.c: 344:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  4336  000414  0E01               	movlw	1
  4337  000416  6E3D               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  4338  000418                     
  4339                           ;mcc_generated_files/interrupt_manager.c: 346:                 if (!PORTBbits.RB1) {
  4340  000418  B28A               	btfsc	138,1,c	;volatile
  4341  00041A  EF11  F002         	goto	i2u156_41
  4342  00041E  EF13  F002         	goto	i2u156_40
  4343  000422                     i2u156_41:
  4344  000422  EF1A  F002         	goto	i2l3553
  4345  000426                     i2u156_40:
  4346  000426                     
  4347                           ;mcc_generated_files/interrupt_manager.c: 347:                     interruptAction = NUL
      +                          L_ACTION;
  4348  000426  0E00               	movlw	0
  4349  000428  6E3C               	movwf	_interruptAction^0,c	;volatile
  4350  00042A                     
  4351                           ;mcc_generated_files/interrupt_manager.c: 348:                     EUSART2_Write(0x10);
  4352  00042A  0E10               	movlw	16
  4353  00042C  ECA3  F00A         	call	i2_EUSART2_Write
  4354                           
  4355                           ;mcc_generated_files/interrupt_manager.c: 349:                 } else {
  4356  000430  EFEC  F004         	goto	i2l647
  4357  000434                     i2l3553:
  4358                           
  4359                           ;mcc_generated_files/interrupt_manager.c: 350:                     interruptAction = STE
      +                          PPER_INCH_BACKWARD_HALF;
  4360  000434  0E05               	movlw	5
  4361  000436  6E3C               	movwf	_interruptAction^0,c	;volatile
  4362  000438                     
  4363                           ;mcc_generated_files/interrupt_manager.c: 351:                     if(!stepperIsAsleep()
      +                          ){
  4364  000438  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  4365  00043C  0900               	iorlw	0
  4366  00043E  A4D8               	btfss	status,2,c
  4367  000440  EF24  F002         	goto	i2u157_41
  4368  000444  EF26  F002         	goto	i2u157_40
  4369  000448                     i2u157_41:
  4370  000448  EF9D  F004         	goto	i2l636
  4371  00044C                     i2u157_40:
  4372  00044C                     
  4373                           ;mcc_generated_files/interrupt_manager.c: 353:                         EUSART2_Write(0x0
      +                          E);
  4374  00044C  0E0E               	movlw	14
  4375  00044E  ECA3  F00A         	call	i2_EUSART2_Write
  4376  000452  EFEC  F004         	goto	i2l647
  4377  000456                     i2l3559:
  4378                           
  4379                           ;mcc_generated_files/interrupt_manager.c: 360:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  4380  000456  0E01               	movlw	1
  4381  000458  6E3D               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  4382  00045A                     
  4383                           ;mcc_generated_files/interrupt_manager.c: 362:                 if(!PORTBbits.RB0) {
  4384  00045A  B08A               	btfsc	138,0,c	;volatile
  4385  00045C  EF32  F002         	goto	i2u158_41
  4386  000460  EF34  F002         	goto	i2u158_40
  4387  000464                     i2u158_41:
  4388  000464  EF3B  F002         	goto	i2l3567
  4389  000468                     i2u158_40:
  4390  000468                     
  4391                           ;mcc_generated_files/interrupt_manager.c: 363:                     interruptAction = NUL
      +                          L_ACTION;
  4392  000468  0E00               	movlw	0
  4393  00046A  6E3C               	movwf	_interruptAction^0,c	;volatile
  4394  00046C                     
  4395                           ;mcc_generated_files/interrupt_manager.c: 364:                     EUSART2_Write(0x0F);
  4396  00046C  0E0F               	movlw	15
  4397  00046E  ECA3  F00A         	call	i2_EUSART2_Write
  4398                           
  4399                           ;mcc_generated_files/interrupt_manager.c: 365:                 } else {
  4400  000472  EFEC  F004         	goto	i2l647
  4401  000476                     i2l3567:
  4402                           
  4403                           ;mcc_generated_files/interrupt_manager.c: 366:                     interruptAction = STE
      +                          PPER_INCH_FORWARD_QUARTER;
  4404  000476  0E06               	movlw	6
  4405  000478  6E3C               	movwf	_interruptAction^0,c	;volatile
  4406  00047A                     
  4407                           ;mcc_generated_files/interrupt_manager.c: 367:                     if(!stepperIsAsleep()
      +                          ){
  4408  00047A  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  4409  00047E  0900               	iorlw	0
  4410  000480  A4D8               	btfss	status,2,c
  4411  000482  EF45  F002         	goto	i2u159_41
  4412  000486  EF47  F002         	goto	i2u159_40
  4413  00048A                     i2u159_41:
  4414  00048A  EF9D  F004         	goto	i2l636
  4415  00048E                     i2u159_40:
  4416  00048E                     
  4417                           ;mcc_generated_files/interrupt_manager.c: 369:                         EUSART2_Write(0x0
      +                          E);
  4418  00048E  0E0E               	movlw	14
  4419  000490  ECA3  F00A         	call	i2_EUSART2_Write
  4420  000494  EFEC  F004         	goto	i2l647
  4421  000498                     i2l3573:
  4422                           
  4423                           ;mcc_generated_files/interrupt_manager.c: 376:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  4424  000498  0E01               	movlw	1
  4425  00049A  6E3D               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  4426  00049C                     
  4427                           ;mcc_generated_files/interrupt_manager.c: 378:                 if (!PORTBbits.RB1) {
  4428  00049C  B28A               	btfsc	138,1,c	;volatile
  4429  00049E  EF53  F002         	goto	i2u160_41
  4430  0004A2  EF55  F002         	goto	i2u160_40
  4431  0004A6                     i2u160_41:
  4432  0004A6  EF5C  F002         	goto	i2l3581
  4433  0004AA                     i2u160_40:
  4434  0004AA                     
  4435                           ;mcc_generated_files/interrupt_manager.c: 379:                     interruptAction = NUL
      +                          L_ACTION;
  4436  0004AA  0E00               	movlw	0
  4437  0004AC  6E3C               	movwf	_interruptAction^0,c	;volatile
  4438  0004AE                     
  4439                           ;mcc_generated_files/interrupt_manager.c: 380:                     EUSART2_Write(0x10);
  4440  0004AE  0E10               	movlw	16
  4441  0004B0  ECA3  F00A         	call	i2_EUSART2_Write
  4442                           
  4443                           ;mcc_generated_files/interrupt_manager.c: 381:                 } else {
  4444  0004B4  EFEC  F004         	goto	i2l647
  4445  0004B8                     i2l3581:
  4446                           
  4447                           ;mcc_generated_files/interrupt_manager.c: 382:                     interruptAction = STE
      +                          PPER_INCH_BACKWARD_QUARTER;
  4448  0004B8  0E07               	movlw	7
  4449  0004BA  6E3C               	movwf	_interruptAction^0,c	;volatile
  4450  0004BC                     
  4451                           ;mcc_generated_files/interrupt_manager.c: 383:                     if(!stepperIsAsleep()
      +                          ){
  4452  0004BC  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  4453  0004C0  0900               	iorlw	0
  4454  0004C2  A4D8               	btfss	status,2,c
  4455  0004C4  EF66  F002         	goto	i2u161_41
  4456  0004C8  EF68  F002         	goto	i2u161_40
  4457  0004CC                     i2u161_41:
  4458  0004CC  EF9D  F004         	goto	i2l636
  4459  0004D0                     i2u161_40:
  4460  0004D0                     
  4461                           ;mcc_generated_files/interrupt_manager.c: 385:                         EUSART2_Write(0x0
      +                          E);
  4462  0004D0  0E0E               	movlw	14
  4463  0004D2  ECA3  F00A         	call	i2_EUSART2_Write
  4464  0004D6  EFEC  F004         	goto	i2l647
  4465  0004DA                     i2l3587:
  4466                           
  4467                           ;mcc_generated_files/interrupt_manager.c: 392:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  4468  0004DA  0E01               	movlw	1
  4469  0004DC  6E3D               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  4470  0004DE                     
  4471                           ;mcc_generated_files/interrupt_manager.c: 394:                 if (!PORTBbits.RB0) {
  4472  0004DE  B08A               	btfsc	138,0,c	;volatile
  4473  0004E0  EF74  F002         	goto	i2u162_41
  4474  0004E4  EF76  F002         	goto	i2u162_40
  4475  0004E8                     i2u162_41:
  4476  0004E8  EF7D  F002         	goto	i2l3595
  4477  0004EC                     i2u162_40:
  4478  0004EC                     
  4479                           ;mcc_generated_files/interrupt_manager.c: 395:                     interruptAction = NUL
      +                          L_ACTION;
  4480  0004EC  0E00               	movlw	0
  4481  0004EE  6E3C               	movwf	_interruptAction^0,c	;volatile
  4482  0004F0                     
  4483                           ;mcc_generated_files/interrupt_manager.c: 396:                     EUSART2_Write(0x0F);
  4484  0004F0  0E0F               	movlw	15
  4485  0004F2  ECA3  F00A         	call	i2_EUSART2_Write
  4486                           
  4487                           ;mcc_generated_files/interrupt_manager.c: 397:                 } else {
  4488  0004F6  EFEC  F004         	goto	i2l647
  4489  0004FA                     i2l3595:
  4490                           
  4491                           ;mcc_generated_files/interrupt_manager.c: 398:                     interruptAction = STE
      +                          PPER_INCH_FORWARD_EIGHTH;
  4492  0004FA  0E08               	movlw	8
  4493  0004FC  6E3C               	movwf	_interruptAction^0,c	;volatile
  4494  0004FE                     
  4495                           ;mcc_generated_files/interrupt_manager.c: 399:                     if(!stepperIsAsleep()
      +                          ){
  4496  0004FE  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  4497  000502  0900               	iorlw	0
  4498  000504  A4D8               	btfss	status,2,c
  4499  000506  EF87  F002         	goto	i2u163_41
  4500  00050A  EF89  F002         	goto	i2u163_40
  4501  00050E                     i2u163_41:
  4502  00050E  EF9D  F004         	goto	i2l636
  4503  000512                     i2u163_40:
  4504  000512                     
  4505                           ;mcc_generated_files/interrupt_manager.c: 401:                         EUSART2_Write(0x0
      +                          E);
  4506  000512  0E0E               	movlw	14
  4507  000514  ECA3  F00A         	call	i2_EUSART2_Write
  4508  000518  EFEC  F004         	goto	i2l647
  4509  00051C                     i2l3601:
  4510                           
  4511                           ;mcc_generated_files/interrupt_manager.c: 408:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  4512  00051C  0E01               	movlw	1
  4513  00051E  6E3D               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  4514  000520                     
  4515                           ;mcc_generated_files/interrupt_manager.c: 410:                 if (!PORTBbits.RB1) {
  4516  000520  B28A               	btfsc	138,1,c	;volatile
  4517  000522  EF95  F002         	goto	i2u164_41
  4518  000526  EF97  F002         	goto	i2u164_40
  4519  00052A                     i2u164_41:
  4520  00052A  EF9E  F002         	goto	i2l3609
  4521  00052E                     i2u164_40:
  4522  00052E                     
  4523                           ;mcc_generated_files/interrupt_manager.c: 411:                     interruptAction = NUL
      +                          L_ACTION;
  4524  00052E  0E00               	movlw	0
  4525  000530  6E3C               	movwf	_interruptAction^0,c	;volatile
  4526  000532                     
  4527                           ;mcc_generated_files/interrupt_manager.c: 412:                     EUSART2_Write(0x10);
  4528  000532  0E10               	movlw	16
  4529  000534  ECA3  F00A         	call	i2_EUSART2_Write
  4530                           
  4531                           ;mcc_generated_files/interrupt_manager.c: 413:                 } else {
  4532  000538  EFEC  F004         	goto	i2l647
  4533  00053C                     i2l3609:
  4534                           
  4535                           ;mcc_generated_files/interrupt_manager.c: 414:                     interruptAction = STE
      +                          PPER_INCH_BACKWARD_EIGHTH;
  4536  00053C  0E09               	movlw	9
  4537  00053E  6E3C               	movwf	_interruptAction^0,c	;volatile
  4538  000540                     
  4539                           ;mcc_generated_files/interrupt_manager.c: 415:                     if(!stepperIsAsleep()
      +                          ){
  4540  000540  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  4541  000544  0900               	iorlw	0
  4542  000546  A4D8               	btfss	status,2,c
  4543  000548  EFA8  F002         	goto	i2u165_41
  4544  00054C  EFAA  F002         	goto	i2u165_40
  4545  000550                     i2u165_41:
  4546  000550  EF9D  F004         	goto	i2l636
  4547  000554                     i2u165_40:
  4548  000554                     
  4549                           ;mcc_generated_files/interrupt_manager.c: 417:                         EUSART2_Write(0x0
      +                          E);
  4550  000554  0E0E               	movlw	14
  4551  000556  ECA3  F00A         	call	i2_EUSART2_Write
  4552  00055A  EFEC  F004         	goto	i2l647
  4553  00055E                     i2l3615:
  4554                           
  4555                           ;mcc_generated_files/interrupt_manager.c: 424:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  4556  00055E  0E01               	movlw	1
  4557  000560  6E3D               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  4558  000562                     
  4559                           ;mcc_generated_files/interrupt_manager.c: 426:                 if (!PORTBbits.RB0) {
  4560  000562  B08A               	btfsc	138,0,c	;volatile
  4561  000564  EFB6  F002         	goto	i2u166_41
  4562  000568  EFB8  F002         	goto	i2u166_40
  4563  00056C                     i2u166_41:
  4564  00056C  EFBF  F002         	goto	i2l3623
  4565  000570                     i2u166_40:
  4566  000570                     
  4567                           ;mcc_generated_files/interrupt_manager.c: 427:                     interruptAction = NUL
      +                          L_ACTION;
  4568  000570  0E00               	movlw	0
  4569  000572  6E3C               	movwf	_interruptAction^0,c	;volatile
  4570  000574                     
  4571                           ;mcc_generated_files/interrupt_manager.c: 428:                     EUSART2_Write(0x0F);
  4572  000574  0E0F               	movlw	15
  4573  000576  ECA3  F00A         	call	i2_EUSART2_Write
  4574                           
  4575                           ;mcc_generated_files/interrupt_manager.c: 429:                 } else {
  4576  00057A  EFEC  F004         	goto	i2l647
  4577  00057E                     i2l3623:
  4578                           
  4579                           ;mcc_generated_files/interrupt_manager.c: 430:                     interruptAction = STE
      +                          PPER_INCH_FORWARD_SIXTEENTH;
  4580  00057E  0E0A               	movlw	10
  4581  000580  6E3C               	movwf	_interruptAction^0,c	;volatile
  4582  000582                     
  4583                           ;mcc_generated_files/interrupt_manager.c: 431:                     if(!stepperIsAsleep()
      +                          ){
  4584  000582  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  4585  000586  0900               	iorlw	0
  4586  000588  A4D8               	btfss	status,2,c
  4587  00058A  EFC9  F002         	goto	i2u167_41
  4588  00058E  EFCB  F002         	goto	i2u167_40
  4589  000592                     i2u167_41:
  4590  000592  EF9D  F004         	goto	i2l636
  4591  000596                     i2u167_40:
  4592  000596                     
  4593                           ;mcc_generated_files/interrupt_manager.c: 433:                         EUSART2_Write(0x0
      +                          E);
  4594  000596  0E0E               	movlw	14
  4595  000598  ECA3  F00A         	call	i2_EUSART2_Write
  4596  00059C  EFEC  F004         	goto	i2l647
  4597  0005A0                     i2l3629:
  4598                           
  4599                           ;mcc_generated_files/interrupt_manager.c: 440:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  4600  0005A0  0E01               	movlw	1
  4601  0005A2  6E3D               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  4602  0005A4                     
  4603                           ;mcc_generated_files/interrupt_manager.c: 442:                 if (!PORTBbits.RB1) {
  4604  0005A4  B28A               	btfsc	138,1,c	;volatile
  4605  0005A6  EFD7  F002         	goto	i2u168_41
  4606  0005AA  EFD9  F002         	goto	i2u168_40
  4607  0005AE                     i2u168_41:
  4608  0005AE  EFE0  F002         	goto	i2l3637
  4609  0005B2                     i2u168_40:
  4610  0005B2                     
  4611                           ;mcc_generated_files/interrupt_manager.c: 443:                     interruptAction = NUL
      +                          L_ACTION;
  4612  0005B2  0E00               	movlw	0
  4613  0005B4  6E3C               	movwf	_interruptAction^0,c	;volatile
  4614  0005B6                     
  4615                           ;mcc_generated_files/interrupt_manager.c: 444:                     EUSART2_Write(0x10);
  4616  0005B6  0E10               	movlw	16
  4617  0005B8  ECA3  F00A         	call	i2_EUSART2_Write
  4618                           
  4619                           ;mcc_generated_files/interrupt_manager.c: 445:                 } else {
  4620  0005BC  EFEC  F004         	goto	i2l647
  4621  0005C0                     i2l3637:
  4622                           
  4623                           ;mcc_generated_files/interrupt_manager.c: 446:                     interruptAction = STE
      +                          PPER_INCH_BACKWARD_SIXTEENTH;
  4624  0005C0  0E0B               	movlw	11
  4625  0005C2  6E3C               	movwf	_interruptAction^0,c	;volatile
  4626  0005C4                     
  4627                           ;mcc_generated_files/interrupt_manager.c: 447:                     if(!stepperIsAsleep()
      +                          ){
  4628  0005C4  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  4629  0005C8  0900               	iorlw	0
  4630  0005CA  A4D8               	btfss	status,2,c
  4631  0005CC  EFEA  F002         	goto	i2u169_41
  4632  0005D0  EFEC  F002         	goto	i2u169_40
  4633  0005D4                     i2u169_41:
  4634  0005D4  EF9D  F004         	goto	i2l636
  4635  0005D8                     i2u169_40:
  4636  0005D8                     
  4637                           ;mcc_generated_files/interrupt_manager.c: 449:                         EUSART2_Write(0x0
      +                          E);
  4638  0005D8  0E0E               	movlw	14
  4639  0005DA  ECA3  F00A         	call	i2_EUSART2_Write
  4640  0005DE  EFEC  F004         	goto	i2l647
  4641  0005E2                     i2l3643:
  4642                           
  4643                           ;mcc_generated_files/interrupt_manager.c: 456:                 setPump1PWM(0);
  4644  0005E2  0E00               	movlw	0
  4645  0005E4  6E04               	movwf	(setPump1PWM@pwm+1)^0,c
  4646  0005E6  0E00               	movlw	0
  4647  0005E8  6E03               	movwf	setPump1PWM@pwm^0,c
  4648  0005EA  ECA7  F008         	call	_setPump1PWM	;wreg free
  4649                           
  4650                           ;mcc_generated_files/interrupt_manager.c: 457:                 break;
  4651  0005EE  EFEC  F004         	goto	i2l647
  4652  0005F2                     i2l3645:
  4653                           
  4654                           ;mcc_generated_files/interrupt_manager.c: 460:                 setPump1PWM(50);
  4655  0005F2  0E00               	movlw	0
  4656  0005F4  6E04               	movwf	(setPump1PWM@pwm+1)^0,c
  4657  0005F6  0E32               	movlw	50
  4658  0005F8  6E03               	movwf	setPump1PWM@pwm^0,c
  4659  0005FA  ECA7  F008         	call	_setPump1PWM	;wreg free
  4660                           
  4661                           ;mcc_generated_files/interrupt_manager.c: 461:                 break;
  4662  0005FE  EFEC  F004         	goto	i2l647
  4663  000602                     i2l3647:
  4664                           
  4665                           ;mcc_generated_files/interrupt_manager.c: 464:                 setPump1PWM(100);
  4666  000602  0E00               	movlw	0
  4667  000604  6E04               	movwf	(setPump1PWM@pwm+1)^0,c
  4668  000606  0E64               	movlw	100
  4669  000608  6E03               	movwf	setPump1PWM@pwm^0,c
  4670  00060A  ECA7  F008         	call	_setPump1PWM	;wreg free
  4671                           
  4672                           ;mcc_generated_files/interrupt_manager.c: 465:                 break;
  4673  00060E  EFEC  F004         	goto	i2l647
  4674  000612                     i2l3649:
  4675                           
  4676                           ;mcc_generated_files/interrupt_manager.c: 468:                 setPump1PWM(150);
  4677  000612  0E00               	movlw	0
  4678  000614  6E04               	movwf	(setPump1PWM@pwm+1)^0,c
  4679  000616  0E96               	movlw	150
  4680  000618  6E03               	movwf	setPump1PWM@pwm^0,c
  4681  00061A  ECA7  F008         	call	_setPump1PWM	;wreg free
  4682                           
  4683                           ;mcc_generated_files/interrupt_manager.c: 469:                 break;
  4684  00061E  EFEC  F004         	goto	i2l647
  4685  000622                     i2l3651:
  4686                           
  4687                           ;mcc_generated_files/interrupt_manager.c: 472:                 setPump1PWM(200);
  4688  000622  0E00               	movlw	0
  4689  000624  6E04               	movwf	(setPump1PWM@pwm+1)^0,c
  4690  000626  0EC8               	movlw	200
  4691  000628  6E03               	movwf	setPump1PWM@pwm^0,c
  4692  00062A  ECA7  F008         	call	_setPump1PWM	;wreg free
  4693                           
  4694                           ;mcc_generated_files/interrupt_manager.c: 473:                 break;
  4695  00062E  EFEC  F004         	goto	i2l647
  4696  000632                     i2l3653:
  4697                           
  4698                           ;mcc_generated_files/interrupt_manager.c: 476:                 setPump1PWM(250);
  4699  000632  0E00               	movlw	0
  4700  000634  6E04               	movwf	(setPump1PWM@pwm+1)^0,c
  4701  000636  0EFA               	movlw	250
  4702  000638  6E03               	movwf	setPump1PWM@pwm^0,c
  4703  00063A  ECA7  F008         	call	_setPump1PWM	;wreg free
  4704                           
  4705                           ;mcc_generated_files/interrupt_manager.c: 477:                 break;
  4706  00063E  EFEC  F004         	goto	i2l647
  4707  000642                     i2l3655:
  4708                           
  4709                           ;mcc_generated_files/interrupt_manager.c: 480:                 setPump1PWM(300);
  4710  000642  0E01               	movlw	1
  4711  000644  6E04               	movwf	(setPump1PWM@pwm+1)^0,c
  4712  000646  0E2C               	movlw	44
  4713  000648  6E03               	movwf	setPump1PWM@pwm^0,c
  4714  00064A  ECA7  F008         	call	_setPump1PWM	;wreg free
  4715                           
  4716                           ;mcc_generated_files/interrupt_manager.c: 481:                 break;
  4717  00064E  EFEC  F004         	goto	i2l647
  4718  000652                     i2l3657:
  4719                           
  4720                           ;mcc_generated_files/interrupt_manager.c: 484:                 setPump1PWM(350);
  4721  000652  0E01               	movlw	1
  4722  000654  6E04               	movwf	(setPump1PWM@pwm+1)^0,c
  4723  000656  0E5E               	movlw	94
  4724  000658  6E03               	movwf	setPump1PWM@pwm^0,c
  4725  00065A  ECA7  F008         	call	_setPump1PWM	;wreg free
  4726                           
  4727                           ;mcc_generated_files/interrupt_manager.c: 485:                 break;
  4728  00065E  EFEC  F004         	goto	i2l647
  4729  000662                     i2l3659:
  4730                           
  4731                           ;mcc_generated_files/interrupt_manager.c: 488:                 setPump1PWM(400);
  4732  000662  0E01               	movlw	1
  4733  000664  6E04               	movwf	(setPump1PWM@pwm+1)^0,c
  4734  000666  0E90               	movlw	144
  4735  000668  6E03               	movwf	setPump1PWM@pwm^0,c
  4736  00066A  ECA7  F008         	call	_setPump1PWM	;wreg free
  4737                           
  4738                           ;mcc_generated_files/interrupt_manager.c: 489:                 break;
  4739  00066E  EFEC  F004         	goto	i2l647
  4740  000672                     i2l3661:
  4741                           
  4742                           ;mcc_generated_files/interrupt_manager.c: 492:                 setPump1PWM(450);
  4743  000672  0E01               	movlw	1
  4744  000674  6E04               	movwf	(setPump1PWM@pwm+1)^0,c
  4745  000676  0EC2               	movlw	194
  4746  000678  6E03               	movwf	setPump1PWM@pwm^0,c
  4747  00067A  ECA7  F008         	call	_setPump1PWM	;wreg free
  4748                           
  4749                           ;mcc_generated_files/interrupt_manager.c: 493:                 break;
  4750  00067E  EFEC  F004         	goto	i2l647
  4751  000682                     i2l3663:
  4752                           
  4753                           ;mcc_generated_files/interrupt_manager.c: 496:                 setPump1PWM(499);
  4754  000682  0E01               	movlw	1
  4755  000684  6E04               	movwf	(setPump1PWM@pwm+1)^0,c
  4756  000686  0EF3               	movlw	243
  4757  000688  6E03               	movwf	setPump1PWM@pwm^0,c
  4758  00068A  ECA7  F008         	call	_setPump1PWM	;wreg free
  4759                           
  4760                           ;mcc_generated_files/interrupt_manager.c: 497:                 break;
  4761  00068E  EFEC  F004         	goto	i2l647
  4762  000692                     i2l3665:
  4763                           
  4764                           ;mcc_generated_files/interrupt_manager.c: 500:                 setPump2PWM(0);
  4765  000692  0E00               	movlw	0
  4766  000694  6E04               	movwf	(setPump2PWM@pwm+1)^0,c
  4767  000696  0E00               	movlw	0
  4768  000698  6E03               	movwf	setPump2PWM@pwm^0,c
  4769  00069A  EC84  F008         	call	_setPump2PWM	;wreg free
  4770                           
  4771                           ;mcc_generated_files/interrupt_manager.c: 501:                 break;
  4772  00069E  EFEC  F004         	goto	i2l647
  4773  0006A2                     i2l3667:
  4774                           
  4775                           ;mcc_generated_files/interrupt_manager.c: 504:                 setPump2PWM(50);
  4776  0006A2  0E00               	movlw	0
  4777  0006A4  6E04               	movwf	(setPump2PWM@pwm+1)^0,c
  4778  0006A6  0E32               	movlw	50
  4779  0006A8  6E03               	movwf	setPump2PWM@pwm^0,c
  4780  0006AA  EC84  F008         	call	_setPump2PWM	;wreg free
  4781                           
  4782                           ;mcc_generated_files/interrupt_manager.c: 505:                 break;
  4783  0006AE  EFEC  F004         	goto	i2l647
  4784  0006B2                     i2l3669:
  4785                           
  4786                           ;mcc_generated_files/interrupt_manager.c: 508:                 setPump2PWM(100);
  4787  0006B2  0E00               	movlw	0
  4788  0006B4  6E04               	movwf	(setPump2PWM@pwm+1)^0,c
  4789  0006B6  0E64               	movlw	100
  4790  0006B8  6E03               	movwf	setPump2PWM@pwm^0,c
  4791  0006BA  EC84  F008         	call	_setPump2PWM	;wreg free
  4792                           
  4793                           ;mcc_generated_files/interrupt_manager.c: 509:                 break;
  4794  0006BE  EFEC  F004         	goto	i2l647
  4795  0006C2                     i2l3671:
  4796                           
  4797                           ;mcc_generated_files/interrupt_manager.c: 512:                 setPump2PWM(150);
  4798  0006C2  0E00               	movlw	0
  4799  0006C4  6E04               	movwf	(setPump2PWM@pwm+1)^0,c
  4800  0006C6  0E96               	movlw	150
  4801  0006C8  6E03               	movwf	setPump2PWM@pwm^0,c
  4802  0006CA  EC84  F008         	call	_setPump2PWM	;wreg free
  4803                           
  4804                           ;mcc_generated_files/interrupt_manager.c: 513:                 break;
  4805  0006CE  EFEC  F004         	goto	i2l647
  4806  0006D2                     i2l3673:
  4807                           
  4808                           ;mcc_generated_files/interrupt_manager.c: 516:                 setPump2PWM(200);
  4809  0006D2  0E00               	movlw	0
  4810  0006D4  6E04               	movwf	(setPump2PWM@pwm+1)^0,c
  4811  0006D6  0EC8               	movlw	200
  4812  0006D8  6E03               	movwf	setPump2PWM@pwm^0,c
  4813  0006DA  EC84  F008         	call	_setPump2PWM	;wreg free
  4814                           
  4815                           ;mcc_generated_files/interrupt_manager.c: 517:                 break;
  4816  0006DE  EFEC  F004         	goto	i2l647
  4817  0006E2                     i2l3675:
  4818                           
  4819                           ;mcc_generated_files/interrupt_manager.c: 520:                 setPump2PWM(250);
  4820  0006E2  0E00               	movlw	0
  4821  0006E4  6E04               	movwf	(setPump2PWM@pwm+1)^0,c
  4822  0006E6  0EFA               	movlw	250
  4823  0006E8  6E03               	movwf	setPump2PWM@pwm^0,c
  4824  0006EA  EC84  F008         	call	_setPump2PWM	;wreg free
  4825                           
  4826                           ;mcc_generated_files/interrupt_manager.c: 521:                 break;
  4827  0006EE  EFEC  F004         	goto	i2l647
  4828  0006F2                     i2l3677:
  4829                           
  4830                           ;mcc_generated_files/interrupt_manager.c: 524:                 setPump2PWM(300);
  4831  0006F2  0E01               	movlw	1
  4832  0006F4  6E04               	movwf	(setPump2PWM@pwm+1)^0,c
  4833  0006F6  0E2C               	movlw	44
  4834  0006F8  6E03               	movwf	setPump2PWM@pwm^0,c
  4835  0006FA  EC84  F008         	call	_setPump2PWM	;wreg free
  4836                           
  4837                           ;mcc_generated_files/interrupt_manager.c: 525:                 break;
  4838  0006FE  EFEC  F004         	goto	i2l647
  4839  000702                     i2l3679:
  4840                           
  4841                           ;mcc_generated_files/interrupt_manager.c: 528:                 setPump2PWM(350);
  4842  000702  0E01               	movlw	1
  4843  000704  6E04               	movwf	(setPump2PWM@pwm+1)^0,c
  4844  000706  0E5E               	movlw	94
  4845  000708  6E03               	movwf	setPump2PWM@pwm^0,c
  4846  00070A  EC84  F008         	call	_setPump2PWM	;wreg free
  4847                           
  4848                           ;mcc_generated_files/interrupt_manager.c: 529:                 break;
  4849  00070E  EFEC  F004         	goto	i2l647
  4850  000712                     i2l3681:
  4851                           
  4852                           ;mcc_generated_files/interrupt_manager.c: 532:                 setPump2PWM(400);
  4853  000712  0E01               	movlw	1
  4854  000714  6E04               	movwf	(setPump2PWM@pwm+1)^0,c
  4855  000716  0E90               	movlw	144
  4856  000718  6E03               	movwf	setPump2PWM@pwm^0,c
  4857  00071A  EC84  F008         	call	_setPump2PWM	;wreg free
  4858                           
  4859                           ;mcc_generated_files/interrupt_manager.c: 533:                 break;
  4860  00071E  EFEC  F004         	goto	i2l647
  4861  000722                     i2l3683:
  4862                           
  4863                           ;mcc_generated_files/interrupt_manager.c: 536:                 setPump2PWM(450);
  4864  000722  0E01               	movlw	1
  4865  000724  6E04               	movwf	(setPump2PWM@pwm+1)^0,c
  4866  000726  0EC2               	movlw	194
  4867  000728  6E03               	movwf	setPump2PWM@pwm^0,c
  4868  00072A  EC84  F008         	call	_setPump2PWM	;wreg free
  4869                           
  4870                           ;mcc_generated_files/interrupt_manager.c: 537:                 break;
  4871  00072E  EFEC  F004         	goto	i2l647
  4872  000732                     i2l3685:
  4873                           
  4874                           ;mcc_generated_files/interrupt_manager.c: 540:                 setPump2PWM(499);
  4875  000732  0E01               	movlw	1
  4876  000734  6E04               	movwf	(setPump2PWM@pwm+1)^0,c
  4877  000736  0EF3               	movlw	243
  4878  000738  6E03               	movwf	setPump2PWM@pwm^0,c
  4879  00073A  EC84  F008         	call	_setPump2PWM	;wreg free
  4880                           
  4881                           ;mcc_generated_files/interrupt_manager.c: 541:                 break;
  4882  00073E  EFEC  F004         	goto	i2l647
  4883  000742                     i2l3689:
  4884  000742  503E               	movf	_UART_RX_in^0,w,c	;volatile
  4885  000744  6E09               	movwf	??_INTERRUPT_InterruptManager^0,c
  4886  000746  6A0A               	clrf	(??_INTERRUPT_InterruptManager+1)^0,c
  4887                           
  4888                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4889                           ; Switch size 1, requested type "simple"
  4890                           ; Number of cases is 1, Range of values is 0 to 0
  4891                           ; switch strategies available:
  4892                           ; Name         Instructions Cycles
  4893                           ; simple_byte            4     3 (average)
  4894                           ;	Chosen strategy is simple_byte
  4895  000748  500A               	movf	(??_INTERRUPT_InterruptManager+1)^0,w,c
  4896  00074A  0A00               	xorlw	0	; case 0
  4897  00074C  B4D8               	btfsc	status,2,c
  4898  00074E  EFAB  F003         	goto	i2l3973
  4899  000752  EF9D  F004         	goto	i2l636
  4900  000756                     i2l3973:
  4901                           
  4902                           ; Switch size 1, requested type "simple"
  4903                           ; Number of cases is 44, Range of values is 16 to 251
  4904                           ; switch strategies available:
  4905                           ; Name         Instructions Cycles
  4906                           ; simple_byte          133    67 (average)
  4907                           ;	Chosen strategy is simple_byte
  4908  000756  5009               	movf	??_INTERRUPT_InterruptManager^0,w,c
  4909  000758  0A10               	xorlw	16	; case 16
  4910  00075A  B4D8               	btfsc	status,2,c
  4911  00075C  EFF1  F002         	goto	i2l3643
  4912  000760  0A01               	xorlw	1	; case 17
  4913  000762  B4D8               	btfsc	status,2,c
  4914  000764  EFF9  F002         	goto	i2l3645
  4915  000768  0A03               	xorlw	3	; case 18
  4916  00076A  B4D8               	btfsc	status,2,c
  4917  00076C  EF01  F003         	goto	i2l3647
  4918  000770  0A01               	xorlw	1	; case 19
  4919  000772  B4D8               	btfsc	status,2,c
  4920  000774  EF09  F003         	goto	i2l3649
  4921  000778  0A07               	xorlw	7	; case 20
  4922  00077A  B4D8               	btfsc	status,2,c
  4923  00077C  EF11  F003         	goto	i2l3651
  4924  000780  0A01               	xorlw	1	; case 21
  4925  000782  B4D8               	btfsc	status,2,c
  4926  000784  EF19  F003         	goto	i2l3653
  4927  000788  0A03               	xorlw	3	; case 22
  4928  00078A  B4D8               	btfsc	status,2,c
  4929  00078C  EF21  F003         	goto	i2l3655
  4930  000790  0A01               	xorlw	1	; case 23
  4931  000792  B4D8               	btfsc	status,2,c
  4932  000794  EF29  F003         	goto	i2l3657
  4933  000798  0A0F               	xorlw	15	; case 24
  4934  00079A  B4D8               	btfsc	status,2,c
  4935  00079C  EF31  F003         	goto	i2l3659
  4936  0007A0  0A01               	xorlw	1	; case 25
  4937  0007A2  B4D8               	btfsc	status,2,c
  4938  0007A4  EF39  F003         	goto	i2l3661
  4939  0007A8  0A03               	xorlw	3	; case 26
  4940  0007AA  B4D8               	btfsc	status,2,c
  4941  0007AC  EF41  F003         	goto	i2l3663
  4942  0007B0  0A01               	xorlw	1	; case 27
  4943  0007B2  B4D8               	btfsc	status,2,c
  4944  0007B4  EF49  F003         	goto	i2l3665
  4945  0007B8  0A07               	xorlw	7	; case 28
  4946  0007BA  B4D8               	btfsc	status,2,c
  4947  0007BC  EF51  F003         	goto	i2l3667
  4948  0007C0  0A01               	xorlw	1	; case 29
  4949  0007C2  B4D8               	btfsc	status,2,c
  4950  0007C4  EF59  F003         	goto	i2l3669
  4951  0007C8  0A03               	xorlw	3	; case 30
  4952  0007CA  B4D8               	btfsc	status,2,c
  4953  0007CC  EF61  F003         	goto	i2l3671
  4954  0007D0  0A01               	xorlw	1	; case 31
  4955  0007D2  B4D8               	btfsc	status,2,c
  4956  0007D4  EF69  F003         	goto	i2l3673
  4957  0007D8  0A3F               	xorlw	63	; case 32
  4958  0007DA  B4D8               	btfsc	status,2,c
  4959  0007DC  EF71  F003         	goto	i2l3675
  4960  0007E0  0A01               	xorlw	1	; case 33
  4961  0007E2  B4D8               	btfsc	status,2,c
  4962  0007E4  EF79  F003         	goto	i2l3677
  4963  0007E8  0A03               	xorlw	3	; case 34
  4964  0007EA  B4D8               	btfsc	status,2,c
  4965  0007EC  EF81  F003         	goto	i2l3679
  4966  0007F0  0A01               	xorlw	1	; case 35
  4967  0007F2  B4D8               	btfsc	status,2,c
  4968  0007F4  EF89  F003         	goto	i2l3681
  4969  0007F8  0A07               	xorlw	7	; case 36
  4970  0007FA  B4D8               	btfsc	status,2,c
  4971  0007FC  EF91  F003         	goto	i2l3683
  4972  000800  0A01               	xorlw	1	; case 37
  4973  000802  B4D8               	btfsc	status,2,c
  4974  000804  EF99  F003         	goto	i2l3685
  4975  000808  0A5F               	xorlw	95	; case 122
  4976  00080A  B4D8               	btfsc	status,2,c
  4977  00080C  EF2B  F000         	goto	i2l3347
  4978  000810  0AAB               	xorlw	171	; case 209
  4979  000812  B4D8               	btfsc	status,2,c
  4980  000814  EF5D  F000         	goto	i2l3363
  4981  000818  0A03               	xorlw	3	; case 210
  4982  00081A  B4D8               	btfsc	status,2,c
  4983  00081C  EF7E  F000         	goto	i2l3377
  4984  000820  0A01               	xorlw	1	; case 211
  4985  000822  B4D8               	btfsc	status,2,c
  4986  000824  EF9F  F000         	goto	i2l3391
  4987  000828  0A07               	xorlw	7	; case 212
  4988  00082A  B4D8               	btfsc	status,2,c
  4989  00082C  EFC0  F000         	goto	i2l3405
  4990  000830  0A01               	xorlw	1	; case 213
  4991  000832  B4D8               	btfsc	status,2,c
  4992  000834  EF23  F001         	goto	i2l3447
  4993  000838  0A03               	xorlw	3	; case 214
  4994  00083A  B4D8               	btfsc	status,2,c
  4995  00083C  EF44  F001         	goto	i2l3461
  4996  000840  0A01               	xorlw	1	; case 215
  4997  000842  B4D8               	btfsc	status,2,c
  4998  000844  EF65  F001         	goto	i2l3475
  4999  000848  0A0F               	xorlw	15	; case 216
  5000  00084A  B4D8               	btfsc	status,2,c
  5001  00084C  EF86  F001         	goto	i2l3489
  5002  000850  0A02               	xorlw	2	; case 218
  5003  000852  B4D8               	btfsc	status,2,c
  5004  000854  EFA7  F001         	goto	i2l3503
  5005  000858  0A01               	xorlw	1	; case 219
  5006  00085A  B4D8               	btfsc	status,2,c
  5007  00085C  EFC8  F001         	goto	i2l3517
  5008  000860  0A07               	xorlw	7	; case 220
  5009  000862  B4D8               	btfsc	status,2,c
  5010  000864  EFE9  F001         	goto	i2l3531
  5011  000868  0A01               	xorlw	1	; case 221
  5012  00086A  B4D8               	btfsc	status,2,c
  5013  00086C  EF0A  F002         	goto	i2l3545
  5014  000870  0A03               	xorlw	3	; case 222
  5015  000872  B4D8               	btfsc	status,2,c
  5016  000874  EF6D  F002         	goto	i2l3587
  5017  000878  0A01               	xorlw	1	; case 223
  5018  00087A  B4D8               	btfsc	status,2,c
  5019  00087C  EF8E  F002         	goto	i2l3601
  5020  000880  0A3A               	xorlw	58	; case 229
  5021  000882  B4D8               	btfsc	status,2,c
  5022  000884  EF4A  F000         	goto	i2l3357
  5023  000888  0A03               	xorlw	3	; case 230
  5024  00088A  B4D8               	btfsc	status,2,c
  5025  00088C  EFE1  F000         	goto	i2l3419
  5026  000890  0A01               	xorlw	1	; case 231
  5027  000892  B4D8               	btfsc	status,2,c
  5028  000894  EF02  F001         	goto	i2l3433
  5029  000898  0A11               	xorlw	17	; case 246
  5030  00089A  B4D8               	btfsc	status,2,c
  5031  00089C  EF2B  F002         	goto	i2l3559
  5032  0008A0  0A01               	xorlw	1	; case 247
  5033  0008A2  B4D8               	btfsc	status,2,c
  5034  0008A4  EF4C  F002         	goto	i2l3573
  5035  0008A8  0A0D               	xorlw	13	; case 250
  5036  0008AA  B4D8               	btfsc	status,2,c
  5037  0008AC  EFAF  F002         	goto	i2l3615
  5038  0008B0  0A01               	xorlw	1	; case 251
  5039  0008B2  B4D8               	btfsc	status,2,c
  5040  0008B4  EFD0  F002         	goto	i2l3629
  5041  0008B8  EF9D  F004         	goto	i2l636
  5042  0008BC                     i2l521:
  5043  0008BC  010E               	movlb	14	; () banked
  5044  0008BE  A129               	btfss	41,0,b	;volatile
  5045  0008C0  EF64  F004         	goto	i2u170_41
  5046  0008C4  EF66  F004         	goto	i2u170_40
  5047  0008C8                     i2u170_41:
  5048  0008C8  EF7E  F004         	goto	i2l632
  5049  0008CC                     i2u170_40:
  5050  0008CC                     
  5051                           ; BSR set to: 14
  5052  0008CC  A133               	btfss	51,0,b	;volatile
  5053  0008CE  EF6B  F004         	goto	i2u171_41
  5054  0008D2  EF6D  F004         	goto	i2u171_40
  5055  0008D6                     i2u171_41:
  5056  0008D6  EF7E  F004         	goto	i2l632
  5057  0008DA                     i2u171_40:
  5058  0008DA                     
  5059                           ; BSR set to: 14
  5060                           ;mcc_generated_files/interrupt_manager.c: 548:         INT0_ISR();
  5061  0008DA  EC49  F00B         	call	_INT0_ISR	;wreg free
  5062  0008DE                     
  5063                           ;mcc_generated_files/interrupt_manager.c: 549:         if(!stepperIsAsleep()){
  5064  0008DE  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  5065  0008E2  0900               	iorlw	0
  5066  0008E4  A4D8               	btfss	status,2,c
  5067  0008E6  EF77  F004         	goto	i2u172_41
  5068  0008EA  EF79  F004         	goto	i2u172_40
  5069  0008EE                     i2u172_41:
  5070  0008EE  EFEC  F004         	goto	i2l647
  5071  0008F2                     i2u172_40:
  5072  0008F2                     
  5073                           ;mcc_generated_files/interrupt_manager.c: 551:             EUSART2_Write(0x0F);
  5074  0008F2  0E0F               	movlw	15
  5075  0008F4  ECA3  F00A         	call	i2_EUSART2_Write
  5076  0008F8  EFEC  F004         	goto	i2l647
  5077  0008FC                     i2l632:
  5078                           
  5079                           ; BSR set to: 14
  5080  0008FC  A329               	btfss	41,1,b	;volatile
  5081  0008FE  EF83  F004         	goto	i2u173_41
  5082  000902  EF85  F004         	goto	i2u173_40
  5083  000906                     i2u173_41:
  5084  000906  EF9F  F004         	goto	i2l635
  5085  00090A                     i2u173_40:
  5086  00090A                     
  5087                           ; BSR set to: 14
  5088  00090A  A333               	btfss	51,1,b	;volatile
  5089  00090C  EF8A  F004         	goto	i2u174_41
  5090  000910  EF8C  F004         	goto	i2u174_40
  5091  000914                     i2u174_41:
  5092  000914  EF9F  F004         	goto	i2l635
  5093  000918                     i2u174_40:
  5094  000918                     
  5095                           ; BSR set to: 14
  5096                           ;mcc_generated_files/interrupt_manager.c: 554:         INT1_ISR();
  5097  000918  EC44  F00B         	call	_INT1_ISR	;wreg free
  5098  00091C                     
  5099                           ;mcc_generated_files/interrupt_manager.c: 555:         if(!stepperIsAsleep()){
  5100  00091C  EC97  F00A         	call	_stepperIsAsleep	;wreg free
  5101  000920  0900               	iorlw	0
  5102  000922  A4D8               	btfss	status,2,c
  5103  000924  EF96  F004         	goto	i2u175_41
  5104  000928  EF98  F004         	goto	i2u175_40
  5105  00092C                     i2u175_41:
  5106  00092C  EFEC  F004         	goto	i2l647
  5107  000930                     i2u175_40:
  5108  000930                     
  5109                           ;mcc_generated_files/interrupt_manager.c: 557:             EUSART2_Write(0x10);
  5110  000930  0E10               	movlw	16
  5111  000932  ECA3  F00A         	call	i2_EUSART2_Write
  5112  000936  EFEC  F004         	goto	i2l647
  5113  00093A                     i2l636:
  5114                           
  5115                           ;mcc_generated_files/interrupt_manager.c: 559:     } else if (PIE0bits.INT2IE == 1 && PI
      +                          R0bits.INT2IF == 1) {
  5116  00093A  EFEC  F004         	goto	i2l647
  5117  00093E                     i2l635:
  5118                           
  5119                           ; BSR set to: 14
  5120  00093E  A529               	btfss	41,2,b	;volatile
  5121  000940  EFA4  F004         	goto	i2u176_41
  5122  000944  EFA6  F004         	goto	i2u176_40
  5123  000948                     i2u176_41:
  5124  000948  EFB1  F004         	goto	i2l638
  5125  00094C                     i2u176_40:
  5126  00094C                     
  5127                           ; BSR set to: 14
  5128  00094C  A533               	btfss	51,2,b	;volatile
  5129  00094E  EFAB  F004         	goto	i2u177_41
  5130  000952  EFAD  F004         	goto	i2u177_40
  5131  000956                     i2u177_41:
  5132  000956  EFB1  F004         	goto	i2l638
  5133  00095A                     i2u177_40:
  5134  00095A                     
  5135                           ; BSR set to: 14
  5136                           ;mcc_generated_files/interrupt_manager.c: 560:         INT2_ISR();
  5137  00095A  EC3F  F00B         	call	_INT2_ISR	;wreg free
  5138                           
  5139                           ;mcc_generated_files/interrupt_manager.c: 561:     } else if(PIE0bits.INT3IE == 1 && PIR
      +                          0bits.INT3IF == 1) {
  5140  00095E  EFEC  F004         	goto	i2l647
  5141  000962                     i2l638:
  5142                           
  5143                           ; BSR set to: 14
  5144  000962  A729               	btfss	41,3,b	;volatile
  5145  000964  EFB6  F004         	goto	i2u178_41
  5146  000968  EFB8  F004         	goto	i2u178_40
  5147  00096C                     i2u178_41:
  5148  00096C  EFC3  F004         	goto	i2l640
  5149  000970                     i2u178_40:
  5150  000970                     
  5151                           ; BSR set to: 14
  5152  000970  A733               	btfss	51,3,b	;volatile
  5153  000972  EFBD  F004         	goto	i2u179_41
  5154  000976  EFBF  F004         	goto	i2u179_40
  5155  00097A                     i2u179_41:
  5156  00097A  EFC3  F004         	goto	i2l640
  5157  00097E                     i2u179_40:
  5158  00097E                     
  5159                           ; BSR set to: 14
  5160                           ;mcc_generated_files/interrupt_manager.c: 562:         INT3_ISR();
  5161  00097E  EC3A  F00B         	call	_INT3_ISR	;wreg free
  5162                           
  5163                           ;mcc_generated_files/interrupt_manager.c: 563:     }else if(INTCONbits.PEIE == 1){
  5164  000982  EFEC  F004         	goto	i2l647
  5165  000986                     i2l640:
  5166                           
  5167                           ; BSR set to: 14
  5168  000986  ACF2               	btfss	242,6,c	;volatile
  5169  000988  EFC8  F004         	goto	i2u180_41
  5170  00098C  EFCA  F004         	goto	i2u180_40
  5171  000990                     i2u180_41:
  5172  000990  EF9D  F004         	goto	i2l636
  5173  000994                     i2u180_40:
  5174  000994                     
  5175                           ; BSR set to: 14
  5176                           ;mcc_generated_files/interrupt_manager.c: 564:         if(PIE1bits.ADIE == 1 && PIR1bits
      +                          .ADIF == 1)
  5177  000994  A12A               	btfss	42,0,b	;volatile
  5178  000996  EFCF  F004         	goto	i2u181_41
  5179  00099A  EFD1  F004         	goto	i2u181_40
  5180  00099E                     i2u181_41:
  5181  00099E  EFDC  F004         	goto	i2l643
  5182  0009A2                     i2u181_40:
  5183  0009A2                     
  5184                           ; BSR set to: 14
  5185  0009A2  A134               	btfss	52,0,b	;volatile
  5186  0009A4  EFD6  F004         	goto	i2u182_41
  5187  0009A8  EFD8  F004         	goto	i2u182_40
  5188  0009AC                     i2u182_41:
  5189  0009AC  EFDC  F004         	goto	i2l643
  5190  0009B0                     i2u182_40:
  5191  0009B0                     
  5192                           ; BSR set to: 14
  5193                           ;mcc_generated_files/interrupt_manager.c: 565:         {;mcc_generated_files/interrupt_m
      +                          anager.c: 567:             ADCC_ISR();
  5194  0009B0  EC04  F009         	call	_ADCC_ISR	;wreg free
  5195                           
  5196                           ;mcc_generated_files/interrupt_manager.c: 568:         }
  5197  0009B4  EFEC  F004         	goto	i2l647
  5198  0009B8                     i2l643:
  5199                           
  5200                           ; BSR set to: 14
  5201  0009B8  A72E               	btfss	46,3,b	;volatile
  5202  0009BA  EFE1  F004         	goto	i2u183_41
  5203  0009BE  EFE3  F004         	goto	i2u183_40
  5204  0009C2                     i2u183_41:
  5205  0009C2  EF9D  F004         	goto	i2l636
  5206  0009C6                     i2u183_40:
  5207  0009C6                     
  5208                           ; BSR set to: 14
  5209  0009C6  A738               	btfss	56,3,b	;volatile
  5210  0009C8  EFE8  F004         	goto	i2u184_41
  5211  0009CC  EFEA  F004         	goto	i2u184_40
  5212  0009D0                     i2u184_41:
  5213  0009D0  EF9D  F004         	goto	i2l636
  5214  0009D4                     i2u184_40:
  5215  0009D4                     
  5216                           ; BSR set to: 14
  5217                           ;mcc_generated_files/interrupt_manager.c: 570:         {;mcc_generated_files/interrupt_m
      +                          anager.c: 572:             TMR4_ISR();
  5218  0009D4  ECDD  F009         	call	_TMR4_ISR	;wreg free
  5219  0009D8                     i2l647:
  5220  0009D8  C00C  FFFB         	movff	??_INTERRUPT_InterruptManager+3,pclatu
  5221  0009DC  C00B  FFFA         	movff	??_INTERRUPT_InterruptManager+2,pclath
  5222  0009E0  923F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5223  0009E2  0011               	retfie		f
  5224  0009E4                     __end_of_INTERRUPT_InterruptManager:
  5225                           	callstack 0
  5226                           
  5227 ;; *************** function _stepperIsAsleep *****************
  5228 ;; Defined at:
  5229 ;;		line 183 in file "step/step.c"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;		None
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;		None
  5234 ;; Return value:  Size  Location     Type
  5235 ;;                  1    wreg      _Bool 
  5236 ;; Registers used:
  5237 ;;		wreg
  5238 ;; Tracked objects:
  5239 ;;		On entry : 0/0
  5240 ;;		On exit  : 0/0
  5241 ;;		Unchanged: 0/0
  5242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5247 ;;Total ram usage:        0 bytes
  5248 ;; Hardware stack levels used:    1
  5249 ;; This function calls:
  5250 ;;		Nothing
  5251 ;; This function is called by:
  5252 ;;		_INTERRUPT_InterruptManager
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           
  5256                           	psect	text37
  5257  00152E                     __ptext37:
  5258                           	callstack 0
  5259  00152E                     _stepperIsAsleep:
  5260                           	callstack 26
  5261  00152E                     
  5262                           ;step/step.c: 184:     if(PORTAbits.RA4){
  5263  00152E  A889               	btfss	137,4,c	;volatile
  5264  001530  EF9C  F00A         	goto	i2u33_41
  5265  001534  EF9E  F00A         	goto	i2u33_40
  5266  001538                     i2u33_41:
  5267  001538  EFA1  F00A         	goto	i2l2177
  5268  00153C                     i2u33_40:
  5269  00153C                     
  5270                           ;step/step.c: 186:         return 0;
  5271  00153C  0E00               	movlw	0
  5272  00153E  EFA2  F00A         	goto	i2l1054
  5273  001542                     i2l2177:
  5274                           
  5275                           ;step/step.c: 189:         return 1;
  5276  001542  0E01               	movlw	1
  5277  001544                     i2l1054:
  5278  001544  0012               	return		;funcret
  5279  001546                     __end_of_stepperIsAsleep:
  5280                           	callstack 0
  5281                           
  5282 ;; *************** function _setPump2PWM *****************
  5283 ;; Defined at:
  5284 ;;		line 43 in file "pumps/pumps.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;  pwm             2    2[COMRAM] unsigned short 
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;		None
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  1    wreg      void 
  5291 ;; Registers used:
  5292 ;;		wreg, status,2, status,0, cstack
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5298 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5301 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5302 ;;Total ram usage:        2 bytes
  5303 ;; Hardware stack levels used:    1
  5304 ;; Hardware stack levels required when called:    1
  5305 ;; This function calls:
  5306 ;;		_PWM2_LoadDutyValue
  5307 ;; This function is called by:
  5308 ;;		_INTERRUPT_InterruptManager
  5309 ;; This function uses a non-reentrant model
  5310 ;;
  5311                           
  5312                           	psect	text38
  5313  001108                     __ptext38:
  5314                           	callstack 0
  5315  001108                     _setPump2PWM:
  5316                           	callstack 25
  5317  001108                     
  5318                           ;pumps/pumps.c: 44:     PWM2_LoadDutyValue(pwm);
  5319  001108  C003  F001         	movff	setPump2PWM@pwm,PWM2_LoadDutyValue@dutyValue
  5320  00110C  C004  F002         	movff	setPump2PWM@pwm+1,PWM2_LoadDutyValue@dutyValue+1
  5321  001110  ECAF  F009         	call	_PWM2_LoadDutyValue	;wreg free
  5322  001114                     
  5323                           ;pumps/pumps.c: 45:     Pumps.Pump2_PWM = pwm;
  5324  001114  C003  F038         	movff	setPump2PWM@pwm,_Pumps+2	;volatile
  5325  001118  C004  F039         	movff	setPump2PWM@pwm+1,_Pumps+3	;volatile
  5326  00111C                     
  5327                           ;pumps/pumps.c: 46:     if(Pumps.Pump2_PWM == 0){
  5328  00111C  5038               	movf	(_Pumps+2)^0,w,c	;volatile
  5329  00111E  1039               	iorwf	(_Pumps+3)^0,w,c	;volatile
  5330  001120  A4D8               	btfss	status,2,c
  5331  001122  EF95  F008         	goto	i2u120_41
  5332  001126  EF97  F008         	goto	i2u120_40
  5333  00112A                     i2u120_41:
  5334  00112A  EFA4  F008         	goto	i2l55
  5335  00112E                     i2u120_40:
  5336  00112E  967F               	bcf	127,3,c	;volatile
  5337  001130                     
  5338                           ;pumps/pumps.c: 48:         if(Pumps.Pump1_PWM == 0){
  5339  001130  5036               	movf	_Pumps^0,w,c	;volatile
  5340  001132  1037               	iorwf	(_Pumps+1)^0,w,c	;volatile
  5341  001134  A4D8               	btfss	status,2,c
  5342  001136  EF9F  F008         	goto	i2u121_41
  5343  00113A  EFA1  F008         	goto	i2u121_40
  5344  00113E                     i2u121_41:
  5345  00113E  EFA6  F008         	goto	i2l59
  5346  001142                     i2u121_40:
  5347  001142  987F               	bcf	127,4,c	;volatile
  5348  001144  EFA6  F008         	goto	i2l59
  5349  001148                     i2l55:
  5350  001148  867F               	bsf	127,3,c	;volatile
  5351  00114A  887F               	bsf	127,4,c	;volatile
  5352  00114C                     i2l59:
  5353  00114C  0012               	return		;funcret
  5354  00114E                     __end_of_setPump2PWM:
  5355                           	callstack 0
  5356                           
  5357 ;; *************** function _PWM2_LoadDutyValue *****************
  5358 ;; Defined at:
  5359 ;;		line 90 in file "mcc_generated_files/pwm2.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;  dutyValue       2    0[COMRAM] unsigned short 
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;		None
  5364 ;; Return value:  Size  Location     Type
  5365 ;;                  1    wreg      void 
  5366 ;; Registers used:
  5367 ;;		wreg, status,2, status,0
  5368 ;; Tracked objects:
  5369 ;;		On entry : 0/0
  5370 ;;		On exit  : 0/0
  5371 ;;		Unchanged: 0/0
  5372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5373 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5376 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5377 ;;Total ram usage:        2 bytes
  5378 ;; Hardware stack levels used:    1
  5379 ;; This function calls:
  5380 ;;		Nothing
  5381 ;; This function is called by:
  5382 ;;		_setPump2PWM
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           	psect	text39
  5387  00135E                     __ptext39:
  5388                           	callstack 0
  5389  00135E                     _PWM2_LoadDutyValue:
  5390                           	callstack 25
  5391  00135E                     
  5392                           ;mcc_generated_files/pwm2.c: 90: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 91: {;mcc_generated_files/pwm2.c: 92:     dutyValue &= 0x03FF;
  5393  00135E  0EFF               	movlw	255
  5394  001360  1601               	andwf	PWM2_LoadDutyValue@dutyValue^0,f,c
  5395  001362  0E03               	movlw	3
  5396  001364  1602               	andwf	(PWM2_LoadDutyValue@dutyValue+1)^0,f,c
  5397  001366                     
  5398                           ;mcc_generated_files/pwm2.c: 95:     if(CCP2CONbits.FMT)
  5399  001366  A8A7               	btfss	167,4,c	;volatile
  5400  001368  EFB8  F009         	goto	i2u109_41
  5401  00136C  EFBA  F009         	goto	i2u109_40
  5402  001370                     i2u109_41:
  5403  001370  EFC1  F009         	goto	i2l3115
  5404  001374                     i2u109_40:
  5405  001374                     
  5406                           ;mcc_generated_files/pwm2.c: 96:     {;mcc_generated_files/pwm2.c: 97:         dutyValue
      +                           <<= 6;
  5407  001374  0E06               	movlw	6
  5408  001376                     i2u110_45:
  5409  001376  90D8               	bcf	status,0,c
  5410  001378  3601               	rlcf	PWM2_LoadDutyValue@dutyValue^0,f,c
  5411  00137A  3602               	rlcf	(PWM2_LoadDutyValue@dutyValue+1)^0,f,c
  5412  00137C  2EE8               	decfsz	wreg,f,c
  5413  00137E  EFBB  F009         	goto	i2u110_45
  5414  001382                     i2l3115:
  5415                           
  5416                           ;mcc_generated_files/pwm2.c: 98:         CCPR2H = dutyValue >> 8;
  5417  001382  5002               	movf	(PWM2_LoadDutyValue@dutyValue+1)^0,w,c
  5418  001384  6EA6               	movwf	166,c	;volatile
  5419  001386                     
  5420                           ;mcc_generated_files/pwm2.c: 99:         CCPR2L = dutyValue;
  5421  001386  C001  FFA5         	movff	PWM2_LoadDutyValue@dutyValue,4005	;volatile
  5422  00138A  0012               	return		;funcret
  5423  00138C                     __end_of_PWM2_LoadDutyValue:
  5424                           	callstack 0
  5425                           
  5426 ;; *************** function _setPump1PWM *****************
  5427 ;; Defined at:
  5428 ;;		line 27 in file "pumps/pumps.c"
  5429 ;; Parameters:    Size  Location     Type
  5430 ;;  pwm             2    2[COMRAM] unsigned short 
  5431 ;; Auto vars:     Size  Location     Type
  5432 ;;		None
  5433 ;; Return value:  Size  Location     Type
  5434 ;;                  1    wreg      void 
  5435 ;; Registers used:
  5436 ;;		wreg, status,2, status,0, cstack
  5437 ;; Tracked objects:
  5438 ;;		On entry : 0/0
  5439 ;;		On exit  : 0/0
  5440 ;;		Unchanged: 0/0
  5441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5442 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5445 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5446 ;;Total ram usage:        2 bytes
  5447 ;; Hardware stack levels used:    1
  5448 ;; Hardware stack levels required when called:    1
  5449 ;; This function calls:
  5450 ;;		_PWM1_LoadDutyValue
  5451 ;; This function is called by:
  5452 ;;		_INTERRUPT_InterruptManager
  5453 ;; This function uses a non-reentrant model
  5454 ;;
  5455                           
  5456                           	psect	text40
  5457  00114E                     __ptext40:
  5458                           	callstack 0
  5459  00114E                     _setPump1PWM:
  5460                           	callstack 25
  5461  00114E                     
  5462                           ;pumps/pumps.c: 28:     PWM1_LoadDutyValue(pwm);
  5463  00114E  C003  F001         	movff	setPump1PWM@pwm,PWM1_LoadDutyValue@dutyValue
  5464  001152  C004  F002         	movff	setPump1PWM@pwm+1,PWM1_LoadDutyValue@dutyValue+1
  5465  001156  ECC6  F009         	call	_PWM1_LoadDutyValue	;wreg free
  5466  00115A                     
  5467                           ;pumps/pumps.c: 29:     Pumps.Pump1_PWM = pwm;
  5468  00115A  C003  F036         	movff	setPump1PWM@pwm,_Pumps	;volatile
  5469  00115E  C004  F037         	movff	setPump1PWM@pwm+1,_Pumps+1	;volatile
  5470  001162                     
  5471                           ;pumps/pumps.c: 30:     if(Pumps.Pump1_PWM == 0){
  5472  001162  5036               	movf	_Pumps^0,w,c	;volatile
  5473  001164  1037               	iorwf	(_Pumps+1)^0,w,c	;volatile
  5474  001166  A4D8               	btfss	status,2,c
  5475  001168  EFB8  F008         	goto	i2u118_41
  5476  00116C  EFBA  F008         	goto	i2u118_40
  5477  001170                     i2u118_41:
  5478  001170  EFC7  F008         	goto	i2l41
  5479  001174                     i2u118_40:
  5480  001174  947E               	bcf	126,2,c	;volatile
  5481  001176                     
  5482                           ;pumps/pumps.c: 32:         if(Pumps.Pump2_PWM == 0){
  5483  001176  5038               	movf	(_Pumps+2)^0,w,c	;volatile
  5484  001178  1039               	iorwf	(_Pumps+3)^0,w,c	;volatile
  5485  00117A  A4D8               	btfss	status,2,c
  5486  00117C  EFC2  F008         	goto	i2u119_41
  5487  001180  EFC4  F008         	goto	i2u119_40
  5488  001184                     i2u119_41:
  5489  001184  EFC9  F008         	goto	i2l45
  5490  001188                     i2u119_40:
  5491  001188  987F               	bcf	127,4,c	;volatile
  5492  00118A  EFC9  F008         	goto	i2l45
  5493  00118E                     i2l41:
  5494  00118E  847E               	bsf	126,2,c	;volatile
  5495  001190  887F               	bsf	127,4,c	;volatile
  5496  001192                     i2l45:
  5497  001192  0012               	return		;funcret
  5498  001194                     __end_of_setPump1PWM:
  5499                           	callstack 0
  5500                           
  5501 ;; *************** function _PWM1_LoadDutyValue *****************
  5502 ;; Defined at:
  5503 ;;		line 90 in file "mcc_generated_files/pwm1.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;  dutyValue       2    0[COMRAM] unsigned short 
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;		None
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  1    wreg      void 
  5510 ;; Registers used:
  5511 ;;		wreg, status,2, status,0
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5520 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5521 ;;Total ram usage:        2 bytes
  5522 ;; Hardware stack levels used:    1
  5523 ;; This function calls:
  5524 ;;		Nothing
  5525 ;; This function is called by:
  5526 ;;		_setPump1PWM
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           
  5530                           	psect	text41
  5531  00138C                     __ptext41:
  5532                           	callstack 0
  5533  00138C                     _PWM1_LoadDutyValue:
  5534                           	callstack 25
  5535  00138C                     
  5536                           ;mcc_generated_files/pwm1.c: 90: void PWM1_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm1.c: 91: {;mcc_generated_files/pwm1.c: 92:     dutyValue &= 0x03FF;
  5537  00138C  0EFF               	movlw	255
  5538  00138E  1601               	andwf	PWM1_LoadDutyValue@dutyValue^0,f,c
  5539  001390  0E03               	movlw	3
  5540  001392  1602               	andwf	(PWM1_LoadDutyValue@dutyValue+1)^0,f,c
  5541  001394                     
  5542                           ;mcc_generated_files/pwm1.c: 95:     if(CCP1CONbits.FMT)
  5543  001394  A8AB               	btfss	171,4,c	;volatile
  5544  001396  EFCF  F009         	goto	i2u107_41
  5545  00139A  EFD1  F009         	goto	i2u107_40
  5546  00139E                     i2u107_41:
  5547  00139E  EFD8  F009         	goto	i2l3101
  5548  0013A2                     i2u107_40:
  5549  0013A2                     
  5550                           ;mcc_generated_files/pwm1.c: 96:     {;mcc_generated_files/pwm1.c: 97:         dutyValue
      +                           <<= 6;
  5551  0013A2  0E06               	movlw	6
  5552  0013A4                     i2u108_45:
  5553  0013A4  90D8               	bcf	status,0,c
  5554  0013A6  3601               	rlcf	PWM1_LoadDutyValue@dutyValue^0,f,c
  5555  0013A8  3602               	rlcf	(PWM1_LoadDutyValue@dutyValue+1)^0,f,c
  5556  0013AA  2EE8               	decfsz	wreg,f,c
  5557  0013AC  EFD2  F009         	goto	i2u108_45
  5558  0013B0                     i2l3101:
  5559                           
  5560                           ;mcc_generated_files/pwm1.c: 98:         CCPR1H = dutyValue >> 8;
  5561  0013B0  5002               	movf	(PWM1_LoadDutyValue@dutyValue+1)^0,w,c
  5562  0013B2  6EAA               	movwf	170,c	;volatile
  5563  0013B4                     
  5564                           ;mcc_generated_files/pwm1.c: 99:         CCPR1L = dutyValue;
  5565  0013B4  C001  FFA9         	movff	PWM1_LoadDutyValue@dutyValue,4009	;volatile
  5566  0013B8  0012               	return		;funcret
  5567  0013BA                     __end_of_PWM1_LoadDutyValue:
  5568                           	callstack 0
  5569                           
  5570 ;; *************** function _TMR4_ISR *****************
  5571 ;; Defined at:
  5572 ;;		line 166 in file "mcc_generated_files/tmr4.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;		None
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;		None
  5577 ;; Return value:  Size  Location     Type
  5578 ;;                  1    wreg      void 
  5579 ;; Registers used:
  5580 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5581 ;; Tracked objects:
  5582 ;;		On entry : 0/0
  5583 ;;		On exit  : 0/0
  5584 ;;		Unchanged: 0/0
  5585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5590 ;;Total ram usage:        0 bytes
  5591 ;; Hardware stack levels used:    1
  5592 ;; Hardware stack levels required when called:    3
  5593 ;; This function calls:
  5594 ;;		_TMR4_CallBack
  5595 ;; This function is called by:
  5596 ;;		_INTERRUPT_InterruptManager
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text42
  5601  0013BA                     __ptext42:
  5602                           	callstack 0
  5603  0013BA                     _TMR4_ISR:
  5604                           	callstack 23
  5605  0013BA                     
  5606                           ;mcc_generated_files/tmr4.c: 168:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 171:     PIR5bits.TMR4IF = 0;
  5607  0013BA  010E               	movlb	14	; () banked
  5608  0013BC  9738               	bcf	56,3,b	;volatile
  5609  0013BE                     
  5610                           ; BSR set to: 14
  5611                           ;mcc_generated_files/tmr4.c: 174:     if (++CountCallBack >= 200)
  5612  0013BE  4A3A               	infsnz	TMR4_ISR@CountCallBack^0,f,c	;volatile
  5613  0013C0  2A3B               	incf	(TMR4_ISR@CountCallBack+1)^0,f,c	;volatile
  5614  0013C2  503B               	movf	(TMR4_ISR@CountCallBack+1)^0,w,c	;volatile
  5615  0013C4  E109               	bnz	i2u32_40
  5616  0013C6  0EC8               	movlw	200
  5617  0013C8  5C3A               	subwf	TMR4_ISR@CountCallBack^0,w,c	;volatile
  5618  0013CA  A0D8               	btfss	status,0,c
  5619  0013CC  EFEA  F009         	goto	i2u32_41
  5620  0013D0  EFEC  F009         	goto	i2u32_40
  5621  0013D4                     i2u32_41:
  5622  0013D4  EFF2  F009         	goto	i2l363
  5623  0013D8                     i2u32_40:
  5624  0013D8                     
  5625                           ; BSR set to: 14
  5626                           ;mcc_generated_files/tmr4.c: 175:     {;mcc_generated_files/tmr4.c: 177:     TMR4_CallBa
      +                          ck();
  5627  0013D8  EC4F  F009         	call	_TMR4_CallBack	;wreg free
  5628  0013DC                     
  5629                           ;mcc_generated_files/tmr4.c: 180:         CountCallBack = 0;
  5630  0013DC  0E00               	movlw	0
  5631  0013DE  6E3B               	movwf	(TMR4_ISR@CountCallBack+1)^0,c	;volatile
  5632  0013E0  0E00               	movlw	0
  5633  0013E2  6E3A               	movwf	TMR4_ISR@CountCallBack^0,c	;volatile
  5634  0013E4                     i2l363:
  5635  0013E4  0012               	return		;funcret
  5636  0013E6                     __end_of_TMR4_ISR:
  5637                           	callstack 0
  5638                           
  5639 ;; *************** function _TMR4_CallBack *****************
  5640 ;; Defined at:
  5641 ;;		line 184 in file "mcc_generated_files/tmr4.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;		None
  5644 ;; Auto vars:     Size  Location     Type
  5645 ;;		None
  5646 ;; Return value:  Size  Location     Type
  5647 ;;                  1    wreg      void 
  5648 ;; Registers used:
  5649 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5650 ;; Tracked objects:
  5651 ;;		On entry : 0/0
  5652 ;;		On exit  : 0/0
  5653 ;;		Unchanged: 0/0
  5654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5659 ;;Total ram usage:        0 bytes
  5660 ;; Hardware stack levels used:    1
  5661 ;; Hardware stack levels required when called:    2
  5662 ;; This function calls:
  5663 ;;		Absolute function
  5664 ;;		_TMR4_DefaultInterruptHandler
  5665 ;; This function is called by:
  5666 ;;		_TMR4_ISR
  5667 ;; This function uses a non-reentrant model
  5668 ;;
  5669                           
  5670                           	psect	text43
  5671  00129E                     __ptext43:
  5672                           	callstack 0
  5673  00129E                     _TMR4_CallBack:
  5674                           	callstack 23
  5675  00129E                     
  5676                           ;mcc_generated_files/tmr4.c: 188:     if(TMR4_InterruptHandler)
  5677  00129E  5033               	movf	_TMR4_InterruptHandler^0,w,c
  5678  0012A0  1034               	iorwf	(_TMR4_InterruptHandler+1)^0,w,c
  5679  0012A2  1035               	iorwf	(_TMR4_InterruptHandler+2)^0,w,c
  5680  0012A4  B4D8               	btfsc	status,2,c
  5681  0012A6  EF57  F009         	goto	i2u10_41
  5682  0012AA  EF59  F009         	goto	i2u10_40
  5683  0012AE                     i2u10_41:
  5684  0012AE  EF66  F009         	goto	i2l367
  5685  0012B2                     i2u10_40:
  5686  0012B2                     
  5687                           ;mcc_generated_files/tmr4.c: 189:     {;mcc_generated_files/tmr4.c: 190:         TMR4_In
      +                          terruptHandler();
  5688  0012B2  D802               	call	i2u11_48
  5689  0012B4  EF66  F009         	goto	i2u11_49
  5690  0012B8                     i2u11_48:
  5691  0012B8  0005               	push	
  5692  0012BA  6EFA               	movwf	pclath,c
  5693  0012BC  5033               	movf	_TMR4_InterruptHandler^0,w,c
  5694  0012BE  6EFD               	movwf	tosl,c
  5695  0012C0  5034               	movf	(_TMR4_InterruptHandler+1)^0,w,c
  5696  0012C2  6EFE               	movwf	tosh,c
  5697  0012C4  5035               	movf	(_TMR4_InterruptHandler+2)^0,w,c
  5698  0012C6  6EFF               	movwf	tosu,c
  5699  0012C8  50FA               	movf	pclath,w,c
  5700  0012CA  0012               	return		;indir
  5701  0012CC                     i2u11_49:
  5702  0012CC                     i2l367:
  5703  0012CC  0012               	return		;funcret
  5704  0012CE                     __end_of_TMR4_CallBack:
  5705                           	callstack 0
  5706                           
  5707 ;; *************** function _TMR4_DefaultInterruptHandler *****************
  5708 ;; Defined at:
  5709 ;;		line 198 in file "mcc_generated_files/tmr4.c"
  5710 ;; Parameters:    Size  Location     Type
  5711 ;;		None
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;		None
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  1    wreg      void 
  5716 ;; Registers used:
  5717 ;;		wreg, cstack
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5727 ;;Total ram usage:        0 bytes
  5728 ;; Hardware stack levels used:    1
  5729 ;; Hardware stack levels required when called:    1
  5730 ;; This function calls:
  5731 ;;		_ADCC_StartConversion
  5732 ;;		i2_TMR4_Start
  5733 ;; This function is called by:
  5734 ;;		_TMR4_Initialize
  5735 ;;		_TMR4_CallBack
  5736 ;; This function uses a non-reentrant model
  5737 ;;
  5738                           
  5739                           	psect	text44
  5740  001652                     __ptext44:
  5741                           	callstack 0
  5742  001652                     _TMR4_DefaultInterruptHandler:
  5743                           	callstack 23
  5744  001652                     
  5745                           ;mcc_generated_files/tmr4.c: 201:     ADCC_StartConversion(baby_out_fsr_channel);
  5746  001652  0E19               	movlw	25
  5747  001654  EC2F  F00B         	call	_ADCC_StartConversion
  5748  001658                     
  5749                           ;mcc_generated_files/tmr4.c: 202:     TMR4_Start();
  5750  001658  EC62  F00B         	call	i2_TMR4_Start	;wreg free
  5751  00165C  0012               	return		;funcret
  5752  00165E                     __end_of_TMR4_DefaultInterruptHandler:
  5753                           	callstack 0
  5754                           
  5755 ;; *************** function i2_TMR4_Start *****************
  5756 ;; Defined at:
  5757 ;;		line 109 in file "mcc_generated_files/tmr4.c"
  5758 ;; Parameters:    Size  Location     Type
  5759 ;;		None
  5760 ;; Auto vars:     Size  Location     Type
  5761 ;;		None
  5762 ;; Return value:  Size  Location     Type
  5763 ;;                  1    wreg      void 
  5764 ;; Registers used:
  5765 ;;		None
  5766 ;; Tracked objects:
  5767 ;;		On entry : 0/0
  5768 ;;		On exit  : 0/0
  5769 ;;		Unchanged: 0/0
  5770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5775 ;;Total ram usage:        0 bytes
  5776 ;; Hardware stack levels used:    1
  5777 ;; This function calls:
  5778 ;;		Nothing
  5779 ;; This function is called by:
  5780 ;;		_TMR4_DefaultInterruptHandler
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           	psect	text45
  5785  0016C4                     __ptext45:
  5786                           	callstack 0
  5787  0016C4                     i2_TMR4_Start:
  5788                           	callstack 23
  5789  0016C4                     
  5790                           ;mcc_generated_files/tmr4.c: 112:     T4CONbits.TMR4ON = 1;
  5791  0016C4  8EB7               	bsf	183,7,c	;volatile
  5792  0016C6  0012               	return		;funcret
  5793  0016C8                     __end_ofi2_TMR4_Start:
  5794                           	callstack 0
  5795                           
  5796 ;; *************** function _ADCC_StartConversion *****************
  5797 ;; Defined at:
  5798 ;;		line 111 in file "mcc_generated_files/adcc.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;  channel         1    wreg     enum E14223
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;  channel         1    0[COMRAM] enum E14223
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  1    wreg      void 
  5805 ;; Registers used:
  5806 ;;		wreg
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5815 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5816 ;;Total ram usage:        1 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; This function calls:
  5819 ;;		Nothing
  5820 ;; This function is called by:
  5821 ;;		_TMR4_DefaultInterruptHandler
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825                           	psect	text46
  5826  00165E                     __ptext46:
  5827                           	callstack 0
  5828  00165E                     _ADCC_StartConversion:
  5829                           	callstack 23
  5830                           
  5831                           ;incstack = 0
  5832                           ;ADCC_StartConversion@channel stored from wreg
  5833  00165E  6E01               	movwf	ADCC_StartConversion@channel^0,c
  5834  001660                     
  5835                           ;mcc_generated_files/adcc.c: 111: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 112: {;mcc_generated_files/adcc.c: 114:     ADPCH = channel;
  5836  001660  C001  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
  5837  001664                     
  5838                           ;mcc_generated_files/adcc.c: 117:     ADCON0bits.ADON = 1;
  5839  001664  8E60               	bsf	96,7,c	;volatile
  5840  001666                     
  5841                           ;mcc_generated_files/adcc.c: 120:     ADCON0bits.ADGO = 1;
  5842  001666  8060               	bsf	96,0,c	;volatile
  5843  001668  0012               	return		;funcret
  5844  00166A                     __end_of_ADCC_StartConversion:
  5845                           	callstack 0
  5846                           
  5847 ;; *************** function _TMR0_ISR *****************
  5848 ;; Defined at:
  5849 ;;		line 121 in file "mcc_generated_files/tmr0.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;		None
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;		None
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  1    wreg      void 
  5856 ;; Registers used:
  5857 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5867 ;;Total ram usage:        0 bytes
  5868 ;; Hardware stack levels used:    1
  5869 ;; Hardware stack levels required when called:    2
  5870 ;; This function calls:
  5871 ;;		_TMR0_CallBack
  5872 ;; This function is called by:
  5873 ;;		_INTERRUPT_InterruptManager
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877                           	psect	text47
  5878  00166A                     __ptext47:
  5879                           	callstack 0
  5880  00166A                     _TMR0_ISR:
  5881                           	callstack 24
  5882  00166A                     
  5883                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
  5884  00166A  010E               	movlb	14	; () banked
  5885  00166C  9B33               	bcf	51,5,b	;volatile
  5886  00166E                     
  5887                           ; BSR set to: 14
  5888                           ;mcc_generated_files/tmr0.c: 127:     TMR0_CallBack();
  5889  00166E  EC67  F009         	call	_TMR0_CallBack	;wreg free
  5890  001672  0012               	return		;funcret
  5891  001674                     __end_of_TMR0_ISR:
  5892                           	callstack 0
  5893                           
  5894 ;; *************** function _TMR0_CallBack *****************
  5895 ;; Defined at:
  5896 ;;		line 132 in file "mcc_generated_files/tmr0.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;		None
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;		None
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  1    wreg      void 
  5903 ;; Registers used:
  5904 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5914 ;;Total ram usage:        0 bytes
  5915 ;; Hardware stack levels used:    1
  5916 ;; Hardware stack levels required when called:    1
  5917 ;; This function calls:
  5918 ;;		Absolute function
  5919 ;;		_TMR0_DefaultInterruptHandler
  5920 ;; This function is called by:
  5921 ;;		_TMR0_ISR
  5922 ;; This function uses a non-reentrant model
  5923 ;;
  5924                           
  5925                           	psect	text48
  5926  0012CE                     __ptext48:
  5927                           	callstack 0
  5928  0012CE                     _TMR0_CallBack:
  5929                           	callstack 24
  5930  0012CE                     
  5931                           ;mcc_generated_files/tmr0.c: 136:     if(TMR0_InterruptHandler)
  5932  0012CE  5030               	movf	_TMR0_InterruptHandler^0,w,c
  5933  0012D0  1031               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
  5934  0012D2  1032               	iorwf	(_TMR0_InterruptHandler+2)^0,w,c
  5935  0012D4  B4D8               	btfsc	status,2,c
  5936  0012D6  EF6F  F009         	goto	i2u12_41
  5937  0012DA  EF71  F009         	goto	i2u12_40
  5938  0012DE                     i2u12_41:
  5939  0012DE  EF7E  F009         	goto	i2l441
  5940  0012E2                     i2u12_40:
  5941  0012E2                     
  5942                           ;mcc_generated_files/tmr0.c: 137:     {;mcc_generated_files/tmr0.c: 138:         TMR0_In
      +                          terruptHandler();
  5943  0012E2  D802               	call	i2u13_48
  5944  0012E4  EF7E  F009         	goto	i2u13_49
  5945  0012E8                     i2u13_48:
  5946  0012E8  0005               	push	
  5947  0012EA  6EFA               	movwf	pclath,c
  5948  0012EC  5030               	movf	_TMR0_InterruptHandler^0,w,c
  5949  0012EE  6EFD               	movwf	tosl,c
  5950  0012F0  5031               	movf	(_TMR0_InterruptHandler+1)^0,w,c
  5951  0012F2  6EFE               	movwf	tosh,c
  5952  0012F4  5032               	movf	(_TMR0_InterruptHandler+2)^0,w,c
  5953  0012F6  6EFF               	movwf	tosu,c
  5954  0012F8  50FA               	movf	pclath,w,c
  5955  0012FA  0012               	return		;indir
  5956  0012FC                     i2u13_49:
  5957  0012FC                     i2l441:
  5958  0012FC  0012               	return		;funcret
  5959  0012FE                     __end_of_TMR0_CallBack:
  5960                           	callstack 0
  5961                           
  5962 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5963 ;; Defined at:
  5964 ;;		line 146 in file "mcc_generated_files/tmr0.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;		None
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;		None
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  1    wreg      void 
  5971 ;; Registers used:
  5972 ;;		None
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5982 ;;Total ram usage:        0 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; This function calls:
  5985 ;;		Nothing
  5986 ;; This function is called by:
  5987 ;;		_TMR0_Initialize
  5988 ;;		_TMR0_CallBack
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           	psect	text49
  5993  0016C8                     __ptext49:
  5994                           	callstack 0
  5995  0016C8                     _TMR0_DefaultInterruptHandler:
  5996                           	callstack 24
  5997  0016C8  0012               	return		;funcret
  5998  0016CA                     __end_of_TMR0_DefaultInterruptHandler:
  5999                           	callstack 0
  6000                           
  6001 ;; *************** function _INT3_ISR *****************
  6002 ;; Defined at:
  6003 ;;		line 122 in file "mcc_generated_files/ext_int.c"
  6004 ;; Parameters:    Size  Location     Type
  6005 ;;		None
  6006 ;; Auto vars:     Size  Location     Type
  6007 ;;		None
  6008 ;; Return value:  Size  Location     Type
  6009 ;;                  1    wreg      void 
  6010 ;; Registers used:
  6011 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6012 ;; Tracked objects:
  6013 ;;		On entry : 0/0
  6014 ;;		On exit  : 0/0
  6015 ;;		Unchanged: 0/0
  6016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6021 ;;Total ram usage:        0 bytes
  6022 ;; Hardware stack levels used:    1
  6023 ;; Hardware stack levels required when called:    2
  6024 ;; This function calls:
  6025 ;;		_INT3_CallBack
  6026 ;; This function is called by:
  6027 ;;		_INTERRUPT_InterruptManager
  6028 ;; This function uses a non-reentrant model
  6029 ;;
  6030                           
  6031                           	psect	text50
  6032  001674                     __ptext50:
  6033                           	callstack 0
  6034  001674                     _INT3_ISR:
  6035                           	callstack 24
  6036  001674                     
  6037                           ;mcc_generated_files/ext_int.c: 124:     (PIR0bits.INT3IF = 0);
  6038  001674  010E               	movlb	14	; () banked
  6039  001676  9733               	bcf	51,3,b	;volatile
  6040  001678                     
  6041                           ; BSR set to: 14
  6042                           ;mcc_generated_files/ext_int.c: 127:     INT3_CallBack();
  6043  001678  EC7F  F009         	call	_INT3_CallBack	;wreg free
  6044  00167C  0012               	return		;funcret
  6045  00167E                     __end_of_INT3_ISR:
  6046                           	callstack 0
  6047                           
  6048 ;; *************** function _INT3_CallBack *****************
  6049 ;; Defined at:
  6050 ;;		line 131 in file "mcc_generated_files/ext_int.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;		None
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;		None
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  1    wreg      void 
  6057 ;; Registers used:
  6058 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6068 ;;Total ram usage:        0 bytes
  6069 ;; Hardware stack levels used:    1
  6070 ;; Hardware stack levels required when called:    1
  6071 ;; This function calls:
  6072 ;;		Absolute function
  6073 ;;		_INT3_DefaultInterruptHandler
  6074 ;; This function is called by:
  6075 ;;		_INT3_ISR
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           
  6079                           	psect	text51
  6080  0012FE                     __ptext51:
  6081                           	callstack 0
  6082  0012FE                     _INT3_CallBack:
  6083                           	callstack 24
  6084  0012FE                     
  6085                           ;mcc_generated_files/ext_int.c: 134:     if(INT3_InterruptHandler)
  6086  0012FE  5024               	movf	_INT3_InterruptHandler^0,w,c
  6087  001300  1025               	iorwf	(_INT3_InterruptHandler+1)^0,w,c
  6088  001302  1026               	iorwf	(_INT3_InterruptHandler+2)^0,w,c
  6089  001304  B4D8               	btfsc	status,2,c
  6090  001306  EF87  F009         	goto	i2u20_41
  6091  00130A  EF89  F009         	goto	i2u20_40
  6092  00130E                     i2u20_41:
  6093  00130E  EF96  F009         	goto	i2l719
  6094  001312                     i2u20_40:
  6095  001312                     
  6096                           ;mcc_generated_files/ext_int.c: 135:     {;mcc_generated_files/ext_int.c: 136:         I
      +                          NT3_InterruptHandler();
  6097  001312  D802               	call	i2u21_48
  6098  001314  EF96  F009         	goto	i2u21_49
  6099  001318                     i2u21_48:
  6100  001318  0005               	push	
  6101  00131A  6EFA               	movwf	pclath,c
  6102  00131C  5024               	movf	_INT3_InterruptHandler^0,w,c
  6103  00131E  6EFD               	movwf	tosl,c
  6104  001320  5025               	movf	(_INT3_InterruptHandler+1)^0,w,c
  6105  001322  6EFE               	movwf	tosh,c
  6106  001324  5026               	movf	(_INT3_InterruptHandler+2)^0,w,c
  6107  001326  6EFF               	movwf	tosu,c
  6108  001328  50FA               	movf	pclath,w,c
  6109  00132A  0012               	return		;indir
  6110  00132C                     i2u21_49:
  6111  00132C                     i2l719:
  6112  00132C  0012               	return		;funcret
  6113  00132E                     __end_of_INT3_CallBack:
  6114                           	callstack 0
  6115                           
  6116 ;; *************** function _INT3_DefaultInterruptHandler *****************
  6117 ;; Defined at:
  6118 ;;		line 144 in file "mcc_generated_files/ext_int.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;		None
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;		None
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  1    wreg      void 
  6125 ;; Registers used:
  6126 ;;		None
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6136 ;;Total ram usage:        0 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; This function calls:
  6139 ;;		Nothing
  6140 ;; This function is called by:
  6141 ;;		_EXT_INT_Initialize
  6142 ;;		_INT3_CallBack
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146                           	psect	text52
  6147  0016CA                     __ptext52:
  6148                           	callstack 0
  6149  0016CA                     _INT3_DefaultInterruptHandler:
  6150                           	callstack 24
  6151  0016CA  0012               	return		;funcret
  6152  0016CC                     __end_of_INT3_DefaultInterruptHandler:
  6153                           	callstack 0
  6154                           
  6155 ;; *************** function _INT2_ISR *****************
  6156 ;; Defined at:
  6157 ;;		line 96 in file "mcc_generated_files/ext_int.c"
  6158 ;; Parameters:    Size  Location     Type
  6159 ;;		None
  6160 ;; Auto vars:     Size  Location     Type
  6161 ;;		None
  6162 ;; Return value:  Size  Location     Type
  6163 ;;                  1    wreg      void 
  6164 ;; Registers used:
  6165 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6166 ;; Tracked objects:
  6167 ;;		On entry : 0/0
  6168 ;;		On exit  : 0/0
  6169 ;;		Unchanged: 0/0
  6170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6175 ;;Total ram usage:        0 bytes
  6176 ;; Hardware stack levels used:    1
  6177 ;; Hardware stack levels required when called:    2
  6178 ;; This function calls:
  6179 ;;		_INT2_CallBack
  6180 ;; This function is called by:
  6181 ;;		_INTERRUPT_InterruptManager
  6182 ;; This function uses a non-reentrant model
  6183 ;;
  6184                           
  6185                           	psect	text53
  6186  00167E                     __ptext53:
  6187                           	callstack 0
  6188  00167E                     _INT2_ISR:
  6189                           	callstack 24
  6190  00167E                     
  6191                           ;mcc_generated_files/ext_int.c: 98:     (PIR0bits.INT2IF = 0);
  6192  00167E  010E               	movlb	14	; () banked
  6193  001680  9533               	bcf	51,2,b	;volatile
  6194  001682                     
  6195                           ; BSR set to: 14
  6196                           ;mcc_generated_files/ext_int.c: 101:     INT2_CallBack();
  6197  001682  EC97  F009         	call	_INT2_CallBack	;wreg free
  6198  001686  0012               	return		;funcret
  6199  001688                     __end_of_INT2_ISR:
  6200                           	callstack 0
  6201                           
  6202 ;; *************** function _INT2_CallBack *****************
  6203 ;; Defined at:
  6204 ;;		line 105 in file "mcc_generated_files/ext_int.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;		None
  6207 ;; Auto vars:     Size  Location     Type
  6208 ;;		None
  6209 ;; Return value:  Size  Location     Type
  6210 ;;                  1    wreg      void 
  6211 ;; Registers used:
  6212 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6213 ;; Tracked objects:
  6214 ;;		On entry : 0/0
  6215 ;;		On exit  : 0/0
  6216 ;;		Unchanged: 0/0
  6217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6222 ;;Total ram usage:        0 bytes
  6223 ;; Hardware stack levels used:    1
  6224 ;; Hardware stack levels required when called:    1
  6225 ;; This function calls:
  6226 ;;		Absolute function
  6227 ;;		_INT2_DefaultInterruptHandler
  6228 ;; This function is called by:
  6229 ;;		_INT2_ISR
  6230 ;; This function uses a non-reentrant model
  6231 ;;
  6232                           
  6233                           	psect	text54
  6234  00132E                     __ptext54:
  6235                           	callstack 0
  6236  00132E                     _INT2_CallBack:
  6237                           	callstack 24
  6238  00132E                     
  6239                           ;mcc_generated_files/ext_int.c: 108:     if(INT2_InterruptHandler)
  6240  00132E  5027               	movf	_INT2_InterruptHandler^0,w,c
  6241  001330  1028               	iorwf	(_INT2_InterruptHandler+1)^0,w,c
  6242  001332  1029               	iorwf	(_INT2_InterruptHandler+2)^0,w,c
  6243  001334  B4D8               	btfsc	status,2,c
  6244  001336  EF9F  F009         	goto	i2u18_41
  6245  00133A  EFA1  F009         	goto	i2u18_40
  6246  00133E                     i2u18_41:
  6247  00133E  EFAE  F009         	goto	i2l706
  6248  001342                     i2u18_40:
  6249  001342                     
  6250                           ;mcc_generated_files/ext_int.c: 109:     {;mcc_generated_files/ext_int.c: 110:         I
      +                          NT2_InterruptHandler();
  6251  001342  D802               	call	i2u19_48
  6252  001344  EFAE  F009         	goto	i2u19_49
  6253  001348                     i2u19_48:
  6254  001348  0005               	push	
  6255  00134A  6EFA               	movwf	pclath,c
  6256  00134C  5027               	movf	_INT2_InterruptHandler^0,w,c
  6257  00134E  6EFD               	movwf	tosl,c
  6258  001350  5028               	movf	(_INT2_InterruptHandler+1)^0,w,c
  6259  001352  6EFE               	movwf	tosh,c
  6260  001354  5029               	movf	(_INT2_InterruptHandler+2)^0,w,c
  6261  001356  6EFF               	movwf	tosu,c
  6262  001358  50FA               	movf	pclath,w,c
  6263  00135A  0012               	return		;indir
  6264  00135C                     i2u19_49:
  6265  00135C                     i2l706:
  6266  00135C  0012               	return		;funcret
  6267  00135E                     __end_of_INT2_CallBack:
  6268                           	callstack 0
  6269                           
  6270 ;; *************** function _INT2_DefaultInterruptHandler *****************
  6271 ;; Defined at:
  6272 ;;		line 118 in file "mcc_generated_files/ext_int.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;		None
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;		None
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  1    wreg      void 
  6279 ;; Registers used:
  6280 ;;		None
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6290 ;;Total ram usage:        0 bytes
  6291 ;; Hardware stack levels used:    1
  6292 ;; This function calls:
  6293 ;;		Nothing
  6294 ;; This function is called by:
  6295 ;;		_EXT_INT_Initialize
  6296 ;;		_INT2_CallBack
  6297 ;; This function uses a non-reentrant model
  6298 ;;
  6299                           
  6300                           	psect	text55
  6301  0016CC                     __ptext55:
  6302                           	callstack 0
  6303  0016CC                     _INT2_DefaultInterruptHandler:
  6304                           	callstack 24
  6305  0016CC  0012               	return		;funcret
  6306  0016CE                     __end_of_INT2_DefaultInterruptHandler:
  6307                           	callstack 0
  6308                           
  6309 ;; *************** function _INT1_ISR *****************
  6310 ;; Defined at:
  6311 ;;		line 68 in file "mcc_generated_files/ext_int.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;		None
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;		None
  6316 ;; Return value:  Size  Location     Type
  6317 ;;                  1    wreg      void 
  6318 ;; Registers used:
  6319 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6320 ;; Tracked objects:
  6321 ;;		On entry : 0/0
  6322 ;;		On exit  : 0/0
  6323 ;;		Unchanged: 0/0
  6324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6329 ;;Total ram usage:        0 bytes
  6330 ;; Hardware stack levels used:    1
  6331 ;; Hardware stack levels required when called:    2
  6332 ;; This function calls:
  6333 ;;		_INT1_CallBack
  6334 ;; This function is called by:
  6335 ;;		_INTERRUPT_InterruptManager
  6336 ;; This function uses a non-reentrant model
  6337 ;;
  6338                           
  6339                           	psect	text56
  6340  001688                     __ptext56:
  6341                           	callstack 0
  6342  001688                     _INT1_ISR:
  6343                           	callstack 24
  6344  001688                     
  6345                           ;mcc_generated_files/ext_int.c: 70:     (PIR0bits.INT1IF = 0);
  6346  001688  010E               	movlb	14	; () banked
  6347  00168A  9333               	bcf	51,1,b	;volatile
  6348  00168C                     
  6349                           ; BSR set to: 14
  6350                           ;mcc_generated_files/ext_int.c: 73:     INT1_CallBack();
  6351  00168C  ECCA  F008         	call	_INT1_CallBack	;wreg free
  6352  001690  0012               	return		;funcret
  6353  001692                     __end_of_INT1_ISR:
  6354                           	callstack 0
  6355                           
  6356 ;; *************** function _INT1_CallBack *****************
  6357 ;; Defined at:
  6358 ;;		line 77 in file "mcc_generated_files/ext_int.c"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;		None
  6361 ;; Auto vars:     Size  Location     Type
  6362 ;;		None
  6363 ;; Return value:  Size  Location     Type
  6364 ;;                  1    wreg      void 
  6365 ;; Registers used:
  6366 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6367 ;; Tracked objects:
  6368 ;;		On entry : 0/0
  6369 ;;		On exit  : 0/0
  6370 ;;		Unchanged: 0/0
  6371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6376 ;;Total ram usage:        0 bytes
  6377 ;; Hardware stack levels used:    1
  6378 ;; Hardware stack levels required when called:    1
  6379 ;; This function calls:
  6380 ;;		Absolute function
  6381 ;;		_INT1_DefaultInterruptHandler
  6382 ;;		i2_reset_interruptAction
  6383 ;;		i2_set_INTERRUPT_STEPPER_BREAK_FLAG
  6384 ;; This function is called by:
  6385 ;;		_INT1_ISR
  6386 ;; This function uses a non-reentrant model
  6387 ;;
  6388                           
  6389                           	psect	text57
  6390  001194                     __ptext57:
  6391                           	callstack 0
  6392  001194                     _INT1_CallBack:
  6393                           	callstack 24
  6394  001194                     
  6395                           ;mcc_generated_files/ext_int.c: 80:     set_INTERRUPT_STEPPER_BREAK_FLAG(1);
  6396  001194  0E01               	movlw	1
  6397  001196  EC52  F00B         	call	i2_set_INTERRUPT_STEPPER_BREAK_FLAG
  6398  00119A                     
  6399                           ;mcc_generated_files/ext_int.c: 81:     reset_interruptAction();
  6400  00119A  EC59  F00B         	call	i2_reset_interruptAction	;wreg free
  6401  00119E                     
  6402                           ;mcc_generated_files/ext_int.c: 82:     if(INT1_InterruptHandler)
  6403  00119E  502A               	movf	_INT1_InterruptHandler^0,w,c
  6404  0011A0  102B               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
  6405  0011A2  102C               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
  6406  0011A4  B4D8               	btfsc	status,2,c
  6407  0011A6  EFD7  F008         	goto	i2u113_41
  6408  0011AA  EFD9  F008         	goto	i2u113_40
  6409  0011AE                     i2u113_41:
  6410  0011AE  EFE6  F008         	goto	i2l693
  6411  0011B2                     i2u113_40:
  6412  0011B2                     
  6413                           ;mcc_generated_files/ext_int.c: 83:     {;mcc_generated_files/ext_int.c: 84:         INT
      +                          1_InterruptHandler();
  6414  0011B2  D802               	call	i2u114_48
  6415  0011B4  EFE6  F008         	goto	i2u114_49
  6416  0011B8                     i2u114_48:
  6417  0011B8  0005               	push	
  6418  0011BA  6EFA               	movwf	pclath,c
  6419  0011BC  502A               	movf	_INT1_InterruptHandler^0,w,c
  6420  0011BE  6EFD               	movwf	tosl,c
  6421  0011C0  502B               	movf	(_INT1_InterruptHandler+1)^0,w,c
  6422  0011C2  6EFE               	movwf	tosh,c
  6423  0011C4  502C               	movf	(_INT1_InterruptHandler+2)^0,w,c
  6424  0011C6  6EFF               	movwf	tosu,c
  6425  0011C8  50FA               	movf	pclath,w,c
  6426  0011CA  0012               	return		;indir
  6427  0011CC                     i2u114_49:
  6428  0011CC                     i2l693:
  6429  0011CC  0012               	return		;funcret
  6430  0011CE                     __end_of_INT1_CallBack:
  6431                           	callstack 0
  6432                           
  6433 ;; *************** function _INT1_DefaultInterruptHandler *****************
  6434 ;; Defined at:
  6435 ;;		line 92 in file "mcc_generated_files/ext_int.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;		None
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;		None
  6440 ;; Return value:  Size  Location     Type
  6441 ;;                  1    wreg      void 
  6442 ;; Registers used:
  6443 ;;		None
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6453 ;;Total ram usage:        0 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; This function calls:
  6456 ;;		Nothing
  6457 ;; This function is called by:
  6458 ;;		_EXT_INT_Initialize
  6459 ;;		_INT1_CallBack
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463                           	psect	text58
  6464  0016CE                     __ptext58:
  6465                           	callstack 0
  6466  0016CE                     _INT1_DefaultInterruptHandler:
  6467                           	callstack 24
  6468  0016CE  0012               	return		;funcret
  6469  0016D0                     __end_of_INT1_DefaultInterruptHandler:
  6470                           	callstack 0
  6471                           
  6472 ;; *************** function _INT0_ISR *****************
  6473 ;; Defined at:
  6474 ;;		line 40 in file "mcc_generated_files/ext_int.c"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;		None
  6477 ;; Auto vars:     Size  Location     Type
  6478 ;;		None
  6479 ;; Return value:  Size  Location     Type
  6480 ;;                  1    wreg      void 
  6481 ;; Registers used:
  6482 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6492 ;;Total ram usage:        0 bytes
  6493 ;; Hardware stack levels used:    1
  6494 ;; Hardware stack levels required when called:    2
  6495 ;; This function calls:
  6496 ;;		_INT0_CallBack
  6497 ;; This function is called by:
  6498 ;;		_INTERRUPT_InterruptManager
  6499 ;; This function uses a non-reentrant model
  6500 ;;
  6501                           
  6502                           	psect	text59
  6503  001692                     __ptext59:
  6504                           	callstack 0
  6505  001692                     _INT0_ISR:
  6506                           	callstack 24
  6507  001692                     
  6508                           ;mcc_generated_files/ext_int.c: 42:     (PIR0bits.INT0IF = 0);
  6509  001692  010E               	movlb	14	; () banked
  6510  001694  9133               	bcf	51,0,b	;volatile
  6511  001696                     
  6512                           ; BSR set to: 14
  6513                           ;mcc_generated_files/ext_int.c: 45:     INT0_CallBack();
  6514  001696  ECE7  F008         	call	_INT0_CallBack	;wreg free
  6515  00169A  0012               	return		;funcret
  6516  00169C                     __end_of_INT0_ISR:
  6517                           	callstack 0
  6518                           
  6519 ;; *************** function _INT0_CallBack *****************
  6520 ;; Defined at:
  6521 ;;		line 49 in file "mcc_generated_files/ext_int.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;		None
  6524 ;; Auto vars:     Size  Location     Type
  6525 ;;		None
  6526 ;; Return value:  Size  Location     Type
  6527 ;;                  1    wreg      void 
  6528 ;; Registers used:
  6529 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6530 ;; Tracked objects:
  6531 ;;		On entry : 0/0
  6532 ;;		On exit  : 0/0
  6533 ;;		Unchanged: 0/0
  6534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6539 ;;Total ram usage:        0 bytes
  6540 ;; Hardware stack levels used:    1
  6541 ;; Hardware stack levels required when called:    1
  6542 ;; This function calls:
  6543 ;;		Absolute function
  6544 ;;		_INT0_DefaultInterruptHandler
  6545 ;;		i2_reset_interruptAction
  6546 ;;		i2_set_INTERRUPT_STEPPER_BREAK_FLAG
  6547 ;; This function is called by:
  6548 ;;		_INT0_ISR
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552                           	psect	text60
  6553  0011CE                     __ptext60:
  6554                           	callstack 0
  6555  0011CE                     _INT0_CallBack:
  6556                           	callstack 24
  6557  0011CE                     
  6558                           ;mcc_generated_files/ext_int.c: 52:     set_INTERRUPT_STEPPER_BREAK_FLAG(1);
  6559  0011CE  0E01               	movlw	1
  6560  0011D0  EC52  F00B         	call	i2_set_INTERRUPT_STEPPER_BREAK_FLAG
  6561  0011D4                     
  6562                           ;mcc_generated_files/ext_int.c: 53:     reset_interruptAction();
  6563  0011D4  EC59  F00B         	call	i2_reset_interruptAction	;wreg free
  6564  0011D8                     
  6565                           ;mcc_generated_files/ext_int.c: 54:     if(INT0_InterruptHandler)
  6566  0011D8  502D               	movf	_INT0_InterruptHandler^0,w,c
  6567  0011DA  102E               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
  6568  0011DC  102F               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
  6569  0011DE  B4D8               	btfsc	status,2,c
  6570  0011E0  EFF4  F008         	goto	i2u111_41
  6571  0011E4  EFF6  F008         	goto	i2u111_40
  6572  0011E8                     i2u111_41:
  6573  0011E8  EF03  F009         	goto	i2l680
  6574  0011EC                     i2u111_40:
  6575  0011EC                     
  6576                           ;mcc_generated_files/ext_int.c: 55:     {;mcc_generated_files/ext_int.c: 56:         INT
      +                          0_InterruptHandler();
  6577  0011EC  D802               	call	i2u112_48
  6578  0011EE  EF03  F009         	goto	i2u112_49
  6579  0011F2                     i2u112_48:
  6580  0011F2  0005               	push	
  6581  0011F4  6EFA               	movwf	pclath,c
  6582  0011F6  502D               	movf	_INT0_InterruptHandler^0,w,c
  6583  0011F8  6EFD               	movwf	tosl,c
  6584  0011FA  502E               	movf	(_INT0_InterruptHandler+1)^0,w,c
  6585  0011FC  6EFE               	movwf	tosh,c
  6586  0011FE  502F               	movf	(_INT0_InterruptHandler+2)^0,w,c
  6587  001200  6EFF               	movwf	tosu,c
  6588  001202  50FA               	movf	pclath,w,c
  6589  001204  0012               	return		;indir
  6590  001206                     i2u112_49:
  6591  001206                     i2l680:
  6592  001206  0012               	return		;funcret
  6593  001208                     __end_of_INT0_CallBack:
  6594                           	callstack 0
  6595                           
  6596 ;; *************** function i2_set_INTERRUPT_STEPPER_BREAK_FLAG *****************
  6597 ;; Defined at:
  6598 ;;		line 67 in file "mcc_generated_files/interrupt_manager.c"
  6599 ;; Parameters:    Size  Location     Type
  6600 ;;  in              1    wreg     _Bool 
  6601 ;; Auto vars:     Size  Location     Type
  6602 ;;  in              1    0[COMRAM] _Bool 
  6603 ;; Return value:  Size  Location     Type
  6604 ;;                  1    wreg      void 
  6605 ;; Registers used:
  6606 ;;		wreg
  6607 ;; Tracked objects:
  6608 ;;		On entry : 0/0
  6609 ;;		On exit  : 0/0
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6615 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6616 ;;Total ram usage:        1 bytes
  6617 ;; Hardware stack levels used:    1
  6618 ;; This function calls:
  6619 ;;		Nothing
  6620 ;; This function is called by:
  6621 ;;		_INT0_CallBack
  6622 ;;		_INT1_CallBack
  6623 ;; This function uses a non-reentrant model
  6624 ;;
  6625                           
  6626                           	psect	text61
  6627  0016A4                     __ptext61:
  6628                           	callstack 0
  6629  0016A4                     i2_set_INTERRUPT_STEPPER_BREAK_FLAG:
  6630                           	callstack 24
  6631                           
  6632                           ;incstack = 0
  6633                           ;i2set_INTERRUPT_STEPPER_BREAK_FLAG@in stored from wreg
  6634  0016A4  6E01               	movwf	i2set_INTERRUPT_STEPPER_BREAK_FLAG@in^0,c
  6635  0016A6                     
  6636                           ;mcc_generated_files/interrupt_manager.c: 68:     INTERRUPT_STEPPER_BREAK_FLAG = in;
  6637  0016A6  C001  F03D         	movff	i2set_INTERRUPT_STEPPER_BREAK_FLAG@in,_INTERRUPT_STEPPER_BREAK_FLAG	;volatile
  6638  0016AA  0012               	return		;funcret
  6639  0016AC                     __end_ofi2_set_INTERRUPT_STEPPER_BREAK_FLAG:
  6640                           	callstack 0
  6641                           
  6642 ;; *************** function i2_reset_interruptAction *****************
  6643 ;; Defined at:
  6644 ;;		line 75 in file "mcc_generated_files/interrupt_manager.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;		None
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;		None
  6649 ;; Return value:  Size  Location     Type
  6650 ;;                  1    wreg      void 
  6651 ;; Registers used:
  6652 ;;		wreg, status,2
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6662 ;;Total ram usage:        0 bytes
  6663 ;; Hardware stack levels used:    1
  6664 ;; This function calls:
  6665 ;;		Nothing
  6666 ;; This function is called by:
  6667 ;;		_INT0_CallBack
  6668 ;;		_INT1_CallBack
  6669 ;; This function uses a non-reentrant model
  6670 ;;
  6671                           
  6672                           	psect	text62
  6673  0016B2                     __ptext62:
  6674                           	callstack 0
  6675  0016B2                     i2_reset_interruptAction:
  6676                           	callstack 24
  6677  0016B2                     
  6678                           ;mcc_generated_files/interrupt_manager.c: 76:     interruptAction = NULL_ACTION;
  6679  0016B2  0E00               	movlw	0
  6680  0016B4  6E3C               	movwf	_interruptAction^0,c	;volatile
  6681  0016B6  0012               	return		;funcret
  6682  0016B8                     __end_ofi2_reset_interruptAction:
  6683                           	callstack 0
  6684                           
  6685 ;; *************** function _INT0_DefaultInterruptHandler *****************
  6686 ;; Defined at:
  6687 ;;		line 64 in file "mcc_generated_files/ext_int.c"
  6688 ;; Parameters:    Size  Location     Type
  6689 ;;		None
  6690 ;; Auto vars:     Size  Location     Type
  6691 ;;		None
  6692 ;; Return value:  Size  Location     Type
  6693 ;;                  1    wreg      void 
  6694 ;; Registers used:
  6695 ;;		None
  6696 ;; Tracked objects:
  6697 ;;		On entry : 0/0
  6698 ;;		On exit  : 0/0
  6699 ;;		Unchanged: 0/0
  6700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6705 ;;Total ram usage:        0 bytes
  6706 ;; Hardware stack levels used:    1
  6707 ;; This function calls:
  6708 ;;		Nothing
  6709 ;; This function is called by:
  6710 ;;		_EXT_INT_Initialize
  6711 ;;		_INT0_CallBack
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715                           	psect	text63
  6716  0016D0                     __ptext63:
  6717                           	callstack 0
  6718  0016D0                     _INT0_DefaultInterruptHandler:
  6719                           	callstack 24
  6720  0016D0  0012               	return		;funcret
  6721  0016D2                     __end_of_INT0_DefaultInterruptHandler:
  6722                           	callstack 0
  6723                           
  6724 ;; *************** function _EUSART2_is_rx_ready *****************
  6725 ;; Defined at:
  6726 ;;		line 84 in file "mcc_generated_files/eusart2.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;		None
  6729 ;; Auto vars:     Size  Location     Type
  6730 ;;		None
  6731 ;; Return value:  Size  Location     Type
  6732 ;;                  1    wreg      _Bool 
  6733 ;; Registers used:
  6734 ;;		wreg
  6735 ;; Tracked objects:
  6736 ;;		On entry : 0/0
  6737 ;;		On exit  : 0/0
  6738 ;;		Unchanged: 0/0
  6739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6744 ;;Total ram usage:        0 bytes
  6745 ;; Hardware stack levels used:    1
  6746 ;; This function calls:
  6747 ;;		Nothing
  6748 ;; This function is called by:
  6749 ;;		_INTERRUPT_InterruptManager
  6750 ;; This function uses a non-reentrant model
  6751 ;;
  6752                           
  6753                           	psect	text64
  6754  0015A2                     __ptext64:
  6755                           	callstack 0
  6756  0015A2                     _EUSART2_is_rx_ready:
  6757                           	callstack 26
  6758  0015A2                     
  6759                           ;mcc_generated_files/eusart2.c: 86:     return PIR3bits.RC2IF;
  6760  0015A2  010E               	movlb	14	; () banked
  6761  0015A4  BF36               	btfsc	54,7,b	;volatile
  6762  0015A6  EFD7  F00A         	goto	i2u29_41
  6763  0015AA  EFDA  F00A         	goto	i2u29_40
  6764  0015AE                     i2u29_41:
  6765  0015AE  0E01               	movlw	1
  6766  0015B0  EFDB  F00A         	goto	i2u29_46
  6767  0015B4                     i2u29_40:
  6768  0015B4  0E00               	movlw	0
  6769  0015B6                     i2u29_46:
  6770  0015B6                     
  6771                           ; BSR set to: 14
  6772  0015B6  0012               	return		;funcret
  6773  0015B8                     __end_of_EUSART2_is_rx_ready:
  6774                           	callstack 0
  6775                           
  6776 ;; *************** function _EUSART2_Read *****************
  6777 ;; Defined at:
  6778 ;;		line 94 in file "mcc_generated_files/eusart2.c"
  6779 ;; Parameters:    Size  Location     Type
  6780 ;;		None
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;		None
  6783 ;; Return value:  Size  Location     Type
  6784 ;;                  1    wreg      unsigned char 
  6785 ;; Registers used:
  6786 ;;		wreg, status,2
  6787 ;; Tracked objects:
  6788 ;;		On entry : 0/0
  6789 ;;		On exit  : 0/0
  6790 ;;		Unchanged: 0/0
  6791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6796 ;;Total ram usage:        0 bytes
  6797 ;; Hardware stack levels used:    1
  6798 ;; This function calls:
  6799 ;;		Nothing
  6800 ;; This function is called by:
  6801 ;;		_INTERRUPT_InterruptManager
  6802 ;; This function uses a non-reentrant model
  6803 ;;
  6804                           
  6805                           	psect	text65
  6806  001434                     __ptext65:
  6807                           	callstack 0
  6808  001434                     _EUSART2_Read:
  6809                           	callstack 26
  6810  001434                     i2l272:
  6811                           
  6812                           ;mcc_generated_files/eusart2.c: 96:     while(!PIR3bits.RC2IF)
  6813  001434  010E               	movlb	14	; () banked
  6814  001436  AF36               	btfss	54,7,b	;volatile
  6815  001438  EF20  F00A         	goto	i2u30_41
  6816  00143C  EF22  F00A         	goto	i2u30_40
  6817  001440                     i2u30_41:
  6818  001440  EF1A  F00A         	goto	i2l272
  6819  001444                     i2u30_40:
  6820  001444                     
  6821                           ; BSR set to: 14
  6822                           ;mcc_generated_files/eusart2.c: 101:     if(1 == RC2STAbits.OERR)
  6823  001444  A3F5               	btfss	245,1,b	;volatile
  6824  001446  EF27  F00A         	goto	i2u31_41
  6825  00144A  EF29  F00A         	goto	i2u31_40
  6826  00144E                     i2u31_41:
  6827  00144E  EF2B  F00A         	goto	i2l2133
  6828  001452                     i2u31_40:
  6829  001452                     
  6830                           ; BSR set to: 14
  6831                           ;mcc_generated_files/eusart2.c: 102:     {;mcc_generated_files/eusart2.c: 105:         R
      +                          C2STAbits.CREN = 0;
  6832  001452  99F5               	bcf	245,4,b	;volatile
  6833                           
  6834                           ;mcc_generated_files/eusart2.c: 106:         RC2STAbits.CREN = 1;
  6835  001454  89F5               	bsf	245,4,b	;volatile
  6836  001456                     i2l2133:
  6837                           
  6838                           ; BSR set to: 14
  6839                           ;mcc_generated_files/eusart2.c: 109:     return RC2REG;
  6840  001456  51F1               	movf	241,w,b	;volatile
  6841  001458                     
  6842                           ; BSR set to: 14
  6843  001458  0012               	return		;funcret
  6844  00145A                     __end_of_EUSART2_Read:
  6845                           	callstack 0
  6846                           
  6847 ;; *************** function _ADCC_ISR *****************
  6848 ;; Defined at:
  6849 ;;		line 295 in file "mcc_generated_files/adcc.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;		None
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;		None
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  1    wreg      void 
  6856 ;; Registers used:
  6857 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6867 ;;Total ram usage:        0 bytes
  6868 ;; Hardware stack levels used:    1
  6869 ;; Hardware stack levels required when called:    2
  6870 ;; This function calls:
  6871 ;;		Absolute function
  6872 ;;		_ADCC_DefaultInterruptHandler
  6873 ;; This function is called by:
  6874 ;;		_INTERRUPT_InterruptManager
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878                           	psect	text66
  6879  001208                     __ptext66:
  6880                           	callstack 0
  6881  001208                     _ADCC_ISR:
  6882                           	callstack 24
  6883  001208                     
  6884                           ;mcc_generated_files/adcc.c: 298:     PIR1bits.ADIF = 0;
  6885  001208  010E               	movlb	14	; () banked
  6886  00120A  9134               	bcf	52,0,b	;volatile
  6887  00120C                     
  6888                           ; BSR set to: 14
  6889                           ;mcc_generated_files/adcc.c: 300:     if (ADCC_ADI_InterruptHandler)
  6890  00120C  5021               	movf	_ADCC_ADI_InterruptHandler^0,w,c
  6891  00120E  1022               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
  6892  001210  1023               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
  6893  001212  B4D8               	btfsc	status,2,c
  6894  001214  EF0E  F009         	goto	i2u122_41
  6895  001218  EF10  F009         	goto	i2u122_40
  6896  00121C                     i2u122_41:
  6897  00121C  EF1D  F009         	goto	i2l900
  6898  001220                     i2u122_40:
  6899  001220                     
  6900                           ; BSR set to: 14
  6901                           ;mcc_generated_files/adcc.c: 301:         ADCC_ADI_InterruptHandler();
  6902  001220  D802               	call	i2u123_48
  6903  001222  EF1D  F009         	goto	i2u123_49
  6904  001226                     i2u123_48:
  6905  001226  0005               	push	
  6906  001228  6EFA               	movwf	pclath,c
  6907  00122A  5021               	movf	_ADCC_ADI_InterruptHandler^0,w,c
  6908  00122C  6EFD               	movwf	tosl,c
  6909  00122E  5022               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
  6910  001230  6EFE               	movwf	tosh,c
  6911  001232  5023               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
  6912  001234  6EFF               	movwf	tosu,c
  6913  001236  50FA               	movf	pclath,w,c
  6914  001238  0012               	return		;indir
  6915  00123A                     i2u123_49:
  6916  00123A                     i2l900:
  6917  00123A  0012               	return		;funcret
  6918  00123C                     __end_of_ADCC_ISR:
  6919                           	callstack 0
  6920                           
  6921 ;; *************** function _ADCC_DefaultInterruptHandler *****************
  6922 ;; Defined at:
  6923 ;;		line 310 in file "mcc_generated_files/adcc.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;		None
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;  convertedVal    2    6[COMRAM] unsigned short 
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  1    wreg      void 
  6930 ;; Registers used:
  6931 ;;		wreg, status,2, status,0, cstack
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6938 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6939 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6940 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6941 ;;Total ram usage:        4 bytes
  6942 ;; Hardware stack levels used:    1
  6943 ;; Hardware stack levels required when called:    1
  6944 ;; This function calls:
  6945 ;;		_ADCC_GetConversionResult
  6946 ;;		_EUSART4_Write
  6947 ;;		i2_EUSART2_Write
  6948 ;; This function is called by:
  6949 ;;		_ADCC_Initialize
  6950 ;;		_ADCC_ISR
  6951 ;; This function uses a non-reentrant model
  6952 ;;
  6953                           
  6954                           	psect	text67
  6955  000FF6                     __ptext67:
  6956                           	callstack 0
  6957  000FF6                     _ADCC_DefaultInterruptHandler:
  6958                           	callstack 24
  6959  000FF6                     
  6960                           ;mcc_generated_files/adcc.c: 313:     uint16_t convertedValue = ADCC_GetConversionResult
      +                          ();
  6961  000FF6  ECDC  F00A         	call	_ADCC_GetConversionResult	;wreg free
  6962  000FFA  C001  F007         	movff	?_ADCC_GetConversionResult,ADCC_DefaultInterruptHandler@convertedValue
  6963  000FFE  C002  F008         	movff	?_ADCC_GetConversionResult+1,ADCC_DefaultInterruptHandler@convertedValue+1
  6964  001002                     
  6965                           ;mcc_generated_files/adcc.c: 314:     EUSART2_Write(0xDE);
  6966  001002  0EDE               	movlw	222
  6967  001004  ECA3  F00A         	call	i2_EUSART2_Write
  6968  001008                     
  6969                           ;mcc_generated_files/adcc.c: 315:     EUSART2_Write((uint8_t)(convertedValue >> 2));
  6970  001008  C007  F005         	movff	ADCC_DefaultInterruptHandler@convertedValue,??_ADCC_DefaultInterruptHandler
  6971  00100C  C008  F006         	movff	ADCC_DefaultInterruptHandler@convertedValue+1,??_ADCC_DefaultInterruptHandler+1
  6972  001010  90D8               	bcf	status,0,c
  6973  001012  3206               	rrcf	(??_ADCC_DefaultInterruptHandler+1)^0,f,c
  6974  001014  3205               	rrcf	??_ADCC_DefaultInterruptHandler^0,f,c
  6975  001016  90D8               	bcf	status,0,c
  6976  001018  3206               	rrcf	(??_ADCC_DefaultInterruptHandler+1)^0,f,c
  6977  00101A  3205               	rrcf	??_ADCC_DefaultInterruptHandler^0,f,c
  6978  00101C  5005               	movf	??_ADCC_DefaultInterruptHandler^0,w,c
  6979  00101E  ECA3  F00A         	call	i2_EUSART2_Write
  6980                           
  6981                           ;mcc_generated_files/adcc.c: 316:     EUSART4_Write('\n');
  6982  001022  0E0A               	movlw	10
  6983  001024  ECAF  F00A         	call	_EUSART4_Write
  6984                           
  6985                           ;mcc_generated_files/adcc.c: 317:     EUSART4_Write('*');
  6986  001028  0E2A               	movlw	42
  6987  00102A  ECAF  F00A         	call	_EUSART4_Write
  6988  00102E                     
  6989                           ;mcc_generated_files/adcc.c: 318:     EUSART4_Write((uint8_t)(convertedValue >> 2));
  6990  00102E  C007  F005         	movff	ADCC_DefaultInterruptHandler@convertedValue,??_ADCC_DefaultInterruptHandler
  6991  001032  C008  F006         	movff	ADCC_DefaultInterruptHandler@convertedValue+1,??_ADCC_DefaultInterruptHandler+1
  6992  001036  90D8               	bcf	status,0,c
  6993  001038  3206               	rrcf	(??_ADCC_DefaultInterruptHandler+1)^0,f,c
  6994  00103A  3205               	rrcf	??_ADCC_DefaultInterruptHandler^0,f,c
  6995  00103C  90D8               	bcf	status,0,c
  6996  00103E  3206               	rrcf	(??_ADCC_DefaultInterruptHandler+1)^0,f,c
  6997  001040  3205               	rrcf	??_ADCC_DefaultInterruptHandler^0,f,c
  6998  001042  5005               	movf	??_ADCC_DefaultInterruptHandler^0,w,c
  6999  001044  ECAF  F00A         	call	_EUSART4_Write
  7000  001048                     
  7001                           ;mcc_generated_files/adcc.c: 319:     EUSART4_Write('*');
  7002  001048  0E2A               	movlw	42
  7003  00104A  ECAF  F00A         	call	_EUSART4_Write
  7004  00104E                     
  7005                           ;mcc_generated_files/adcc.c: 320:     EUSART4_Write('\n');
  7006  00104E  0E0A               	movlw	10
  7007  001050  ECAF  F00A         	call	_EUSART4_Write
  7008  001054  0012               	return		;funcret
  7009  001056                     __end_of_ADCC_DefaultInterruptHandler:
  7010                           	callstack 0
  7011                           
  7012 ;; *************** function i2_EUSART2_Write *****************
  7013 ;; Defined at:
  7014 ;;		line 112 in file "mcc_generated_files/eusart2.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;  txData          1    wreg     unsigned char 
  7017 ;; Auto vars:     Size  Location     Type
  7018 ;;  txData          1    0[COMRAM] unsigned char 
  7019 ;; Return value:  Size  Location     Type
  7020 ;;                  1    wreg      void 
  7021 ;; Registers used:
  7022 ;;		wreg
  7023 ;; Tracked objects:
  7024 ;;		On entry : 0/0
  7025 ;;		On exit  : 0/0
  7026 ;;		Unchanged: 0/0
  7027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7029 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7031 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7032 ;;Total ram usage:        1 bytes
  7033 ;; Hardware stack levels used:    1
  7034 ;; This function calls:
  7035 ;;		Nothing
  7036 ;; This function is called by:
  7037 ;;		_INTERRUPT_InterruptManager
  7038 ;;		_ADCC_DefaultInterruptHandler
  7039 ;; This function uses a non-reentrant model
  7040 ;;
  7041                           
  7042                           	psect	text68
  7043  001546                     __ptext68:
  7044                           	callstack 0
  7045  001546                     i2_EUSART2_Write:
  7046                           	callstack 26
  7047                           
  7048                           ;incstack = 0
  7049                           ;i2EUSART2_Write@txData stored from wreg
  7050  001546  6E01               	movwf	i2EUSART2_Write@txData^0,c
  7051  001548                     i2l279:
  7052                           
  7053                           ;mcc_generated_files/eusart2.c: 115:     while(0 == PIR3bits.TX2IF)
  7054  001548  010E               	movlb	14	; () banked
  7055  00154A  AD36               	btfss	54,6,b	;volatile
  7056  00154C  EFAA  F00A         	goto	i2u106_41
  7057  001550  EFAC  F00A         	goto	i2u106_40
  7058  001554                     i2u106_41:
  7059  001554  EFA4  F00A         	goto	i2l279
  7060  001558                     i2u106_40:
  7061  001558                     
  7062                           ; BSR set to: 14
  7063                           ;mcc_generated_files/eusart2.c: 120:     TX2REG = txData;
  7064  001558  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
  7065  00155C                     
  7066                           ; BSR set to: 14
  7067  00155C  0012               	return		;funcret
  7068  00155E                     __end_ofi2_EUSART2_Write:
  7069                           	callstack 0
  7070                           
  7071 ;; *************** function _EUSART4_Write *****************
  7072 ;; Defined at:
  7073 ;;		line 111 in file "mcc_generated_files/eusart4.c"
  7074 ;; Parameters:    Size  Location     Type
  7075 ;;  txData          1    wreg     unsigned char 
  7076 ;; Auto vars:     Size  Location     Type
  7077 ;;  txData          1    0[COMRAM] unsigned char 
  7078 ;; Return value:  Size  Location     Type
  7079 ;;                  1    wreg      void 
  7080 ;; Registers used:
  7081 ;;		wreg
  7082 ;; Tracked objects:
  7083 ;;		On entry : 0/0
  7084 ;;		On exit  : 0/0
  7085 ;;		Unchanged: 0/0
  7086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7088 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7090 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7091 ;;Total ram usage:        1 bytes
  7092 ;; Hardware stack levels used:    1
  7093 ;; This function calls:
  7094 ;;		Nothing
  7095 ;; This function is called by:
  7096 ;;		_ADCC_DefaultInterruptHandler
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           	psect	text69
  7101  00155E                     __ptext69:
  7102                           	callstack 0
  7103  00155E                     _EUSART4_Write:
  7104                           	callstack 24
  7105                           
  7106                           ; BSR set to: 14
  7107                           ;incstack = 0
  7108                           ;EUSART4_Write@txData stored from wreg
  7109  00155E  6E01               	movwf	EUSART4_Write@txData^0,c
  7110  001560                     i2l1152:
  7111                           
  7112                           ;mcc_generated_files/eusart4.c: 113:     while(0 == PIR4bits.TX4IF)
  7113  001560  010E               	movlb	14	; () banked
  7114  001562  A537               	btfss	55,2,b	;volatile
  7115  001564  EFB6  F00A         	goto	i2u2_41
  7116  001568  EFB8  F00A         	goto	i2u2_40
  7117  00156C                     i2u2_41:
  7118  00156C  EFB0  F00A         	goto	i2l1152
  7119  001570                     i2u2_40:
  7120  001570                     
  7121                           ; BSR set to: 14
  7122                           ;mcc_generated_files/eusart4.c: 117:     TX4REG = txData;
  7123  001570  C001  FEE4         	movff	EUSART4_Write@txData,3812	;volatile
  7124  001574                     
  7125                           ; BSR set to: 14
  7126  001574  0012               	return		;funcret
  7127  001576                     __end_of_EUSART4_Write:
  7128                           	callstack 0
  7129                           
  7130 ;; *************** function _ADCC_GetConversionResult *****************
  7131 ;; Defined at:
  7132 ;;		line 129 in file "mcc_generated_files/adcc.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;		None
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;		None
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  2    0[COMRAM] unsigned short 
  7139 ;; Registers used:
  7140 ;;		wreg, status,2, status,0
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7146 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7148 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7149 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7150 ;;Total ram usage:        4 bytes
  7151 ;; Hardware stack levels used:    1
  7152 ;; This function calls:
  7153 ;;		Nothing
  7154 ;; This function is called by:
  7155 ;;		_ADCC_DefaultInterruptHandler
  7156 ;; This function uses a non-reentrant model
  7157 ;;
  7158                           
  7159                           	psect	text70
  7160  0015B8                     __ptext70:
  7161                           	callstack 0
  7162  0015B8                     _ADCC_GetConversionResult:
  7163                           	callstack 24
  7164  0015B8                     
  7165                           ;mcc_generated_files/adcc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7166  0015B8  5064               	movf	100,w,c	;volatile
  7167  0015BA  6E04               	movwf	(??_ADCC_GetConversionResult+1)^0,c
  7168  0015BC  6A03               	clrf	??_ADCC_GetConversionResult^0,c
  7169  0015BE  5063               	movf	99,w,c	;volatile
  7170  0015C0  2403               	addwf	??_ADCC_GetConversionResult^0,w,c
  7171  0015C2  6E01               	movwf	?_ADCC_GetConversionResult^0,c
  7172  0015C4  0E00               	movlw	0
  7173  0015C6  2004               	addwfc	(??_ADCC_GetConversionResult+1)^0,w,c
  7174  0015C8  6E02               	movwf	(?_ADCC_GetConversionResult+1)^0,c
  7175  0015CA  0012               	return		;funcret
  7176  0015CC                     __end_of_ADCC_GetConversionResult:
  7177                           	callstack 0
  7178  0000                     
  7179                           	psect	text71
  7180  000000                     __ptext71:
  7181                           	callstack 0
  7182  000000                     
  7183                           	psect	rparam
  7184  0000                     
  7185                           	psect	temp
  7186  00003F                     btemp:
  7187                           	callstack 0
  7188  00003F                     	ds	1
  7189  0000                     int$flags	set	btemp
  7190  0000                     wtemp8	set	btemp+1
  7191  0000                     ttemp5	set	btemp+1
  7192  0000                     ttemp6	set	btemp+4
  7193  0000                     ttemp7	set	btemp+8
  7194                           
  7195                           	psect	idloc
  7196                           
  7197                           ;Config register IDLOC0 @ 0x200000
  7198                           ;	unspecified, using default values
  7199  200000                     	org	2097152
  7200  200000  0FFF               	dw	4095
  7201                           
  7202                           ;Config register IDLOC1 @ 0x200002
  7203                           ;	unspecified, using default values
  7204  200002                     	org	2097154
  7205  200002  0FFF               	dw	4095
  7206                           
  7207                           ;Config register IDLOC2 @ 0x200004
  7208                           ;	unspecified, using default values
  7209  200004                     	org	2097156
  7210  200004  0FFF               	dw	4095
  7211                           
  7212                           ;Config register IDLOC3 @ 0x200006
  7213                           ;	unspecified, using default values
  7214  200006                     	org	2097158
  7215  200006  0FFF               	dw	4095
  7216                           
  7217                           ;Config register IDLOC4 @ 0x200008
  7218                           ;	unspecified, using default values
  7219  200008                     	org	2097160
  7220  200008  0FFF               	dw	4095
  7221                           
  7222                           ;Config register IDLOC5 @ 0x20000A
  7223                           ;	unspecified, using default values
  7224  20000A                     	org	2097162
  7225  20000A  0FFF               	dw	4095
  7226                           
  7227                           ;Config register IDLOC6 @ 0x20000C
  7228                           ;	unspecified, using default values
  7229  20000C                     	org	2097164
  7230  20000C  0FFF               	dw	4095
  7231                           
  7232                           ;Config register IDLOC7 @ 0x20000E
  7233                           ;	unspecified, using default values
  7234  20000E                     	org	2097166
  7235  20000E  0FFF               	dw	4095
  7236                           
  7237                           	psect	config
  7238                           
  7239                           ;Config register CONFIG1L @ 0x300000
  7240                           ;	External Oscillator mode Selection bits
  7241                           ;	FEXTOSC = OFF, Oscillator not enabled
  7242                           ;	Power-up default value for COSC bits
  7243                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  7244  300000                     	org	3145728
  7245  300000  EC                 	db	236
  7246                           
  7247                           ;Config register CONFIG1H @ 0x300001
  7248                           ;	Clock Out Enable bit
  7249                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  7250                           ;	Clock Switch Enable bit
  7251                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  7252                           ;	Fail-Safe Clock Monitor Enable bit
  7253                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  7254  300001                     	org	3145729
  7255  300001  FF                 	db	255
  7256                           
  7257                           ;Config register CONFIG2L @ 0x300002
  7258                           ;	Master Clear Enable bit
  7259                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RG5 pin function is MCLR
  7260                           ;	Power-up Timer Enable bit
  7261                           ;	PWRTE = OFF, Power up timer disabled
  7262                           ;	Low-power BOR enable bit
  7263                           ;	LPBOREN = OFF, ULPBOR disabled
  7264                           ;	Brown-out Reset Enable bits
  7265                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  7266  300002                     	org	3145730
  7267  300002  FF                 	db	255
  7268                           
  7269                           ;Config register CONFIG2H @ 0x300003
  7270                           ;	Brown Out Reset Voltage selection bits
  7271                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  7272                           ;	ZCD Disable bit
  7273                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  7274                           ;	PPSLOCK bit One-Way Set Enable bit
  7275                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  7276                           ;	Stack Full/Underflow Reset Enable bit
  7277                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7278                           ;	Debugger Enable bit
  7279                           ;	DEBUG = OFF, Background debugger disabled
  7280                           ;	Extended Instruction Set Enable bit
  7281                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  7282  300003                     	org	3145731
  7283  300003  FF                 	db	255
  7284                           
  7285                           ;Config register CONFIG3L @ 0x300004
  7286                           ;	WDT Period Select bits
  7287                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7288                           ;	WDT operating mode
  7289                           ;	WDTE = OFF, WDT Disabled
  7290  300004                     	org	3145732
  7291  300004  9F                 	db	159
  7292                           
  7293                           ;Config register CONFIG3H @ 0x300005
  7294                           ;	WDT Window Select bits
  7295                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  7296                           ;	WDT input clock selector
  7297                           ;	WDTCCS = SC, Software Control
  7298  300005                     	org	3145733
  7299  300005  FF                 	db	255
  7300                           
  7301                           ;Config register CONFIG4L @ 0x300006
  7302                           ;	Write Protection Block 0
  7303                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7304                           ;	Write Protection Block 1
  7305                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7306                           ;	Write Protection Block 2
  7307                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7308                           ;	Write Protection Block 3
  7309                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  7310                           ;	Write Protection Block 3
  7311                           ;	WRT4 = OFF, Block 4 (010000-013FFFh) not write-protected
  7312                           ;	Write Protection Block 3
  7313                           ;	WRT5 = OFF, Block 5 (014000-017FFFh) not write-protected
  7314                           ;	Write Protection Block 3
  7315                           ;	WRT6 = OFF, Block 6 (018000-01BFFFh) not write-protected
  7316                           ;	Write Protection Block 3
  7317                           ;	WRT7 = OFF, Block 7 (01C000-01FFFFh) not write-protected
  7318  300006                     	org	3145734
  7319  300006  FF                 	db	255
  7320                           
  7321                           ;Config register CONFIG4H @ 0x300007
  7322                           ;	Configuration Register Write Protection bit
  7323                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  7324                           ;	Boot Block Write Protection bit
  7325                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7326                           ;	Data EEPROM Write Protection bit
  7327                           ;	WRTD = OFF, Data EEPROM not write-protected
  7328                           ;	Scanner Enable bit
  7329                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  7330                           ;	Low Voltage Programming Enable bit
  7331                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  7332  300007                     	org	3145735
  7333  300007  FF                 	db	255
  7334                           
  7335                           ;Config register CONFIG5L @ 0x300008
  7336                           ;	UserNVM Program Memory Code Protection bit
  7337                           ;	CP = OFF, UserNVM code protection disabled
  7338                           ;	DataNVM Memory Code Protection bit
  7339                           ;	CPD = OFF, DataNVM code protection disabled
  7340  300008                     	org	3145736
  7341  300008  FF                 	db	255
  7342                           
  7343                           ;Config register CONFIG5H @ 0x300009
  7344                           ;	unspecified, using default values
  7345  300009                     	org	3145737
  7346  300009  FF                 	db	255
  7347                           
  7348                           ;Config register CONFIG6L @ 0x30000A
  7349                           ;	Table Read Protection Block 0
  7350                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7351                           ;	Table Read Protection Block 1
  7352                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7353                           ;	Table Read Protection Block 2
  7354                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7355                           ;	Table Read Protection Block 3
  7356                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7357                           ;	Table Read Protection Block 4
  7358                           ;	EBTR4 = OFF, Block 4 (010000-013FFFh) not protected from table reads executed in other
      +                           blocks
  7359                           ;	Table Read Protection Block 5
  7360                           ;	EBTR5 = OFF, Block 5 (014000-017FFFh) not protected from table reads executed in other
      +                           blocks
  7361                           ;	Table Read Protection Block 6
  7362                           ;	EBTR6 = OFF, Block 6 (018000-01BFFFh) not protected from table reads executed in other
      +                           blocks
  7363                           ;	Table Read Protection Block 7
  7364                           ;	EBTR7 = OFF, Block 7 (01C000-01FFFFh) not protected from table reads executed in other
      +                           blocks
  7365  30000A                     	org	3145738
  7366  30000A  FF                 	db	255
  7367                           
  7368                           ;Config register CONFIG6H @ 0x30000B
  7369                           ;	Boot Block Table Read Protection bit
  7370                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7371  30000B                     	org	3145739
  7372  30000B  FF                 	db	255
  7373                           tosu	equ	0xFFF
  7374                           tosh	equ	0xFFE
  7375                           tosl	equ	0xFFD
  7376                           stkptr	equ	0xFFC
  7377                           pclatu	equ	0xFFB
  7378                           pclath	equ	0xFFA
  7379                           pcl	equ	0xFF9
  7380                           tblptru	equ	0xFF8
  7381                           tblptrh	equ	0xFF7
  7382                           tblptrl	equ	0xFF6
  7383                           tablat	equ	0xFF5
  7384                           prodh	equ	0xFF4
  7385                           prodl	equ	0xFF3
  7386                           indf0	equ	0xFEF
  7387                           postinc0	equ	0xFEE
  7388                           postdec0	equ	0xFED
  7389                           preinc0	equ	0xFEC
  7390                           plusw0	equ	0xFEB
  7391                           fsr0h	equ	0xFEA
  7392                           fsr0l	equ	0xFE9
  7393                           wreg	equ	0xFE8
  7394                           indf1	equ	0xFE7
  7395                           postinc1	equ	0xFE6
  7396                           postdec1	equ	0xFE5
  7397                           preinc1	equ	0xFE4
  7398                           plusw1	equ	0xFE3
  7399                           fsr1h	equ	0xFE2
  7400                           fsr1l	equ	0xFE1
  7401                           bsr	equ	0xFE0
  7402                           indf2	equ	0xFDF
  7403                           postinc2	equ	0xFDE
  7404                           postdec2	equ	0xFDD
  7405                           preinc2	equ	0xFDC
  7406                           plusw2	equ	0xFDB
  7407                           fsr2h	equ	0xFDA
  7408                           fsr2l	equ	0xFD9
  7409                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  21
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      62
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    INT3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT3_DefaultInterruptHandler(), 

    INT3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT3_DefaultInterruptHandler(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), TMR4_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_inchBackwards
    _main->_inchForwards
    _moveUntilZ->_setStepSize
    _inchForwards->_Step
    _inchBackwards->_Step
    _Step->___wmul
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EXT_INT_Initialize->_INT3_SetInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _setPump2PWM->_PWM2_LoadDutyValue
    _setPump1PWM->_PWM1_LoadDutyValue
    _TMR4_DefaultInterruptHandler->_ADCC_StartConversion
    _INT1_CallBack->i2_set_INTERRUPT_STEPPER_BREAK_FLAG
    _INT0_CallBack->i2_set_INTERRUPT_STEPPER_BREAK_FLAG
    _ADCC_ISR->_ADCC_DefaultInterruptHandler
    _ADCC_DefaultInterruptHandler->_ADCC_GetConversionResult

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3464
                                             30 COMRAM     2     2      0
                  _SYSTEM_Initialize
                _get_interruptAction
                      _inchBackwards
                       _inchForwards
                          _initPumps
                         _moveUntilZ
              _reset_interruptAction
   _set_INTERRUPT_STEPPER_BREAK_FLAG
 ---------------------------------------------------------------------------------
 (1) _set_INTERRUPT_STEPPER_BREAK_FLAG                     1     1      0      15
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _reset_interruptAction                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _moveUntilZ                                           3     2      1     697
                                             15 COMRAM     3     2      1
   _get_INTERRUPT_STEPPER_BREAK_FLAG
                       _setDirection
                        _setStepSize
                       _stepperSleep
 ---------------------------------------------------------------------------------
 (1) _initPumps                                            0     0      0       0
                         _TMR4_Start
 ---------------------------------------------------------------------------------
 (2) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inchForwards                                         5     5      0    1033
                                             25 COMRAM     5     5      0
                               _Step
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _inchBackwards                                        5     5      0    1033
                                             25 COMRAM     5     5      0
                               _Step
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                             12 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Step                                                 7     4      3     498
                                             18 COMRAM     7     4      3
                      _EUSART2_Write
                             ___wmul (ARG)
   _get_INTERRUPT_STEPPER_BREAK_FLAG
                       _setDirection
                        _setStepSize
                       _stepperSleep
 ---------------------------------------------------------------------------------
 (2) _stepperSleep                                         1     1      0      15
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setStepSize                                          3     3      0      15
                                             12 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _setDirection                                         1     1      0      15
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _get_INTERRUPT_STEPPER_BREAK_FLAG                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART2_Write                                        1     1      0      15
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_interruptAction                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     686
                    _ADCC_Initialize
                 _EUSART2_Initialize
                 _EUSART4_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _TMR0_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0      98
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR4_SetInterruptHandler                             3     0      3      98
                                             12 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0      98
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             3     0      3      98
                                             12 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     392
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
           _INT3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT3_SetInterruptHandler                             3     0      3      98
                                             12 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      98
                                             12 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      98
                                             12 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      98
                                             12 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART4_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      98
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      98
                                             12 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           4     4      0    2407
                                              8 COMRAM     4     4      0
                           _ADCC_ISR
                       _EUSART2_Read
                _EUSART2_is_rx_ready
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                           _INT3_ISR
                           _TMR0_ISR
                           _TMR4_ISR
                        _setPump1PWM
                        _setPump2PWM
                    _stepperIsAsleep
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _stepperIsAsleep                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _setPump2PWM                                          2     0      2    1122
                                              2 COMRAM     2     0      2
                 _PWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (6) _PWM2_LoadDutyValue                                   2     0      2     166
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _setPump1PWM                                          2     0      2    1122
                                              2 COMRAM     2     0      2
                 _PWM1_LoadDutyValue
 ---------------------------------------------------------------------------------
 (6) _PWM1_LoadDutyValue                                   2     0      2     166
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _TMR4_ISR                                             0     0      0      15
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR4_CallBack                                        0     0      0      15
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR4_DefaultInterruptHandler                         0     0      0      15
               _ADCC_StartConversion
                       i2_TMR4_Start
 ---------------------------------------------------------------------------------
 (8) i2_TMR4_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ADCC_StartConversion                                 1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT3_ISR                                             0     0      0       0
                      _INT3_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT3_CallBack                                        0     0      0       0
                   Absolute function *
       _INT3_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT2_CallBack                                        0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0      22
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT1_CallBack                                        0     0      0      22
                   Absolute function *
       _INT1_DefaultInterruptHandler *
            i2_reset_interruptAction
 i2_set_INTERRUPT_STEPPER_BREAK_FLAG
 ---------------------------------------------------------------------------------
 (7) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0      22
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT0_CallBack                                        0     0      0      22
                   Absolute function *
       _INT0_DefaultInterruptHandler *
            i2_reset_interruptAction
 i2_set_INTERRUPT_STEPPER_BREAK_FLAG
 ---------------------------------------------------------------------------------
 (7) i2_set_INTERRUPT_STEPPER_BREAK_FLAG                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) i2_reset_interruptAction                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADCC_ISR                                             0     0      0      82
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _ADCC_DefaultInterruptHandler                         4     4      0      82
                                              4 COMRAM     4     4      0
           _ADCC_GetConversionResult
                      _EUSART4_Write
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) i2_EUSART2_Write                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _EUSART4_Write                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ADCC_GetConversionResult                             4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _EUSART2_Initialize
     _EUSART4_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
       _INT3_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
   _get_interruptAction
   _inchBackwards
     _Step
       _EUSART2_Write
       ___wmul (ARG)
       _get_INTERRUPT_STEPPER_BREAK_FLAG (ARG)
       _setDirection (ARG)
       _setStepSize (ARG)
       _stepperSleep (ARG)
     ___wmul
   _inchForwards
     _Step
       _EUSART2_Write
       ___wmul (ARG)
       _get_INTERRUPT_STEPPER_BREAK_FLAG (ARG)
       _setDirection (ARG)
       _setStepSize (ARG)
       _stepperSleep (ARG)
     ___wmul
   _initPumps
     _TMR4_Start
   _moveUntilZ
     _get_INTERRUPT_STEPPER_BREAK_FLAG
     _setDirection
     _setStepSize
     _stepperSleep
   _reset_interruptAction
   _set_INTERRUPT_STEPPER_BREAK_FLAG

 _INTERRUPT_InterruptManager (ROOT)
   _ADCC_ISR
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
       _ADCC_GetConversionResult
       _EUSART4_Write
       i2_EUSART2_Write
   _EUSART2_Read
   _EUSART2_is_rx_ready
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
       i2_reset_interruptAction *
       i2_set_INTERRUPT_STEPPER_BREAK_FLAG *
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
       i2_reset_interruptAction *
       i2_set_INTERRUPT_STEPPER_BREAK_FLAG *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _INT2_DefaultInterruptHandler *
   _INT3_ISR
     _INT3_CallBack
       Absolute function(Fake) *
       _INT3_DefaultInterruptHandler *
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
   _TMR4_ISR
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *
         _ADCC_StartConversion
         i2_TMR4_Start
   _setPump1PWM
     _PWM1_LoadDutyValue
   _setPump2PWM
     _PWM2_LoadDutyValue
   _stepperIsAsleep
   i2_EUSART2_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      3E       1       66.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3E       8        0.0%
DATA                 0      0      3E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Oct 06 16:28:13 2021

                                         l25 1478                            inchBackwards@size 001C  
                                         u10 14E0                                           u11 14DC  
                                         u30 14A8                                           u31 14A4  
                                         u40 148C                                           u41 1488  
                        ___wmul@multiplicand 000F                                          l211 14FC  
                                        l214 14CC                                          l208 126C  
                                        l321 129C                                          l330 16BA  
                                        l227 15EE                                          l156 0D08  
                                        l502 16BE                                          l511 16B0  
                                        l505 16A2                                          l258 152C  
                                        l514 15A0                                          l370 15FC  
                                        l282 14E4                                          l419 140C  
                                        l444 160A                                          l508 16C2  
                                        l279 14D0                                          l722 1618  
                                        l386 15DC                                          l709 1626  
                                        l903 1650                                          l815 10B2  
                                        l728 0FF4                                          l930 0B80  
                                        l683 1642                               ?_inchBackwards 0001  
                                        l696 1634                                          l983 0EA8  
                                        l986 0EBA                                          l978 0ECC  
                                        l989 0F06                        __size_of_stepperSleep 001C  
                                        _PR4 000FB6                   ??_INT0_SetInterruptHandler 0010  
                 ??_INT3_SetInterruptHandler 0010                      __size_of_PMD_Initialize 001C  
                                        tosl 000FFD                                          wreg 000FE8  
                              _INT0_CallBack 11CE                 ?_ADCC_SetADIInterruptHandler 000D  
                              _INT1_CallBack 1194                               setPump1PWM@pwm 0003  
                                       l1004 10CC                                         l1030 0DB4  
                                       l1103 14A8                                         l1007 10DE  
                                       l2001 14FE                                         l1041 0E60  
                                       l1009 1106                                         l1106 14AE  
                                       l1050 1494                                         l2003 1516  
                                       l1131 1514                                         l1108 14B0  
                                       l1060 0F0E                                         l1045 148C  
                                       l1070 0F1A                                         l1062 0F10  
                                       l1072 0F1C                                         l1064 0F12  
                                       l1048 1492                                         l1082 0F2C  
                                       l1091 0F38                                         l1075 0F22  
                                       l1084 0F2E                                         l1068 0F18  
                                       l1093 0F3A                                         l1077 0F24  
                                       l1086 0F30                                         l1158 1432  
                                       l1079 0F26                                         l1097 0F40  
                                       l1089 0F36                                         l2161 169E  
                                       l3123 1056                                         l3131 126E  
                                       l2163 16C0                                         l1099 0F90  
                                       l3211 0E84                                         l3203 0E64  
                                       l2091 1464                                         l2083 145A  
                                       l3125 109C                                         l3141 0F92  
                                       l3133 1282                                         l3221 0EB8  
                                       l3213 0E90                                         l3205 0E72  
                                       l2093 1466                                         l2085 145E  
                                       l3127 10A0                                         l3151 0FC0  
                                       l3143 0F98                                         l3071 15F0  
                                       l3135 1286                                         l3223 0EC8  
                                       l3207 0E78                                         l3231 140E  
                                       l2095 1468                                         l2087 1460  
                                       l2167 16AC                                         l3129 10A2  
                                       l3081 160C                                         l3161 0FDE  
                                       l3153 0FC4                                         l3145 0FA8  
                                       l3073 15FE                                         l3137 1288  
                                       l3225 0EE2                                         l3209 0E7E  
                                       l3233 142A                                         l3321 0DE0  
                                       l3313 0DB8                                         l3305 0D4C  
                                       l2097 1470                                         l2089 1462  
                                       l3083 1644                                         l3075 1636  
                                       l3163 0FF0                                         l3155 0FC6  
                                       l3147 0FAC                                         l3171 13F8  
                                       l3139 1298                                         l3227 0EFA  
                                       l3219 0EAA                                         l3323 0DEC  
                                       l3331 0E3A                                         l3315 0DBC  
                                       l3307 0D8E                                         l3077 1628  
                                       l3157 0FD8                                         l3149 0FAE  
                                       l3173 1408                                         l3165 13E6  
                                       l3261 1260                                         l3253 123C  
                                       l3229 0F00                                         l3317 0DC8  
                                       l3079 161A                                         l3159 0FDC  
                                       l3167 13F2                                         l3255 1254  
                                       l3319 0DD4                                         l3169 13F6  
                                       l3257 1258                                         l1841 14E0  
                                       l3329 0DF8                                         l3281 10CE  
                                       l1931 159C                                         l3259 125C  
                                       l1851 16BC                                         l3291 0D10  
                                       l3283 10DC                                         l1925 0C30  
                                       l1933 14B2                                         l1941 15EC  
                                       l3293 0D1C                                         l3285 10EC  
                                       l3277 10B6                         _ADCC_StartConversion 165E  
                                       l1935 14E6                                         l1927 0C6C  
                                       l1943 15CC                                         l1839 14D0  
                                       l3295 0D28                                         l3287 1100  
                                       l3279 10C2                                         l1929 158C  
                                       l1937 15DE                                         l1945 15D8  
                                       l1873 1498                                         l1881 0F46  
                                       l3297 0D34                                         l3289 0D0C  
                                       l3801 0AE4                                         l1939 15EA  
                                       l1947 15DA                                         l1875 147C  
                                       l3299 0D40                                         l3811 0B08  
                                       l3803 0AEA                                         l3731 09E8  
                                       l1877 0F0A                                         l3821 0B26  
                                       l3813 0B0C                                         l3805 0AF4  
                                       l3741 09FC                                         l3733 09EC  
                                       l1895 16B8                                         l3831 0B48  
                                       l3823 0B30                                         l3815 0B12  
                                       l3807 0AF8                                         l3751 0A28  
                                       l3743 0A02                                         l3735 09EE  
                                       l3841 0B6C                                         l3833 0B4E  
                                       l3825 0B34                                         l3817 0B1C  
                                       l3809 0AFE                                         l3761 0A4A  
                                       l3753 0A2C                                         l3745 0A10  
                                       l3737 09F0                                         l3843 0B70  
                                       l3835 0B58                                         l3827 0B3A  
                                       l3819 0B20                                         l3771 0A74  
                                       l3763 0A58                                         l3755 0A32  
                                       l3747 0A14                                         l3739 09F8  
                                       l3845 0B76                                         l3837 0B5C  
                                       l3829 0B44                                         l3781 0AA0  
                                       l3773 0A7A                                         l3765 0A5C  
                                       l3757 0A40                                         l3749 0A1A  
                                       l3839 0B62                                         l3791 0AC2  
                                       l3783 0AA4                                         l3775 0A88  
                                       l3767 0A62                                         l3759 0A44  
                                       l3793 0ACC                                         l3785 0AAA  
                                       l3777 0A8C                                         l3769 0A70  
                                       l3849 0B80                                         l3971 0F5A  
                                       l3795 0AD0                                         l3787 0AB8  
                                       l3779 0A92                                         l3965 0B96  
                                       l3797 0AD6                                         l3789 0ABC  
                              ?_inchForwards 0001                                         l3967 0D60  
                                       l3799 0AE0                                         l3969 0E0C  
                             setPump2PWM@pwm 0003                      __end_of_PWM1_Initialize 15F0  
                                       u1150 0EA4                                         u1151 0EA0  
                                       u1160 0EE2                                         u1240 1100  
                                       u1161 0EDE                                         u1241 10FC  
                                       u1170 0EFA                                         u1171 0EF6  
                                       _LATA 000F79                                         _LATB 000F7A  
                                       _LATC 000F7B                                         _LATD 000F7C  
                                       _LATE 000F7D                                         _LATF 000F7E  
                                       _LATG 000F7F                                         _LATH 000F80  
                                       _T4PR 000FB6                                         u1857 10D4  
                                       u1867 10E4                                         _PMD0 000E4C  
                                       u1877 0E6A                                         _PMD1 000E4D  
                                       _PMD2 000E4E                                         u1887 0EB0  
                                       _PMD3 000E4F                                         _PMD4 000E50  
                                       u1897 0EC0                                         _PMD5 000E51  
                                       i2l41 118E                                         i2l43 1190  
                                       i2l35 1174                                         i2l52 1142  
                                       i2l45 1192                                         i2l38 1188  
                                       i2l55 1148                                         i2l57 114A  
                                       i2l49 112E                                         i2l59 114C  
                                       _TMR4 000FB5                                         _WPUA 000E91  
                                       _WPUB 000E99                                         _WPUC 000EA1  
                                       _WPUD 000EA6                                         _WPUE 000EAE  
                                       _WPUF 000EB3                                         _WPUG 000EBB  
                                       _WPUH 000EC0                                _INT2_CallBack 132E  
                           __end_of_ADCC_ISR 123C                                _EUSART2_Write 14CE  
                                       _Step 0E62                                _EUSART4_Write 155E  
                                       _main 09E8                                ?_EUSART2_Read 0001  
                                       btemp 003F                                _INT3_CallBack 12FE  
          __size_of_INT2_SetInterruptHandler 000E                    ?_INT2_SetInterruptHandler 000D  
                                       prodh 000FF4                                         prodl 000FF3  
                                       start 09E4                   ??_TMR4_SetInterruptHandler 0010  
                               ___param_bank 000000                                 _stepperSleep 147A  
                   __size_ofi2_EUSART2_Write 0018                      __end_of_PWM2_Initialize 15DE  
                    __end_of_TMR0_Initialize 140E                             __end_of_INT0_ISR 169C  
                           __end_of_INT1_ISR 1692                             __end_of_INT2_ISR 1688  
                           __end_of_INT3_ISR 167E               ??_TMR0_DefaultInterruptHandler 0001  
             __size_of_OSCILLATOR_Initialize 0018                __end_of_OSCILLATOR_Initialize 14FE  
                                      ?_Step 0013                                        _ADACQ 000F5C  
                                      _ADCAP 000F5D                                        _ADACT 000F56  
                                      ?_main 0001                                        _ADCLK 000F57  
                                      _ADCNT 000F67                                        _ADPCH 000F5F  
                                      _ADREF 000F58           set_INTERRUPT_STEPPER_BREAK_FLAG@in 000D  
       i2set_INTERRUPT_STEPPER_BREAK_FLAG@in 0001                                        _ADPRE 000F5E  
                                      _ADRPT 000F66                                        _T4CON 000FB7  
                                      _T4HLT 000FB8                                        _T4TMR 000FB5  
                                      i2l232 13B8                                        i2l330 16C6  
                                      _T4RST 000FBA                                        i2l511 16B6  
                                      i2l272 1434                                        i2l505 16AA  
                                      i2l441 12FC                                        i2l521 08BC  
                                      i2l282 155C                                        i2l274 1444  
                                      i2l266 15B6                                        i2l363 13E4  
                                      i2l276 1458                                        i2l437 1672  
                                      i2l373 165C                                        i2l702 1686  
                                      i2l279 1548                                        i2l447 16C8  
                                      i2l367 12CC                                        i2l391 138A  
                                      i2l712 16CC                                        i2l640 0986  
                                      i2l632 08FC                                        i2l706 135C  
                                      i2l715 167C                                        i2l643 09B8  
                                      i2l635 093E                                        i2l900 123A  
                                      i2l636 093A                                        i2l725 16CA  
                                      i2l638 0962                                        i2l719 132C  
                                      i2l647 09D8                                        i2l824 15CA  
                                      i2l680 1206                                        i2l906 1054  
                                      i2l818 1668                                        i2l676 169A  
                                      i2l693 11CC                                        i2l686 16D0  
                                      i2l689 1690                                        i2l699 16CE  
                                      _OSCEN 000E47                                        _TMR0H 000FD4  
                                      _TMR0L 000FD3                                        _TRISA 000F81  
                                      _TRISB 000F82                               ?_INT0_CallBack 0001  
                                      _TRISC 000F83                                        _TRISD 000F84  
                                      _TRISE 000F85                                        _TRISF 000F86  
                                      _TRISG 000F87                                        _TRISH 000F88  
          __size_of_TMR0_SetInterruptHandler 000E                              _TMR4_Initialize 126E  
                  ?_TMR0_SetInterruptHandler 000D                             __end_of_TMR0_ISR 1674  
                                      _Pumps 0036                             __end_of_TMR4_ISR 13E6  
                             ?_INT1_CallBack 0001               ??_INT1_DefaultInterruptHandler 0001  
                             ??_inchForwards 001A                        ?_ADCC_StartConversion 0001  
                                ?_TMR4_Start 0001                               ?_INT2_CallBack 0001  
                   _INT1_SetInterruptHandler 1628                               ?_EUSART2_Write 0001  
                                      pclath 000FFA                               ?_EUSART4_Write 0001  
                             stepperSleep@in 000D                               ??_EUSART2_Read 0001  
                                      ttemp5 0040                                        ttemp6 0043  
                                      ttemp7 0047                               ?_INT3_CallBack 0001  
                                      status 000FD8                                        wtemp8 0040  
                        _get_interruptAction 16C0                              __initialization 1576  
                               __end_of_Step 0F08                                 __end_of_main 0C30  
                ?_INTERRUPT_InterruptManager 0001                              ??_inchBackwards 001A  
                                     ??_Step 0016                                       ??_main 001F  
                   __size_of_stepperIsAsleep 0018                         ?_get_interruptAction 0001  
                              __activetblptr 000003                                       _ADACCH 000F71  
                                     _ADACCL 000F70                   __end_of_EUSART2_Initialize 152E  
                                     _ADCON0 000F60                                       _ADCON1 000F59  
                                     _ADCON2 000F5A                                       _ADCON3 000F5B  
                               ?_setPump1PWM 0003                                 ?_setPump2PWM 0003  
                                     _ADERRH 000F6F                                       _ADERRL 000F6E  
                                     _ADLTHH 000F6B                                       _ADLTHL 000F6A  
                                     _ADRESH 000F64                                       _ADRESL 000F63  
                                     _CCPR1H 000FAA                                       _CCPR2H 000FA6  
                                     _CCPR1L 000FA9                                       _CCPR2L 000FA5  
                                     _ADSTAT 000F65                                       _ADUTHH 000F6D  
                                     _ADUTHL 000F6C                                       _ANSELA 000E92  
                                     _ANSELB 000E9A                                       _ANSELD 000EA7  
                                     _ANSELE 000EAF                                       _ANSELF 000EB4  
                                     _ANSELG 000EBC                                       _T0CON0 000FD5  
                                     _T0CON1 000FD6                                       _RC2REG 000EF1  
                                     _RC4REG 000EE3                                       _RC2STA 000EF5  
                                     _RB6PPS 000E60                                       _RE0PPS 000E72  
                                     _RC4STA 000EE7                             ?_PWM1_Initialize 0001  
                                     _RE1PPS 000E73                                       _ODCONA 000E90  
                                     _ODCONB 000E98                                       _ODCONC 000EA0  
                                     _ODCOND 000EA5                                       _ODCONE 000EAD  
                                     _ODCONF 000EB2                                       _ODCONG 000EBA  
                                     _ODCONH 000EBF                                       i2l2011 12E2  
                                     i2l2005 129E                                       i2l1054 1544  
                                     i2l2031 1342                                       i2l2007 12B2  
                                     i2l1152 1560                                       i2l2033 12FE  
                                     i2l2009 12CE                                       i2l1155 1574  
                                     i2l2131 1452                                       i2l2035 1312  
                                     i2l2133 1456                                       i2l2125 15A2  
                                     i2l2029 132E                                       i2l3101 13B0  
                                     i2l2151 13BE                                       i2l3103 13B4  
                                     i2l3111 1366                                       i2l3201 104E  
                                     i2l2129 1434                                       i2l2153 13D8  
                                     i2l3113 1374                                       i2l2155 13DC  
                                     i2l3115 1382                                       i2l2171 153C  
                                     i2l2157 166A                                       i2l2149 13BA  
                                     i2l3117 1386                                       i2l3109 135E  
                                     i2l2191 1682                                       i2l2159 166E  
                                     i2l2193 1674                                       i2l3241 1162  
                                     i2l2177 1542                                       i2l2169 152E  
                                     i2l3401 0162                                       i2l3091 1558  
                                     i2l2195 1678                                       i2l3243 1176  
                                     i2l3251 1130                                       i2l3411 0196  
                                     i2l3403 0176                                       i2l3085 15B8  
                                     i2l3093 16A6                                       i2l3181 11EC  
                                     i2l2189 167E                                       i2l3237 114E  
                                     i2l3245 1108                                       i2l3501 0344  
                                     i2l3421 01C6                                       i2l3413 01A0  
                                     i2l3405 0180                                       i2l3341 0030  
                                     i2l3191 0FF6                                       i2l3271 1208  
                                     i2l3175 11CE                                       i2l3263 1692  
                                     i2l3183 1194                                       i2l1831 1660  
                                     i2l3095 138C                                       i2l3239 115A  
                                     i2l3247 1114                                       i2l3511 036E  
                                     i2l3503 034E                                       i2l3431 01FA  
                                     i2l3423 01D4                                       i2l3415 01A4  
                                     i2l3407 0184                                       i2l3351 0072  
                                     i2l3343 0038                                       i2l3089 1548  
                                     i2l3193 1002                                       i2l3273 120C  
                                     i2l3177 11D4                                       i2l3265 1696  
                                     i2l3185 119A                                       i2l1833 1664  
                                     i2l3097 1394                                       i2l3249 111C  
                                     i2l3601 051C                                       i2l3521 03A2  
                                     i2l3513 0372                                       i2l3505 0352  
                                     i2l3441 0224                                       i2l3433 0204  
                                     i2l3425 01D8                                       i2l3417 01B8  
                                     i2l3409 0192                                       i2l3361 00B0  
                                     i2l3353 0076                                       i2l3345 004C  
                                     i2l3337 0012                                       i2l3195 1008  
                                     i2l3275 1220                                       i2l3179 11D8  
                                     i2l3187 119E                                       i2l3267 1688  
                                     i2l1835 1666                                       i2l3099 13A2  
                                     i2l3611 0540                                       i2l3603 0520  
                                     i2l3531 03D2                                       i2l3523 03A6  
                                     i2l3515 0386                                       i2l3507 0360  
                                     i2l3451 0258                                       i2l3443 0228  
                                     i2l3435 0208                                       i2l3427 01E2  
                                     i2l3419 01C2                                       i2l3371 00DA  
                                     i2l3363 00BA                                       i2l3355 008A  
                                     i2l3347 0056                                       i2l3339 0022  
                                     i2l3197 102E                                       i2l3189 11B2  
                                     i2l3269 168C                                       i2l1837 16C4  
                                     i2l1845 1652                                       i2l3701 0918  
                                     i2l3621 0574                                       i2l3613 0554  
                                     i2l3605 052E                                       i2l3541 03F6  
                                     i2l3533 03D6                                       i2l3525 03B0  
                                     i2l3517 0390                                       i2l3509 0364  
                                     i2l3461 0288                                       i2l3453 025C  
                                     i2l3445 023C                                       i2l3437 0216  
                                     i2l3429 01E6                                       i2l3381 010E  
                                     i2l3373 00DE                                       i2l3365 00BE  
                                     i2l3357 0094                                       i2l3349 006E  
                                     i2l1871 1570                                       i2l3199 1048  
                                     i2l1847 1658                                       i2l3711 0970  
                                     i2l3703 091C                                       i2l3631 05A4  
                                     i2l3623 057E                                       i2l3615 055E  
                                     i2l3607 0532                                       i2l3551 042A  
                                     i2l3543 040A                                       i2l3535 03E4  
                                     i2l3527 03B4                                       i2l3519 0394  
                                     i2l3471 02AC                                       i2l3463 028C  
                                     i2l3455 0266                                       i2l3447 0246  
                                     i2l3439 021A                                       i2l3391 013E  
                                     i2l3383 0112                                       i2l3375 00F2  
                                     i2l3367 00CC                                       i2l3359 009C  
                                     i2l3721 09C6                                       i2l3713 097E  
                                     i2l3705 0930                                       i2l3641 05D8  
                                     i2l3633 05B2                                       i2l3625 0582  
                                     i2l3617 0562                                       i2l3609 053C  
                                     i2l3561 045A                                       i2l3553 0434  
                                     i2l3545 0414                                       i2l3537 03E8  
                                     i2l3529 03C8                                       i2l3481 02E0  
                                     i2l3473 02C0                                       i2l3465 029A  
                                     i2l3457 026A                                       i2l3449 024A  
                                     i2l3393 0142                                       i2l3385 011C  
                                     i2l3377 00FC                                       i2l3369 00D0  
                                     i2l3723 09D4                                       i2l3715 0994  
                                     i2l3707 094C                                       i2l3651 0622  
                                     i2l3643 05E2                                       i2l3635 05B6  
                                     i2l3627 0596                                       i2l3619 0570  
                                     i2l3571 048E                                       i2l3563 0468  
                                     i2l3555 0438                                       i2l3547 0418  
                                     i2l3539 03F2                                       i2l3491 0310  
                                     i2l3483 02EA                                       i2l3475 02CA  
                                     i2l3467 029E                                       i2l3459 027E  
                                     i2l3395 0150                                       i2l3387 0120  
                                     i2l3379 0100                                       i2l1869 1560  
                                     i2l1893 16B2                                       i2l3717 09A2  
                                     i2l3709 095A                                       i2l3661 0672  
                                     i2l3653 0632                                       i2l3645 05F2  
                                     i2l3637 05C0                                       i2l3629 05A0  
                                     i2l3581 04B8                                       i2l3573 0498  
                                     i2l3565 046C                                       i2l3557 044C  
                                     i2l3549 0426                                       i2l3493 031E  
                                     i2l3485 02EE                                       i2l3477 02CE  
                                     i2l3469 02A8                                       i2l3397 0154  
                                     i2l3389 0134                                       i2l3719 09B0  
                                     i2l3671 06C2                                       i2l3663 0682  
                                     i2l3655 0642                                       i2l3647 0602  
                                     i2l3639 05C4                                       i2l3591 04EC  
                                     i2l3583 04BC                                       i2l3575 049C  
                                     i2l3567 0476                                       i2l3559 0456  
                                     i2l3495 0322                                       i2l3487 0302  
                                     i2l3479 02DC                                       i2l3399 015E  
                                     i2l3681 0712                                       i2l3673 06D2  
                                     i2l3665 0692                                       i2l3657 0652  
                                     i2l3649 0612                                       i2l3593 04F0  
                                     i2l3585 04D0                                       i2l3577 04AA  
                                     i2l3569 047A                                       i2l3497 032C  
                                     i2l3489 030C                                       i2l3691 08CC  
                                     i2l3683 0722                                       i2l3675 06E2  
                                     i2l3667 06A2                                       i2l3659 0662  
                                     i2l3595 04FA                                       i2l3587 04DA  
                                     i2l3579 04AE                                       i2l3499 0330  
                                     _RG6PPS 000E88                                       i2l3693 08DA  
                                     i2l3685 0732                                       i2l3677 06F2  
                                     i2l3669 06B2                                       i2l3597 04FE  
                                     i2l3589 04DE                                       i2l3695 08DE  
                                     i2l3679 0702                                       i2l3599 0512  
                                     i2l3697 08F2                                       i2l3689 0742  
                                     i2l3699 090A                                       i2l3973 0756  
                               ?_setStepSize 0001                                       _OSCFRQ 000E49  
                                     _TX2REG 000EF2                                       i2u2_40 1570  
                                     i2u2_41 156C                                       _TX4REG 000EE4  
                                     _TX2STA 000EF6                                       _TX4STA 000EE8  
                            setDirection@dir 000D                   ??_ADCC_GetConversionResult 0003  
                               _CCPTMRS0bits 000FAD         __size_of_ADCC_SetADIInterruptHandler 000E  
                                     ___wmul 140E                          __size_of_TMR4_Start 0004  
                           ?_TMR0_Initialize 0001                             ?_PWM2_Initialize 0001  
                    __end_of_TMR4_Initialize 129E                                       clear_0 157C  
                      ??_get_interruptAction 000D                              ??_INT0_CallBack 0002  
                     inchForwards@multiplier 001D                                    ?_ADCC_ISR 0001  
                            _ADCC_Initialize 1056                            ??i2_EUSART2_Write 0001  
       __end_of_TMR4_DefaultInterruptHandler 165E        __size_of_TMR4_DefaultInterruptHandler 000C  
               _TMR4_DefaultInterruptHandler 1652                               _PMD_Initialize 14B2  
       __end_of_INT2_DefaultInterruptHandler 16CE        __size_of_INT2_DefaultInterruptHandler 0002  
               _INT2_DefaultInterruptHandler 16CC                              ??_INT1_CallBack 0002  
                           Step@stepsCounter 0018                       ??_ADCC_StartConversion 0001  
                            ??_INT2_CallBack 0001                        __end_of_TMR0_CallBack 12FE  
                            ??_EUSART2_Write 000D  ADCC_SetADIInterruptHandler@InterruptHandler 000D  
   INT3_SetInterruptHandler@InterruptHandler 000D     INT2_SetInterruptHandler@InterruptHandler 000D  
   INT1_SetInterruptHandler@InterruptHandler 000D     INT0_SetInterruptHandler@InterruptHandler 000D  
   TMR0_SetInterruptHandler@InterruptHandler 000D     TMR4_SetInterruptHandler@InterruptHandler 000D  
                 __end_of_EUSART4_Initialize 1516                              ??_EUSART4_Write 0001  
 __end_ofi2_set_INTERRUPT_STEPPER_BREAK_FLAG 16AC  __size_ofi2_set_INTERRUPT_STEPPER_BREAK_FLAG 0008  
   __end_of_get_INTERRUPT_STEPPER_BREAK_FLAG 16C0    __size_of_get_INTERRUPT_STEPPER_BREAK_FLAG 0004  
   __end_of_set_INTERRUPT_STEPPER_BREAK_FLAG 16A4    __size_of_set_INTERRUPT_STEPPER_BREAK_FLAG 0008  
         ??_set_INTERRUPT_STEPPER_BREAK_FLAG 000D           ??_get_INTERRUPT_STEPPER_BREAK_FLAG 000D  
       ??i2_set_INTERRUPT_STEPPER_BREAK_FLAG 0001          ?i2_set_INTERRUPT_STEPPER_BREAK_FLAG 0001  
          ?_set_INTERRUPT_STEPPER_BREAK_FLAG 0001            ?_get_INTERRUPT_STEPPER_BREAK_FLAG 0001  
         i2_set_INTERRUPT_STEPPER_BREAK_FLAG 16A4             _get_INTERRUPT_STEPPER_BREAK_FLAG 16BC  
           _set_INTERRUPT_STEPPER_BREAK_FLAG 169C                __size_of_INTERRUPT_Initialize 0016  
                            ??_INT3_CallBack 0001                 __size_of_EUSART2_is_rx_ready 0016  
                          _SYSTEM_Initialize 123C                                   __accesstop 0060  
                    __end_of__initialization 1582                                    ?_INT0_ISR 0001  
                                  ?_INT1_ISR 0001                                    ?_INT2_ISR 0001  
                                  ?_INT3_ISR 0001                               moveUntilZ@size 0010  
                         ?_SYSTEM_Initialize 0001                   __end_of_PWM2_LoadDutyValue 138C  
                              ___rparam_used 000001                  PWM1_LoadDutyValue@dutyValue 0001  
             __size_of_reset_interruptAction 0006                               __pcstackCOMRAM 0001  
              __end_of_reset_interruptAction 16B2                        __end_of_TMR4_CallBack 12CE  
                        ??_SYSTEM_Initialize 0010                                    ?_TMR0_ISR 0001  
                                  ?_TMR4_ISR 0001                         __end_of_inchForwards 0DB6  
                         _PWM1_LoadDutyValue 138C                       __end_of_PMD_Initialize 14CE  
                                 ??_ADCC_ISR 0009                         __end_of_EUSART2_Read 145A  
                              ?_setDirection 0001                  __size_of_EXT_INT_Initialize 0064  
                        ?_PWM1_LoadDutyValue 0001             __end_of_INT2_SetInterruptHandler 1628  
            fp__TMR4_DefaultInterruptHandler 0000                ?_TMR4_DefaultInterruptHandler 0001  
            fp__INT2_DefaultInterruptHandler 0000                ?_INT2_DefaultInterruptHandler 0001  
                ADCC_StartConversion@channel 0001                            ??_stepperIsAsleep 0001  
                  __end_of_SYSTEM_Initialize 126E                                ?i2_TMR4_Start 0001  
                   ?i2_reset_interruptAction 0001                        _INT0_InterruptHandler 002D  
                                 ??_INT0_ISR 0002                                   ??_INT1_ISR 0002  
                                 ??_INT2_ISR 0001                                   ??_INT3_ISR 0001  
                                 __pnvCOMRAM 0021                           __size_of_initPumps 0020  
                      _TMR4_InterruptHandler 0033                         ??_PWM1_LoadDutyValue 0003  
           __end_of_TMR0_SetInterruptHandler 160C                                      ?___wmul 000D  
                                 ??_TMR0_ISR 0001                                   ??_TMR4_ISR 0002  
                    __end_of_ADCC_Initialize 10B4                                      _CCP1CON 000FAB  
                                    _CCP2CON 000FA7                                      _ADFLTRH 000F73  
                                    _ADFLTRL 000F72                                      _ADPREVH 000F62  
                                    _ADPREVL 000F61                             ?_TMR4_Initialize 0001  
                                    _ADSTPTH 000F69                                      _ADSTPTL 000F68  
                             ??_setDirection 000D                              ?_PMD_Initialize 0001  
                 ??_INT1_SetInterruptHandler 0010                                      _SP2BRGH 000EF4  
                                    _SP2BRGL 000EF3                                      _SP4BRGH 000EE6  
                                    _SP4BRGL 000EE5                              setStepSize@size 000F  
                                    _OSCCON1 000E43                                      _OSCCON3 000E45  
                                    i2u10_40 12B2                                      i2u10_41 12AE  
                                    i2u20_40 1312                                      i2u12_40 12E2  
                                    i2u11_48 12B8                                      i2u20_41 130E  
                                    i2u12_41 12DE                                      i2u11_49 12CC  
                                    i2u30_40 1444                                      i2u21_48 1318  
                                    i2u13_48 12E8                                      i2u30_41 1440  
                                    i2u21_49 132C                                      i2u13_49 12FC  
                                    i2u31_40 1452                                      i2u31_41 144E  
                                    i2u32_40 13D8                                      i2u32_41 13D4  
                                    i2u33_40 153C                                      i2u33_41 1538  
                                    i2u18_40 1342                                      i2u18_41 133E  
                                    i2u19_48 1348                                      i2u19_49 135C  
                                    i2u29_40 15B4                                      i2u29_41 15AE  
                                    i2u29_46 15B6                                      _OSCTUNE 000E48  
                             ??i2_TMR4_Start 0001                                 ??_TMR4_Start 000D  
                       __size_of_setPump1PWM 0046                         __size_of_setPump2PWM 0046  
          __size_of_INT0_SetInterruptHandler 000E            __size_of_INT3_SetInterruptHandler 000E  
                  ?_INT0_SetInterruptHandler 000D                         __size_of_setStepSize 008A  
                  ?_INT3_SetInterruptHandler 000D                 _INTERRUPT_STEPPER_BREAK_FLAG 003D  
                                    __Hparam 0000                                      __Lparam 0000  
                                    Step@dir 0017                              __size_of___wmul 0026  
                                    __pcinit 1576                           __end_of_TMR4_Start 16BC  
                                    __ramtop 0E00                                      __ptext0 09E8  
                                    __ptext1 169C                                      __ptext2 16AC  
                                    __ptext3 10B4                                      __ptext4 145A  
                                    __ptext5 16B8                                      __ptext6 0D0A  
                                    __ptext7 0DB6                                      __ptext8 140E  
                                    __ptext9 0E62                            __end_of_initPumps 147A  
                      _OSCILLATOR_Initialize 14E6                                    _T4CONbits 000FB7  
                   ??_PIN_MANAGER_Initialize 000D            __size_of_TMR4_SetInterruptHandler 000E  
                  ?_TMR4_SetInterruptHandler 000D                                    _T4HLTbits 000FB8  
            __end_ofi2_reset_interruptAction 16B8                   __size_of_SYSTEM_Initialize 0032  
                      i2EUSART2_Write@txData 0001                         end_of_initialization 1582  
                   _INT2_SetInterruptHandler 161A               ??_TMR4_DefaultInterruptHandler 0002  
             ??_INT2_DefaultInterruptHandler 0001                                    _T4RSTbits 000FBA  
                                 _moveUntilZ 10B4                        __size_of_inchForwards 00AC  
                         _EUSART2_Initialize 1516                              i2_EUSART2_Write 1546  
                                    postinc0 000FEE                        __size_of_EUSART2_Read 0026  
                           ?_ADCC_Initialize 0001                          ?_EUSART2_Initialize 0001  
                        _EUSART2_is_rx_ready 15A2                     _TMR0_SetInterruptHandler 15FE  
                                  _PORTAbits 000F89                        _INT1_InterruptHandler 002A  
                                  _PORTBbits 000F8A                        __end_of_inchBackwards 0E62  
                          __size_of_ADCC_ISR 0034          __end_of_ADCC_SetADIInterruptHandler 1652  
                _ADCC_SetADIInterruptHandler 1644                                 _inchForwards 0D0A  
                       ??_EUSART2_Initialize 000D                         ?_EUSART2_is_rx_ready 0001  
              ??_ADCC_SetADIInterruptHandler 0010                                  _CCP1CONbits 000FAB  
                       __end_of_setDirection 14B2                                  _CCP2CONbits 000FA7  
                               _EUSART2_Read 1434                            __size_of_INT0_ISR 000A  
                          __size_of_INT1_ISR 000A                            __size_of_INT2_ISR 000A  
                          __size_of_INT3_ISR 000A                           _EUSART4_Initialize 14FE  
                   __size_of_PWM1_Initialize 0012                             inchForwards@size 001C  
                __end_of_get_interruptAction 16C4                 __end_of_INTERRUPT_Initialize 15A2  
                       __end_ofi2_TMR4_Start 16C8               ??_ADCC_DefaultInterruptHandler 0005  
       __end_of_INT0_DefaultInterruptHandler 16D2        __size_of_INT0_DefaultInterruptHandler 0002  
               _INT0_DefaultInterruptHandler 16D0                               __end_of___wmul 1434  
                            _stepperIsAsleep 152E                          ?_EUSART4_Initialize 0001  
                          __size_of_TMR0_ISR 000A                           _PWM2_LoadDutyValue 135E  
                          __size_of_TMR4_ISR 002C                       ?_OSCILLATOR_Initialize 0001  
          __size_of_ADCC_GetConversionResult 0014                    ?_ADCC_GetConversionResult 0001  
                      __end_of_INT0_CallBack 1208                          start_initialization 1576  
                   __size_of_PWM2_Initialize 0012                     __size_of_TMR0_Initialize 0028  
                        ?_PWM2_LoadDutyValue 0001              __size_of_PIN_MANAGER_Initialize 00DA  
       __end_of_INT3_DefaultInterruptHandler 16CC        __size_of_INT3_DefaultInterruptHandler 0002  
               _INT3_DefaultInterruptHandler 16CA                        __end_of_INT1_CallBack 11CE  
              __size_of_ADCC_StartConversion 000C                        ??_EUSART2_is_rx_ready 0001  
                      __end_of_INT2_CallBack 135E                        __end_of_EUSART2_Write 14E6  
                       ??_EUSART4_Initialize 000D                        __end_of_EUSART4_Write 1576  
                      __end_of_INT3_CallBack 132E                      __end_ofi2_EUSART2_Write 155E  
                                ?_moveUntilZ 0010                         ??_PWM2_LoadDutyValue 0003  
                PWM2_LoadDutyValue@dutyValue 0001                             ??_PMD_Initialize 000D  
                              ?_stepperSleep 0001                                     ??___wmul 0011  
                     __size_of_TMR0_CallBack 0030             __size_ofi2_reset_interruptAction 0006  
                      _reset_interruptAction 16AC                   __end_of_EXT_INT_Initialize 0FF6  
            fp__INT0_DefaultInterruptHandler 0000                ?_INT0_DefaultInterruptHandler 0001  
                              moveUntilZ@dir 0012                        TMR4_ISR@CountCallBack 003A  
                                __pbssCOMRAM 0036             __end_of_INT0_SetInterruptHandler 1644  
           __end_of_INT3_SetInterruptHandler 161A              fp__INT3_DefaultInterruptHandler 0000  
              ?_INT3_DefaultInterruptHandler 0001                          EUSART2_Write@txData 000D  
                     __size_of_TMR4_CallBack 0030                        _INT2_InterruptHandler 0027  
                      _TMR0_InterruptHandler 0030                  __size_of_PWM1_LoadDutyValue 002E  
                     _PIN_MANAGER_Initialize 0C30                      __end_of_stepperIsAsleep 1546  
                             ??_stepperSleep 000D                                    __pintcode 0008  
           __end_of_TMR4_SetInterruptHandler 15FE                            ??_PWM1_Initialize 000D  
               ??_INTERRUPT_InterruptManager 0009                                     _ADCC_ISR 1208  
                                   _BAUD2CON 000EF7                                     _BAUD4CON 000EE9  
                 ??_INT2_SetInterruptHandler 0010                          __size_of_moveUntilZ 0054  
                   __size_of_TMR4_Initialize 0030                                ??_setPump1PWM 0005  
                              ??_setPump2PWM 0005                                    _initPumps 145A  
                      __size_of_setDirection 001C                                _TMR0_CallBack 12CE  
                                   _T4CLKCON 000FB9                         _INTERRUPT_Initialize 158C  
                              ??_setStepSize 000D                            ??_TMR0_Initialize 0010  
                          ??_PWM2_Initialize 000D                                     _INT0_ISR 1692  
                                   _INT1_ISR 1688                                     _INT2_ISR 167E  
                             ___wmul@product 0011                                     _INT3_ISR 1674  
                                   _LATAbits 000F79                             ?i2_EUSART2_Write 0001  
                                   _LATCbits 000F7B                                     _LATFbits 000F7E  
                                   _LATGbits 000F7F                                     _LATHbits 000F80  
          __size_of_INT1_SetInterruptHandler 000E                      inchBackwards@multiplier 001D  
                  ?_INT1_SetInterruptHandler 000D                                     _PIE0bits 000E29  
                                   _PIE1bits 000E2A                                     _PIE3bits 000E2C  
                                   _PIE5bits 000E2E                        __size_ofi2_TMR4_Start 0004  
                                   i2u110_45 1376                                     i2u111_40 11EC  
                                   i2u111_41 11E8                                     i2u120_40 112E  
                                   i2u120_41 112A                                     i2u112_48 11F2  
                                   i2u113_40 11B2                                     i2u121_40 1142  
                                   i2u112_49 1206                                     i2u113_41 11AE  
                                   i2u121_41 113E                                     i2u106_40 1558  
                                   i2u122_40 1220                                     i2u130_40 00CC  
                                   i2u106_41 1554                                     i2u122_41 121C  
                                   i2u130_41 00C8                                     i2u114_48 11B8  
                                   i2u107_40 13A2                                     i2u131_40 00F2  
                                   i2u114_49 11CC                                     i2u107_41 139E  
                                   i2u131_41 00EE                                     i2u123_48 1226  
                                   i2u140_40 0216                                     i2u132_40 010E  
                                   i2u123_49 123A                                     i2u140_41 0212  
                                   i2u132_41 010A                                     i2u108_45 13A4  
                                   i2u109_40 1374                                     i2u141_40 023C  
                                   i2u133_40 0134                                     i2u125_40 0022  
                                   i2u109_41 1370                                     i2u141_41 0238  
                                   i2u133_41 0130                                     i2u125_41 001E  
                                   i2u118_40 1174                                     i2u150_40 0360  
                                   i2u142_40 0258                                     i2u134_40 0150  
                                   i2u126_40 0030                                     i2u118_41 1170  
                                   i2u150_41 035C                                     i2u142_41 0254  
                                   i2u134_41 014C                                     i2u126_41 002C  
                                   i2u119_40 1188                                     i2u151_40 0386  
                                   i2u143_40 027E                                     i2u135_40 0176  
                                   i2u127_40 004C                                     i2u119_41 1184  
                                   i2u151_41 0382                                     i2u143_41 027A  
                                   i2u135_41 0172                                     i2u127_41 0048  
        __size_of_INTERRUPT_InterruptManager 09DC                                     i2u160_40 04AA  
                                   i2u152_40 03A2                                     i2u144_40 029A  
                                   i2u136_40 0192                                     i2u128_40 008A  
                                   i2u160_41 04A6                                     i2u152_41 039E  
                                   i2u144_41 0296                                     i2u136_41 018E  
                                   i2u128_41 0086                                     i2u161_40 04D0  
                                   i2u153_40 03C8                                     i2u145_40 02C0  
                                   i2u137_40 01B8                                     i2u129_40 00B0  
                                   i2u161_41 04CC                                     i2u153_41 03C4  
                                   i2u145_41 02BC                                     i2u137_41 01B4  
                                   i2u129_41 00AC                                     i2u170_40 08CC  
                                   i2u162_40 04EC                                     i2u154_40 03E4  
                                   i2u146_40 02DC                                     i2u138_40 01D4  
                                   i2u170_41 08C8                                     i2u162_41 04E8  
                                   i2u154_41 03E0                                     i2u146_41 02D8  
                                   i2u138_41 01D0                                     i2u171_40 08DA  
                                   i2u163_40 0512                                     i2u155_40 040A  
                                   i2u147_40 0302                                     i2u139_40 01FA  
                                   i2u171_41 08D6                                     i2u163_41 050E  
                                   i2u155_41 0406                                     i2u147_41 02FE  
                                   i2u139_41 01F6                                     i2u180_40 0994  
                                   i2u172_40 08F2                                     i2u164_40 052E  
                                   i2u156_40 0426                                     i2u148_40 031E  
                                   i2u180_41 0990                                     i2u172_41 08EE  
                                   i2u164_41 052A                                     i2u156_41 0422  
                                   i2u148_41 031A                                     i2u181_40 09A2  
                                   i2u173_40 090A                                     i2u165_40 0554  
                                   i2u157_40 044C                                     i2u149_40 0344  
                 ??_TMR0_SetInterruptHandler 0010                                     i2u181_41 099E  
                                   i2u173_41 0906                                     i2u165_41 0550  
                                   i2u157_41 0448                                     i2u149_41 0340  
                                   i2u182_40 09B0                                     i2u174_40 0918  
                                   i2u166_40 0570                                     i2u158_40 0468  
                                   i2u182_41 09AC                                     i2u174_41 0914  
                                   i2u166_41 056C                                     i2u158_41 0464  
                                   i2u183_40 09C6                                     i2u175_40 0930  
                                   i2u167_40 0596                                     i2u159_40 048E  
                                   i2u183_41 09C2                                     i2u175_41 092C  
                                   i2u167_41 0592                                     i2u159_41 048A  
                                   _PIR0bits 000E33                                     i2u184_40 09D4  
                                   i2u176_40 094C                                     i2u168_40 05B2  
                                   i2u184_41 09D0                                     i2u176_41 0948  
                                   i2u168_41 05AE                                     i2u177_40 095A  
                                   i2u169_40 05D8                                     i2u177_41 0956  
                                   i2u169_41 05D4                                     _PIR1bits 000E34  
                                   i2u178_40 0970                                     i2u178_41 096C  
                                   i2u179_40 097E                                     i2u179_41 097A  
                                   _PIR3bits 000E36                                     _PIR4bits 000E37  
                                   _PIR5bits 000E38                       ?_reset_interruptAction 0001  
                                   _TMR0_ISR 166A                                     _TMR4_ISR 13BA  
                              _TMR4_CallBack 129E                                  _INT0PPSbits 000DF0  
                                _INT1PPSbits 000DF1                                  _INT2PPSbits 000DF2  
                                _INT3PPSbits 000DF3                                   _ADCON0bits 000F60  
                                 _ADCON1bits 000F59                                   _ADCON2bits 000F5A  
                                 _ADCON3bits 000F5B                            ___wmul@multiplier 000D  
                               _setDirection 1496               ??_INT0_DefaultInterruptHandler 0001  
                             ?_TMR0_CallBack 0001                                   ?_initPumps 0001  
                      ?_INTERRUPT_Initialize 0001                                 i2_TMR4_Start 16C4  
                   _INT0_SetInterruptHandler 1636                     _INT3_SetInterruptHandler 160C  
                        __end_of_setPump1PWM 1194                          __end_of_setPump2PWM 114E  
             ??_INT3_DefaultInterruptHandler 0001                                   _ADSTATbits 000F65  
                                   __Hrparam 0000             __end_of_ADCC_GetConversionResult 15CC  
                        __end_of_setStepSize 0F92                             ?_stepperIsAsleep 0001  
                                   __Lrparam 0000                               ?_TMR4_CallBack 0001  
                    i2_reset_interruptAction 16B2                      ??_OSCILLATOR_Initialize 000D  
                                   Step@size 0015                        _INT3_InterruptHandler 0024  
                   _TMR4_SetInterruptHandler 15F0                                   _T0CON0bits 000FD5  
                   __size_of_ADCC_Initialize 005E                         __end_of_stepperSleep 1496  
                                   __ptext10 147A                                     __ptext11 0F08  
                                   __ptext20 15FE                                     __ptext12 1496  
                                   __ptext21 15CC                                     __ptext13 16BC  
                                   __ptext30 1628                                     __ptext22 15DE  
                                   __ptext14 14CE                                     __ptext31 1636  
                                   __ptext23 14B2                                     __ptext15 16C0  
                                   __ptext40 114E                                     __ptext32 14FE  
                                   __ptext24 0C30                                     __ptext16 123C  
                                   __ptext41 138C                                     __ptext33 1516  
                                   __ptext25 14E6                                     __ptext17 126E  
                                   __ptext50 1674                                     __ptext42 13BA  
                                   __ptext34 1056                                     __ptext26 158C  
                                   __ptext18 15F0                                     __ptext51 12FE  
                                   __ptext43 129E                                     __ptext35 1644  
                                   __ptext27 0F92                                     __ptext19 13E6  
                                   __ptext60 11CE                                     __ptext52 16CA  
                                   __ptext44 1652                                     __ptext28 160C  
                                   __ptext61 16A4                                     __ptext53 167E  
                                   __ptext45 16C4                                     __ptext37 152E  
                                   __ptext29 161A                                     __ptext70 15B8  
                                   __ptext62 16B2                                     __ptext54 132E  
                                   __ptext46 165E                                     __ptext38 1108  
                                   __ptext71 0000                                     __ptext63 16D0  
                                   __ptext55 16CC                                     __ptext47 166A  
                                   __ptext39 135E                                     __ptext64 15A2  
                                   __ptext56 1688                                     __ptext48 12CE  
                                   __ptext65 1434                                     __ptext57 1194  
                                   __ptext49 16C8                                     __ptext66 1208  
                                   __ptext58 16CE                                     __ptext67 0FF6  
                                   __ptext59 1692                                     __ptext68 1546  
                                   __ptext69 155E                  __size_of_EUSART2_Initialize 0018  
                              __size_of_Step 00A6                            ??_TMR4_Initialize 0010  
                              __size_of_main 0248                                 ??_moveUntilZ 0011  
       __end_of_TMR0_DefaultInterruptHandler 16CA        __size_of_TMR0_DefaultInterruptHandler 0002  
               _TMR0_DefaultInterruptHandler 16C8                       __size_of_inchBackwards 00AC  
                  _ADCC_ADI_InterruptHandler 0021                                   _RC2STAbits 000EF5  
               __end_of_ADCC_StartConversion 166A                                   _RC4STAbits 000EE7  
                                   int$flags 003F           __end_of_INTERRUPT_InterruptManager 09E4  
                 _INTERRUPT_InterruptManager 0008         __end_of_INT1_DefaultInterruptHandler 16D0  
      __size_of_INT1_DefaultInterruptHandler 0002                 _INT1_DefaultInterruptHandler 16CE  
               __size_of_get_interruptAction 0004                                Step@num_steps 0013  
                                 _INTCONbits 000FF2                  __end_of_EUSART2_is_rx_ready 15B8  
                            ??_TMR0_CallBack 0001                           __end_of_moveUntilZ 1108  
                     ??_INTERRUPT_Initialize 000D                                  ??_initPumps 000D  
                                _setPump1PWM 114E                                  _setPump2PWM 1108  
                         _EXT_INT_Initialize 0F92                              _interruptAction 003C  
       __end_of_ADCC_DefaultInterruptHandler 1056        __size_of_ADCC_DefaultInterruptHandler 0060  
               _ADCC_DefaultInterruptHandler 0FF6                                     intlevel2 0000  
 ADCC_DefaultInterruptHandler@convertedValue 0007                          EUSART4_Write@txData 0001  
                                _setStepSize 0F08                  __size_of_EUSART4_Initialize 0018  
                    ?_PIN_MANAGER_Initialize 0001                          ?_EXT_INT_Initialize 0001  
                            _PWM1_Initialize 15DE                    ??i2_reset_interruptAction 0001  
                            ??_TMR4_CallBack 0002                       __size_of_INT0_CallBack 003A  
            fp__TMR0_DefaultInterruptHandler 0000                ?_TMR0_DefaultInterruptHandler 0001  
                __size_of_PWM2_LoadDutyValue 002E                       __size_of_INT1_CallBack 003A  
                   _ADCC_GetConversionResult 15B8                       __size_of_INT2_CallBack 0030  
                     __size_of_EUSART2_Write 0018                       __size_of_EUSART4_Write 0018  
                       ??_EXT_INT_Initialize 0010                                   _RX2PPSbits 000E11  
                     __size_of_INT3_CallBack 0030              fp__INT1_DefaultInterruptHandler 0000  
              ?_INT1_DefaultInterruptHandler 0001                                _inchBackwards 0DB6  
                            _TMR0_Initialize 13E6                              _PWM2_Initialize 15CC  
                                 _UART_RX_in 003E             __end_of_INT1_SetInterruptHandler 1636  
                                 _TX2STAbits 000EF6                                   _TMR4_Start 16B8  
                                 _TX4STAbits 000EE8               __end_of_PIN_MANAGER_Initialize 0D0A  
                          ??_ADCC_Initialize 0010              fp__ADCC_DefaultInterruptHandler 0000  
              ?_ADCC_DefaultInterruptHandler 0001                   __end_of_PWM1_LoadDutyValue 13BA  
                    ??_reset_interruptAction 000D  
