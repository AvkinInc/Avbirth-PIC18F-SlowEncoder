

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Jun 15 09:47:46 2022

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	text42,global,reloc=2,class=CODE,delta=1
    52                           	psect	text43,global,reloc=2,class=CODE,delta=1
    53                           	psect	text44,global,reloc=2,class=CODE,delta=1
    54                           	psect	text45,global,reloc=2,class=CODE,delta=1
    55                           	psect	text46,global,reloc=2,class=CODE,delta=1
    56                           	psect	text47,global,reloc=2,class=CODE,delta=1
    57                           	psect	text48,global,reloc=2,class=CODE,delta=1
    58                           	psect	text49,global,reloc=2,class=CODE,delta=1
    59                           	psect	text50,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	text51,global,reloc=2,class=CODE,delta=1
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66  0000                     
    67                           ; Version 2.20
    68                           ; Generated 05/05/2020 GMT
    69                           ; 
    70                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F23K22 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     
   102 ;; Function _EUSART2_DefaultFramingErrorHandler is unused but had its address taken
   103  0000                     
   104 ;; Function _EUSART2_DefaultOverrunErrorHandler is unused but had its address taken
   105  0000                     
   106 ;; Function _EUSART2_DefaultErrorHandler is unused but had its address taken
   107  0000                     
   108                           	psect	nvCOMRAM
   109  00001F                     __pnvCOMRAM:
   110                           	callstack 0
   111  00001F                     _EUSART2_ErrorHandler:
   112                           	callstack 0
   113  00001F                     	ds	2
   114  000021                     _EUSART2_OverrunErrorHandler:
   115                           	callstack 0
   116  000021                     	ds	2
   117  000023                     _EUSART2_FramingErrorHandler:
   118                           	callstack 0
   119  000023                     	ds	2
   120  000025                     _INT2_InterruptHandler:
   121                           	callstack 0
   122  000025                     	ds	2
   123  000027                     _INT1_InterruptHandler:
   124                           	callstack 0
   125  000027                     	ds	2
   126  000029                     _IOCB5_InterruptHandler:
   127                           	callstack 0
   128  000029                     	ds	2
   129  0000                     _ANSELA	set	3896
   130  0000                     _ANSELB	set	3897
   131  0000                     _ANSELC	set	3898
   132  0000                     _CCPR5H	set	3926
   133  0000                     _CCPR5L	set	3925
   134  0000                     _CCP5CON	set	3924
   135  0000                     _CCPTMRS1bits	set	3912
   136  0000                     _CCPR4H	set	3929
   137  0000                     _CCPR4L	set	3928
   138  0000                     _CCP4CON	set	3927
   139  0000                     _TXREG2	set	3955
   140  0000                     _RCREG2	set	3956
   141  0000                     _RCSTA2bits	set	3953
   142  0000                     _TXSTA2bits	set	3954
   143  0000                     _SPBRGH2	set	3958
   144  0000                     _SPBRG2	set	3957
   145  0000                     _TXSTA2	set	3954
   146  0000                     _RCSTA2	set	3953
   147  0000                     _BAUDCON2	set	3952
   148  0000                     _PIR3bits	set	4004
   149  0000                     _PIE3bits	set	4003
   150  0000                     _RCONbits	set	4048
   151  0000                     _OSCTUNE	set	3995
   152  0000                     _OSCCON2	set	4050
   153  0000                     _OSCCON	set	4051
   154  0000                     _INTCON3bits	set	4080
   155  0000                     _INTCONbits	set	4082
   156  0000                     _IOCBbits	set	3938
   157  0000                     _INTCON2bits	set	4081
   158  0000                     _WPUB	set	3937
   159  0000                     _TRISC	set	3988
   160  0000                     _TRISB	set	3987
   161  0000                     _TRISA	set	3986
   162  0000                     _LATC	set	3979
   163  0000                     _LATB	set	3978
   164  0000                     _LATA	set	3977
   165  0000                     _T2CONbits	set	4026
   166  0000                     _T2CON	set	4026
   167  0000                     _PIR1bits	set	3998
   168  0000                     _TMR2	set	4028
   169  0000                     _PR2	set	4027
   170  0000                     _LATCbits	set	3979
   171  0000                     _LATBbits	set	3978
   172  0000                     _LATAbits	set	3977
   173  0000                     _PORTBbits	set	3969
   174                           
   175                           ; #config settings
   176                           
   177                           	psect	cinit
   178  000C7E                     __pcinit:
   179                           	callstack 0
   180  000C7E                     start_initialization:
   181                           	callstack 0
   182  000C7E                     __initialization:
   183                           	callstack 0
   184                           
   185                           ; Clear objects allocated to COMRAM (13 bytes)
   186  000C7E  EE00  F012         	lfsr	0,__pbssCOMRAM
   187  000C82  0E0D               	movlw	13
   188  000C84                     clear_0:
   189  000C84  6AEE               	clrf	postinc0,c
   190  000C86  06E8               	decf	wreg,f,c
   191  000C88  E1FD               	bnz	clear_0
   192  000C8A                     end_of_initialization:
   193                           	callstack 0
   194  000C8A                     __end_of__initialization:
   195                           	callstack 0
   196  000C8A  902B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   197  000C8C  922B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   198  000C8E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   199  000C90  6EF8               	movwf	tblptru,c
   200  000C92  0100               	movlb	0
   201  000C94  EF23  F003         	goto	_main	;jump to C main() function
   202                           
   203                           	psect	bssCOMRAM
   204  000012                     __pbssCOMRAM:
   205                           	callstack 0
   206  000012                     _Pumps:
   207                           	callstack 0
   208  000012                     	ds	4
   209  000016                     _uart_write:
   210                           	callstack 0
   211  000016                     	ds	2
   212  000018                     _encoder_ticks:
   213                           	callstack 0
   214  000018                     	ds	2
   215  00001A                     _eusart2RxLastError:
   216                           	callstack 0
   217  00001A                     	ds	1
   218  00001B                     _interruptAction:
   219                           	callstack 0
   220  00001B                     	ds	1
   221  00001C                     _INTERRUPT_STEPPER_BREAK_FLAG:
   222                           	callstack 0
   223  00001C                     	ds	1
   224  00001D                     _UART_RX_in:
   225                           	callstack 0
   226  00001D                     	ds	1
   227  00001E                     _WAS_LOW_LAST_TIME:
   228                           	callstack 0
   229  00001E                     	ds	1
   230                           
   231                           	psect	cstackCOMRAM
   232  000001                     __pcstackCOMRAM:
   233                           	callstack 0
   234  000001                     i2set_INTERRUPT_STEPPER_BREAK_FLAG@in:
   235                           	callstack 0
   236  000001                     i2EUSART2_Write@txData:
   237                           	callstack 0
   238  000001                     PWM4_LoadDutyValue@dutyValue:
   239                           	callstack 0
   240  000001                     PWM5_LoadDutyValue@dutyValue:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0x0
   244  000001                     	ds	1
   245  000002                     ??_encoder_IOC:
   246  000002                     
   247                           ; 1 bytes @ 0x1
   248  000002                     	ds	1
   249  000003                     ??_PWM4_LoadDutyValue:
   250  000003                     ??_PWM5_LoadDutyValue:
   251                           
   252                           ; 1 bytes @ 0x2
   253  000003                     	ds	1
   254  000004                     
   255                           ; 1 bytes @ 0x3
   256  000004                     	ds	1
   257  000005                     setBloodPumpPWM@pwm:
   258                           	callstack 0
   259  000005                     setAmnioticPumpPWM@pwm:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0x4
   263  000005                     	ds	2
   264  000007                     ??_INTERRUPT_InterruptManager:
   265                           
   266                           ; 1 bytes @ 0x6
   267  000007                     	ds	4
   268  00000B                     ??_setStepSize:
   269  00000B                     set_INTERRUPT_STEPPER_BREAK_FLAG@in:
   270                           	callstack 0
   271  00000B                     EUSART2_Write@txData:
   272                           	callstack 0
   273  00000B                     stepperSleep@in:
   274                           	callstack 0
   275  00000B                     setDirection@dir:
   276                           	callstack 0
   277  00000B                     IOCB5_SetInterruptHandler@InterruptHandler:
   278                           	callstack 0
   279  00000B                     INT1_SetInterruptHandler@InterruptHandler:
   280                           	callstack 0
   281  00000B                     INT2_SetInterruptHandler@InterruptHandler:
   282                           	callstack 0
   283  00000B                     EUSART2_SetFramingErrorHandler@interruptHandler:
   284                           	callstack 0
   285  00000B                     EUSART2_SetOverrunErrorHandler@interruptHandler:
   286                           	callstack 0
   287  00000B                     EUSART2_SetErrorHandler@interruptHandler:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0xA
   291  00000B                     	ds	1
   292  00000C                     ??_send_number:
   293                           
   294                           ; 1 bytes @ 0xB
   295  00000C                     	ds	1
   296  00000D                     ??_update_PIC18F_software_version_number:
   297  00000D                     setStepSize@size:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0xC
   301  00000D                     	ds	1
   302  00000E                     moveUntilZ@size:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0xD
   306  00000E                     	ds	1
   307  00000F                     update_PIC18F_software_version_number@numTimes:
   308                           	callstack 0
   309  00000F                     moveUntilZ@dir:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0xE
   313  00000F                     	ds	1
   314  000010                     ??_main:
   315                           
   316                           ; 1 bytes @ 0xF
   317  000010                     	ds	2
   318                           
   319 ;;
   320 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   321 ;;
   322 ;; *************** function _main *****************
   323 ;; Defined at:
   324 ;;		line 55 in file "main.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;		None
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      void 
   331 ;; Registers used:
   332 ;;		wreg, status,2, status,0, cstack
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMRAM   BANK0   BANK1
   338 ;;      Params:         0       0       0
   339 ;;      Locals:         0       0       0
   340 ;;      Temps:          2       0       0
   341 ;;      Totals:         2       0       0
   342 ;;Total ram usage:        2 bytes
   343 ;; Hardware stack levels required when called:    8
   344 ;; This function calls:
   345 ;;		_SYSTEM_Initialize
   346 ;;		_get_interruptAction
   347 ;;		_initPumps
   348 ;;		_moveUntilZ
   349 ;;		_reset_interruptAction
   350 ;;		_set_INTERRUPT_STEPPER_BREAK_FLAG
   351 ;;		_stepperSleep
   352 ;;		_update_PIC18F_software_version_number
   353 ;; This function is called by:
   354 ;;		Startup code after reset
   355 ;; This function uses a non-reentrant model
   356 ;;
   357                           
   358                           	psect	text0
   359  000646                     __ptext0:
   360                           	callstack 0
   361  000646                     _main:
   362                           	callstack 23
   363  000646                     
   364                           ;main.c: 58:     SYSTEM_Initialize();
   365  000646  EC12  F006         	call	_SYSTEM_Initialize	;wreg free
   366  00064A                     
   367                           ;main.c: 60:     (INTCONbits.GIE = 0);
   368  00064A  9EF2               	bcf	242,7,c	;volatile
   369  00064C                     
   370                           ;main.c: 62:     initPumps();
   371  00064C  EC4C  F006         	call	_initPumps	;wreg free
   372  000650                     
   373                           ;main.c: 65:     INTCON2bits.RBPU = 0;
   374  000650  9EF1               	bcf	241,7,c	;volatile
   375  000652                     
   376                           ;main.c: 72:     stepperSleep(1);
   377  000652  0E01               	movlw	1
   378  000654  EC23  F006         	call	_stepperSleep
   379  000658                     
   380                           ;main.c: 74:     _delay((unsigned long)((100)*(8000000/4000.0)));
   381  000658  0E02               	movlw	2
   382  00065A  6E11               	movwf	(??_main+1)^0,c
   383  00065C  0E04               	movlw	4
   384  00065E  6E10               	movwf	??_main^0,c
   385  000660  0EBA               	movlw	186
   386  000662                     u1117:
   387  000662  2EE8               	decfsz	wreg,f,c
   388  000664  D7FE               	bra	u1117
   389  000666  2E10               	decfsz	??_main^0,f,c
   390  000668  D7FC               	bra	u1117
   391  00066A  2E11               	decfsz	(??_main+1)^0,f,c
   392  00066C  D7FA               	bra	u1117
   393  00066E  D000               	nop2	
   394  000670                     
   395                           ;main.c: 75:     update_PIC18F_software_version_number();
   396  000670  ECD6  F005         	call	_update_PIC18F_software_version_number	;wreg free
   397  000674                     
   398                           ;main.c: 82:     (INTCONbits.GIE = 1);
   399  000674  8EF2               	bsf	242,7,c	;volatile
   400  000676                     
   401                           ;main.c: 88:     (INTCONbits.PEIE = 1);
   402  000676  8CF2               	bsf	242,6,c	;volatile
   403  000678  EFB6  F003         	goto	l2638
   404  00067C                     l2576:
   405                           
   406                           ;main.c: 99:                 reset_interruptAction();
   407  00067C  ECF1  F006         	call	_reset_interruptAction	;wreg free
   408  000680                     
   409                           ;main.c: 100:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   410  000680  0E00               	movlw	0
   411  000682  ECE1  F006         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   412  000686                     
   413                           ;main.c: 101:                 moveUntilZ(FORWARDS, Full);
   414  000686  0E01               	movlw	1
   415  000688  6E0E               	movwf	moveUntilZ@size^0,c
   416  00068A  0E00               	movlw	0
   417  00068C  EC5A  F005         	call	_moveUntilZ
   418                           
   419                           ;main.c: 102:                 break;
   420  000690  EFB6  F003         	goto	l2638
   421  000694                     l2582:
   422                           
   423                           ;main.c: 104:                 reset_interruptAction();
   424  000694  ECF1  F006         	call	_reset_interruptAction	;wreg free
   425  000698                     
   426                           ;main.c: 105:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   427  000698  0E00               	movlw	0
   428  00069A  ECE1  F006         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   429  00069E                     
   430                           ;main.c: 106:                 moveUntilZ(BACKWARDS, Full);
   431  00069E  0E01               	movlw	1
   432  0006A0  6E0E               	movwf	moveUntilZ@size^0,c
   433  0006A2  0E01               	movlw	1
   434  0006A4  EC5A  F005         	call	_moveUntilZ
   435                           
   436                           ;main.c: 107:                 break;
   437  0006A8  EFB6  F003         	goto	l2638
   438  0006AC                     l2588:
   439                           
   440                           ;main.c: 109:                 reset_interruptAction();
   441  0006AC  ECF1  F006         	call	_reset_interruptAction	;wreg free
   442  0006B0                     
   443                           ;main.c: 110:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   444  0006B0  0E00               	movlw	0
   445  0006B2  ECE1  F006         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   446  0006B6                     
   447                           ;main.c: 111:                 moveUntilZ(FORWARDS, Half);
   448  0006B6  0E02               	movlw	2
   449  0006B8  6E0E               	movwf	moveUntilZ@size^0,c
   450  0006BA  0E00               	movlw	0
   451  0006BC  EC5A  F005         	call	_moveUntilZ
   452                           
   453                           ;main.c: 112:                 break;
   454  0006C0  EFB6  F003         	goto	l2638
   455  0006C4                     l2594:
   456                           
   457                           ;main.c: 114:                 reset_interruptAction();
   458  0006C4  ECF1  F006         	call	_reset_interruptAction	;wreg free
   459  0006C8                     
   460                           ;main.c: 115:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   461  0006C8  0E00               	movlw	0
   462  0006CA  ECE1  F006         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   463  0006CE                     
   464                           ;main.c: 116:                 moveUntilZ(BACKWARDS, Half);
   465  0006CE  0E02               	movlw	2
   466  0006D0  6E0E               	movwf	moveUntilZ@size^0,c
   467  0006D2  0E01               	movlw	1
   468  0006D4  EC5A  F005         	call	_moveUntilZ
   469                           
   470                           ;main.c: 117:                 break;
   471  0006D8  EFB6  F003         	goto	l2638
   472  0006DC                     l2600:
   473                           
   474                           ;main.c: 119:                 reset_interruptAction();
   475  0006DC  ECF1  F006         	call	_reset_interruptAction	;wreg free
   476  0006E0                     
   477                           ;main.c: 120:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   478  0006E0  0E00               	movlw	0
   479  0006E2  ECE1  F006         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   480  0006E6                     
   481                           ;main.c: 121:                 moveUntilZ(FORWARDS, Quarter);
   482  0006E6  0E04               	movlw	4
   483  0006E8  6E0E               	movwf	moveUntilZ@size^0,c
   484  0006EA  0E00               	movlw	0
   485  0006EC  EC5A  F005         	call	_moveUntilZ
   486                           
   487                           ;main.c: 122:                 break;
   488  0006F0  EFB6  F003         	goto	l2638
   489  0006F4                     l2606:
   490                           
   491                           ;main.c: 124:                 reset_interruptAction();
   492  0006F4  ECF1  F006         	call	_reset_interruptAction	;wreg free
   493  0006F8                     
   494                           ;main.c: 125:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   495  0006F8  0E00               	movlw	0
   496  0006FA  ECE1  F006         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   497  0006FE                     
   498                           ;main.c: 126:                 moveUntilZ(BACKWARDS, Quarter);
   499  0006FE  0E04               	movlw	4
   500  000700  6E0E               	movwf	moveUntilZ@size^0,c
   501  000702  0E01               	movlw	1
   502  000704  EC5A  F005         	call	_moveUntilZ
   503                           
   504                           ;main.c: 127:                 break;
   505  000708  EFB6  F003         	goto	l2638
   506  00070C                     l2612:
   507                           
   508                           ;main.c: 129:                 reset_interruptAction();
   509  00070C  ECF1  F006         	call	_reset_interruptAction	;wreg free
   510  000710                     
   511                           ;main.c: 130:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   512  000710  0E00               	movlw	0
   513  000712  ECE1  F006         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   514  000716                     
   515                           ;main.c: 131:                 moveUntilZ(FORWARDS, Eighth);
   516  000716  0E08               	movlw	8
   517  000718  6E0E               	movwf	moveUntilZ@size^0,c
   518  00071A  0E00               	movlw	0
   519  00071C  EC5A  F005         	call	_moveUntilZ
   520                           
   521                           ;main.c: 132:                 break;
   522  000720  EFB6  F003         	goto	l2638
   523  000724                     l2618:
   524                           
   525                           ;main.c: 134:                 reset_interruptAction();
   526  000724  ECF1  F006         	call	_reset_interruptAction	;wreg free
   527  000728                     
   528                           ;main.c: 135:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   529  000728  0E00               	movlw	0
   530  00072A  ECE1  F006         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   531  00072E                     
   532                           ;main.c: 136:                 moveUntilZ(BACKWARDS, Eighth);
   533  00072E  0E08               	movlw	8
   534  000730  6E0E               	movwf	moveUntilZ@size^0,c
   535  000732  0E01               	movlw	1
   536  000734  EC5A  F005         	call	_moveUntilZ
   537                           
   538                           ;main.c: 137:                 break;
   539  000738  EFB6  F003         	goto	l2638
   540  00073C                     l2624:
   541                           
   542                           ;main.c: 139:                 reset_interruptAction();
   543  00073C  ECF1  F006         	call	_reset_interruptAction	;wreg free
   544  000740                     
   545                           ;main.c: 140:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   546  000740  0E00               	movlw	0
   547  000742  ECE1  F006         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   548  000746                     
   549                           ;main.c: 141:                 moveUntilZ(FORWARDS, Sixteenth);
   550  000746  0E10               	movlw	16
   551  000748  6E0E               	movwf	moveUntilZ@size^0,c
   552  00074A  0E00               	movlw	0
   553  00074C  EC5A  F005         	call	_moveUntilZ
   554                           
   555                           ;main.c: 142:                 break;
   556  000750  EFB6  F003         	goto	l2638
   557  000754                     l2630:
   558                           
   559                           ;main.c: 144:                 reset_interruptAction();
   560  000754  ECF1  F006         	call	_reset_interruptAction	;wreg free
   561  000758                     
   562                           ;main.c: 145:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   563  000758  0E00               	movlw	0
   564  00075A  ECE1  F006         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   565  00075E                     
   566                           ;main.c: 146:                 moveUntilZ(BACKWARDS, Sixteenth);
   567  00075E  0E10               	movlw	16
   568  000760  6E0E               	movwf	moveUntilZ@size^0,c
   569  000762  0E01               	movlw	1
   570  000764  EC5A  F005         	call	_moveUntilZ
   571                           
   572                           ;main.c: 147:                 break;
   573  000768  EFB6  F003         	goto	l2638
   574  00076C                     l590:
   575  00076C                     l2638:
   576  00076C  ECFB  F006         	call	_get_interruptAction	;wreg free
   577  000770  6E10               	movwf	??_main^0,c
   578  000772  6A11               	clrf	(??_main+1)^0,c
   579                           
   580                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   581                           ; Switch size 1, requested type "simple"
   582                           ; Number of cases is 1, Range of values is 0 to 0
   583                           ; switch strategies available:
   584                           ; Name         Instructions Cycles
   585                           ; simple_byte            4     3 (average)
   586                           ;	Chosen strategy is simple_byte
   587  000774  5011               	movf	(??_main+1)^0,w,c
   588  000776  0A00               	xorlw	0	; case 0
   589  000778  B4D8               	btfsc	status,2,c
   590  00077A  EFC1  F003         	goto	l2704
   591  00077E  EFB6  F003         	goto	l590
   592  000782                     l2704:
   593                           
   594                           ; Switch size 1, requested type "simple"
   595                           ; Number of cases is 10, Range of values is 2 to 11
   596                           ; switch strategies available:
   597                           ; Name         Instructions Cycles
   598                           ; simple_byte           31    16 (average)
   599                           ;	Chosen strategy is simple_byte
   600  000782  5010               	movf	??_main^0,w,c
   601  000784  0A02               	xorlw	2	; case 2
   602  000786  B4D8               	btfsc	status,2,c
   603  000788  EF3E  F003         	goto	l2576
   604  00078C  0A01               	xorlw	1	; case 3
   605  00078E  B4D8               	btfsc	status,2,c
   606  000790  EF4A  F003         	goto	l2582
   607  000794  0A07               	xorlw	7	; case 4
   608  000796  B4D8               	btfsc	status,2,c
   609  000798  EF56  F003         	goto	l2588
   610  00079C  0A01               	xorlw	1	; case 5
   611  00079E  B4D8               	btfsc	status,2,c
   612  0007A0  EF62  F003         	goto	l2594
   613  0007A4  0A03               	xorlw	3	; case 6
   614  0007A6  B4D8               	btfsc	status,2,c
   615  0007A8  EF6E  F003         	goto	l2600
   616  0007AC  0A01               	xorlw	1	; case 7
   617  0007AE  B4D8               	btfsc	status,2,c
   618  0007B0  EF7A  F003         	goto	l2606
   619  0007B4  0A0F               	xorlw	15	; case 8
   620  0007B6  B4D8               	btfsc	status,2,c
   621  0007B8  EF86  F003         	goto	l2612
   622  0007BC  0A01               	xorlw	1	; case 9
   623  0007BE  B4D8               	btfsc	status,2,c
   624  0007C0  EF92  F003         	goto	l2618
   625  0007C4  0A03               	xorlw	3	; case 10
   626  0007C6  B4D8               	btfsc	status,2,c
   627  0007C8  EF9E  F003         	goto	l2624
   628  0007CC  0A01               	xorlw	1	; case 11
   629  0007CE  B4D8               	btfsc	status,2,c
   630  0007D0  EFAA  F003         	goto	l2630
   631  0007D4  EFB6  F003         	goto	l590
   632  0007D8  EF21  F003         	goto	start
   633  0007DC                     __end_of_main:
   634                           	callstack 0
   635                           
   636 ;; *************** function _update_PIC18F_software_version_number *****************
   637 ;; Defined at:
   638 ;;		line 155 in file "main.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;		None
   641 ;; Auto vars:     Size  Location     Type
   642 ;;  numTimes        1   14[COMRAM] unsigned char 
   643 ;; Return value:  Size  Location     Type
   644 ;;                  1    wreg      void 
   645 ;; Registers used:
   646 ;;		wreg, status,2, cstack
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMRAM   BANK0   BANK1
   652 ;;      Params:         0       0       0
   653 ;;      Locals:         1       0       0
   654 ;;      Temps:          2       0       0
   655 ;;      Totals:         3       0       0
   656 ;;Total ram usage:        3 bytes
   657 ;; Hardware stack levels used:    1
   658 ;; Hardware stack levels required when called:    7
   659 ;; This function calls:
   660 ;;		_send_number
   661 ;; This function is called by:
   662 ;;		_main
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           	psect	text1
   667  000BAC                     __ptext1:
   668                           	callstack 0
   669  000BAC                     _update_PIC18F_software_version_number:
   670                           	callstack 23
   671  000BAC                     
   672                           ;main.c: 156:     (INTCONbits.GIE = 0);
   673  000BAC  9EF2               	bcf	242,7,c	;volatile
   674  000BAE                     
   675                           ;main.c: 157:     char numTimes = 4;
   676  000BAE  0E04               	movlw	4
   677  000BB0  6E0F               	movwf	update_PIC18F_software_version_number@numTimes^0,c
   678  000BB2                     l1642:
   679                           
   680                           ;main.c: 160:     send_number();
   681  000BB2  ECBF  F005         	call	_send_number	;wreg free
   682  000BB6                     
   683                           ;main.c: 161:     _delay((unsigned long)((300)*(8000000/4000.0)));
   684  000BB6  0E04               	movlw	4
   685  000BB8  6E0E               	movwf	(??_update_PIC18F_software_version_number+1)^0,c
   686  000BBA  0E0C               	movlw	12
   687  000BBC  6E0D               	movwf	??_update_PIC18F_software_version_number^0,c
   688  000BBE  0E34               	movlw	52
   689  000BC0                     u1127:
   690  000BC0  2EE8               	decfsz	wreg,f,c
   691  000BC2  D7FE               	bra	u1127
   692  000BC4  2E0D               	decfsz	??_update_PIC18F_software_version_number^0,f,c
   693  000BC6  D7FC               	bra	u1127
   694  000BC8  2E0E               	decfsz	(??_update_PIC18F_software_version_number+1)^0,f,c
   695  000BCA  D7FA               	bra	u1127
   696  000BCC                     
   697                           ;main.c: 162:     if(--numTimes == 0){
   698  000BCC  2E0F               	decfsz	update_PIC18F_software_version_number@numTimes^0,f,c
   699  000BCE  EFD9  F005         	goto	l1642
   700  000BD2                     
   701                           ;main.c: 165:         (INTCONbits.GIE = 1);
   702  000BD2  8EF2               	bsf	242,7,c	;volatile
   703  000BD4  0012               	return		;funcret
   704  000BD6                     __end_of_update_PIC18F_software_version_number:
   705                           	callstack 0
   706                           
   707 ;; *************** function _send_number *****************
   708 ;; Defined at:
   709 ;;		line 172 in file "main.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;		None
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMRAM   BANK0   BANK1
   723 ;;      Params:         0       0       0
   724 ;;      Locals:         0       0       0
   725 ;;      Temps:          1       0       0
   726 ;;      Totals:         1       0       0
   727 ;;Total ram usage:        1 bytes
   728 ;; Hardware stack levels used:    1
   729 ;; Hardware stack levels required when called:    6
   730 ;; This function calls:
   731 ;;		_EUSART2_Write
   732 ;; This function is called by:
   733 ;;		_update_PIC18F_software_version_number
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           	psect	text2
   738  000B7E                     __ptext2:
   739                           	callstack 0
   740  000B7E                     _send_number:
   741                           	callstack 23
   742  000B7E                     
   743                           ;main.c: 173:     EUSART2_Write(0xEB);
   744  000B7E  0EEB               	movlw	235
   745  000B80  EC65  F006         	call	_EUSART2_Write
   746  000B84                     
   747                           ;main.c: 174:     _delay((unsigned long)((10)*(8000000/4000.0)));
   748  000B84  0E1A               	movlw	26
   749  000B86  6E0C               	movwf	??_send_number^0,c
   750  000B88  0EF8               	movlw	248
   751  000B8A                     u1137:
   752  000B8A  2EE8               	decfsz	wreg,f,c
   753  000B8C  D7FE               	bra	u1137
   754  000B8E  2E0C               	decfsz	??_send_number^0,f,c
   755  000B90  D7FC               	bra	u1137
   756  000B92  D000               	nop2	
   757  000B94                     
   758                           ;main.c: 175:     EUSART2_Write(4);
   759  000B94  0E04               	movlw	4
   760  000B96  EC65  F006         	call	_EUSART2_Write
   761                           
   762                           ;main.c: 176:     _delay((unsigned long)((10)*(8000000/4000.0)));
   763  000B9A  0E1A               	movlw	26
   764  000B9C  6E0C               	movwf	??_send_number^0,c
   765  000B9E  0EF8               	movlw	248
   766  000BA0                     u1147:
   767  000BA0  2EE8               	decfsz	wreg,f,c
   768  000BA2  D7FE               	bra	u1147
   769  000BA4  2E0C               	decfsz	??_send_number^0,f,c
   770  000BA6  D7FC               	bra	u1147
   771  000BA8  D000               	nop2	
   772  000BAA  0012               	return		;funcret
   773  000BAC                     __end_of_send_number:
   774                           	callstack 0
   775                           
   776 ;; *************** function _EUSART2_Write *****************
   777 ;; Defined at:
   778 ;;		line 132 in file "mcc_generated_files/eusart2.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  txData          1    wreg     unsigned char 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;  txData          1   10[COMRAM] unsigned char 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK0   BANK1
   792 ;;      Params:         0       0       0
   793 ;;      Locals:         1       0       0
   794 ;;      Temps:          0       0       0
   795 ;;      Totals:         1       0       0
   796 ;;Total ram usage:        1 bytes
   797 ;; Hardware stack levels used:    1
   798 ;; Hardware stack levels required when called:    5
   799 ;; This function calls:
   800 ;;		Nothing
   801 ;; This function is called by:
   802 ;;		_send_number
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           	psect	text3
   807  000CCA                     __ptext3:
   808                           	callstack 0
   809  000CCA                     _EUSART2_Write:
   810                           	callstack 23
   811                           
   812                           ;incstack = 0
   813                           ;EUSART2_Write@txData stored from wreg
   814  000CCA  6E0B               	movwf	EUSART2_Write@txData^0,c
   815  000CCC                     l537:
   816                           
   817                           ;mcc_generated_files/eusart2.c: 134:     while(0 == PIR3bits.TX2IF)
   818  000CCC  A8A4               	btfss	164,4,c	;volatile
   819  000CCE  EF6B  F006         	goto	u31
   820  000CD2  EF6D  F006         	goto	u30
   821  000CD6                     u31:
   822  000CD6  EF66  F006         	goto	l537
   823  000CDA                     u30:
   824  000CDA                     
   825                           ;mcc_generated_files/eusart2.c: 138:     TXREG2 = txData;
   826  000CDA  C00B  FF73         	movff	EUSART2_Write@txData,3955	;volatile
   827  000CDE  0012               	return		;funcret
   828  000CE0                     __end_of_EUSART2_Write:
   829                           	callstack 0
   830                           
   831 ;; *************** function _set_INTERRUPT_STEPPER_BREAK_FLAG *****************
   832 ;; Defined at:
   833 ;;		line 70 in file "mcc_generated_files/interrupt_manager.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;  in              1    wreg     _Bool 
   836 ;; Auto vars:     Size  Location     Type
   837 ;;  in              1   10[COMRAM] _Bool 
   838 ;; Return value:  Size  Location     Type
   839 ;;                  1    wreg      void 
   840 ;; Registers used:
   841 ;;		wreg
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMRAM   BANK0   BANK1
   847 ;;      Params:         0       0       0
   848 ;;      Locals:         1       0       0
   849 ;;      Temps:          0       0       0
   850 ;;      Totals:         1       0       0
   851 ;;Total ram usage:        1 bytes
   852 ;; Hardware stack levels used:    1
   853 ;; Hardware stack levels required when called:    5
   854 ;; This function calls:
   855 ;;		Nothing
   856 ;; This function is called by:
   857 ;;		_main
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           	psect	text4
   862  000DC2                     __ptext4:
   863                           	callstack 0
   864  000DC2                     _set_INTERRUPT_STEPPER_BREAK_FLAG:
   865                           	callstack 25
   866                           
   867                           ;incstack = 0
   868                           ;set_INTERRUPT_STEPPER_BREAK_FLAG@in stored from wreg
   869  000DC2  6E0B               	movwf	set_INTERRUPT_STEPPER_BREAK_FLAG@in^0,c
   870  000DC4                     
   871                           ;mcc_generated_files/interrupt_manager.c: 71:     INTERRUPT_STEPPER_BREAK_FLAG = in;
   872  000DC4  C00B  F01C         	movff	set_INTERRUPT_STEPPER_BREAK_FLAG@in,_INTERRUPT_STEPPER_BREAK_FLAG	;volatile
   873  000DC8  0012               	return		;funcret
   874  000DCA                     __end_of_set_INTERRUPT_STEPPER_BREAK_FLAG:
   875                           	callstack 0
   876                           
   877 ;; *************** function _reset_interruptAction *****************
   878 ;; Defined at:
   879 ;;		line 78 in file "mcc_generated_files/interrupt_manager.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;		None
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		wreg, status,2
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMRAM   BANK0   BANK1
   893 ;;      Params:         0       0       0
   894 ;;      Locals:         0       0       0
   895 ;;      Temps:          0       0       0
   896 ;;      Totals:         0       0       0
   897 ;;Total ram usage:        0 bytes
   898 ;; Hardware stack levels used:    1
   899 ;; Hardware stack levels required when called:    5
   900 ;; This function calls:
   901 ;;		Nothing
   902 ;; This function is called by:
   903 ;;		_main
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           	psect	text5
   908  000DE2                     __ptext5:
   909                           	callstack 0
   910  000DE2                     _reset_interruptAction:
   911                           	callstack 25
   912  000DE2                     
   913                           ;mcc_generated_files/interrupt_manager.c: 79:     interruptAction = NULL_ACTION;
   914  000DE2  0E00               	movlw	0
   915  000DE4  6E1B               	movwf	_interruptAction^0,c	;volatile
   916  000DE6  0012               	return		;funcret
   917  000DE8                     __end_of_reset_interruptAction:
   918                           	callstack 0
   919                           
   920 ;; *************** function _moveUntilZ *****************
   921 ;; Defined at:
   922 ;;		line 15 in file "step/step.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;  dir             1    wreg     enum E5841
   925 ;;  size            1   13[COMRAM] enum E5845
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  dir             1   14[COMRAM] enum E5841
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, status,2, status,0, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1
   937 ;;      Params:         1       0       0
   938 ;;      Locals:         1       0       0
   939 ;;      Temps:          0       0       0
   940 ;;      Totals:         2       0       0
   941 ;;Total ram usage:        2 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; Hardware stack levels required when called:    6
   944 ;; This function calls:
   945 ;;		_get_INTERRUPT_STEPPER_BREAK_FLAG
   946 ;;		_setDirection
   947 ;;		_setStepSize
   948 ;;		_stepperSleep
   949 ;; This function is called by:
   950 ;;		_main
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text6
   955  000AB4                     __ptext6:
   956                           	callstack 0
   957  000AB4                     _moveUntilZ:
   958                           	callstack 24
   959                           
   960                           ;incstack = 0
   961                           ;moveUntilZ@dir stored from wreg
   962  000AB4  6E0F               	movwf	moveUntilZ@dir^0,c
   963  000AB6                     
   964                           ;step/step.c: 16:     setDirection(dir);
   965  000AB6  500F               	movf	moveUntilZ@dir^0,w,c
   966  000AB8  EC31  F006         	call	_setDirection
   967  000ABC                     
   968                           ;step/step.c: 17:     setStepSize(size);
   969  000ABC  500E               	movf	moveUntilZ@size^0,w,c
   970  000ABE  EC57  F004         	call	_setStepSize
   971  000AC2                     
   972                           ;step/step.c: 18:     stepperSleep(0);
   973  000AC2  0E00               	movlw	0
   974  000AC4  EC23  F006         	call	_stepperSleep
   975  000AC8  8A8B               	bsf	139,5,c	;volatile
   976  000ACA                     l2322:
   977  000ACA  ECF7  F006         	call	_get_INTERRUPT_STEPPER_BREAK_FLAG	;wreg free
   978  000ACE  0900               	iorlw	0
   979  000AD0  B4D8               	btfsc	status,2,c
   980  000AD2  EF6D  F005         	goto	u811
   981  000AD6  EF6F  F005         	goto	u810
   982  000ADA                     u811:
   983  000ADA  EF65  F005         	goto	l2322
   984  000ADE                     u810:
   985  000ADE  9A8B               	bcf	139,5,c	;volatile
   986  000AE0                     
   987                           ;step/step.c: 29:     stepperSleep(1);
   988  000AE0  0E01               	movlw	1
   989  000AE2  EC23  F006         	call	_stepperSleep
   990  000AE6  0012               	return		;funcret
   991  000AE8                     __end_of_moveUntilZ:
   992                           	callstack 0
   993                           
   994 ;; *************** function _stepperSleep *****************
   995 ;; Defined at:
   996 ;;		line 32 in file "step/step.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;  in              1    wreg     _Bool 
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;  in              1   10[COMRAM] _Bool 
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg, status,2
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMRAM   BANK0   BANK1
  1010 ;;      Params:         0       0       0
  1011 ;;      Locals:         1       0       0
  1012 ;;      Temps:          0       0       0
  1013 ;;      Totals:         1       0       0
  1014 ;;Total ram usage:        1 bytes
  1015 ;; Hardware stack levels used:    1
  1016 ;; Hardware stack levels required when called:    5
  1017 ;; This function calls:
  1018 ;;		Nothing
  1019 ;; This function is called by:
  1020 ;;		_main
  1021 ;;		_moveUntilZ
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text7
  1026  000C46                     __ptext7:
  1027                           	callstack 0
  1028  000C46                     _stepperSleep:
  1029                           	callstack 25
  1030                           
  1031                           ;incstack = 0
  1032                           ;stepperSleep@in stored from wreg
  1033  000C46  6E0B               	movwf	stepperSleep@in^0,c
  1034  000C48                     
  1035                           ;step/step.c: 33:     if (in) {
  1036  000C48  500B               	movf	stepperSleep@in^0,w,c
  1037  000C4A  B4D8               	btfsc	status,2,c
  1038  000C4C  EF2A  F006         	goto	u171
  1039  000C50  EF2C  F006         	goto	u170
  1040  000C54                     u171:
  1041  000C54  EF2F  F006         	goto	l643
  1042  000C58                     u170:
  1043  000C58  968A               	bcf	138,3,c	;volatile
  1044  000C5A  EF30  F006         	goto	l645
  1045  000C5E                     l643:
  1046  000C5E  868A               	bsf	138,3,c	;volatile
  1047  000C60                     l645:
  1048  000C60  0012               	return		;funcret
  1049  000C62                     __end_of_stepperSleep:
  1050                           	callstack 0
  1051                           
  1052 ;; *************** function _setStepSize *****************
  1053 ;; Defined at:
  1054 ;;		line 50 in file "step/step.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;  size            1    wreg     enum E5845
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;  size            1   12[COMRAM] enum E5845
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      void 
  1061 ;; Registers used:
  1062 ;;		wreg, status,2, status,0
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1
  1068 ;;      Params:         0       0       0
  1069 ;;      Locals:         1       0       0
  1070 ;;      Temps:          2       0       0
  1071 ;;      Totals:         3       0       0
  1072 ;;Total ram usage:        3 bytes
  1073 ;; Hardware stack levels used:    1
  1074 ;; Hardware stack levels required when called:    5
  1075 ;; This function calls:
  1076 ;;		Nothing
  1077 ;; This function is called by:
  1078 ;;		_moveUntilZ
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text8
  1083  0008AE                     __ptext8:
  1084                           	callstack 0
  1085  0008AE                     _setStepSize:
  1086                           	callstack 24
  1087                           
  1088                           ;incstack = 0
  1089                           ;setStepSize@size stored from wreg
  1090  0008AE  6E0D               	movwf	setStepSize@size^0,c
  1091  0008B0                     
  1092                           ;step/step.c: 51:     switch (size) {
  1093  0008B0  EF76  F004         	goto	l1548
  1094  0008B4                     l655:
  1095  0008B4  988B               	bcf	139,4,c	;volatile
  1096  0008B6  9C8B               	bcf	139,6,c	;volatile
  1097  0008B8  9E8B               	bcf	139,7,c	;volatile
  1098  0008BA  EF9B  F004         	goto	l694
  1099  0008BE                     l663:
  1100  0008BE  888B               	bsf	139,4,c	;volatile
  1101  0008C0  9C8B               	bcf	139,6,c	;volatile
  1102  0008C2  9E8B               	bcf	139,7,c	;volatile
  1103  0008C4  EF9B  F004         	goto	l694
  1104  0008C8                     l670:
  1105  0008C8  988B               	bcf	139,4,c	;volatile
  1106  0008CA  8C8B               	bsf	139,6,c	;volatile
  1107  0008CC  9E8B               	bcf	139,7,c	;volatile
  1108  0008CE  EF9B  F004         	goto	l694
  1109  0008D2                     l677:
  1110  0008D2  888B               	bsf	139,4,c	;volatile
  1111  0008D4  8C8B               	bsf	139,6,c	;volatile
  1112  0008D6  9E8B               	bcf	139,7,c	;volatile
  1113  0008D8  EF9B  F004         	goto	l694
  1114  0008DC                     l684:
  1115  0008DC  888B               	bsf	139,4,c	;volatile
  1116  0008DE  8C8B               	bsf	139,6,c	;volatile
  1117  0008E0  8E8B               	bsf	139,7,c	;volatile
  1118  0008E2  EF9B  F004         	goto	l694
  1119  0008E6                     l692:
  1120  0008E6  968A               	bcf	138,3,c	;volatile
  1121  0008E8  EF9B  F004         	goto	l694
  1122  0008EC                     l1548:
  1123  0008EC  500D               	movf	setStepSize@size^0,w,c
  1124  0008EE  6E0B               	movwf	??_setStepSize^0,c
  1125  0008F0  6A0C               	clrf	(??_setStepSize+1)^0,c
  1126                           
  1127                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1128                           ; Switch size 1, requested type "simple"
  1129                           ; Number of cases is 1, Range of values is 0 to 0
  1130                           ; switch strategies available:
  1131                           ; Name         Instructions Cycles
  1132                           ; simple_byte            4     3 (average)
  1133                           ;	Chosen strategy is simple_byte
  1134  0008F2  500C               	movf	(??_setStepSize+1)^0,w,c
  1135  0008F4  0A00               	xorlw	0	; case 0
  1136  0008F6  B4D8               	btfsc	status,2,c
  1137  0008F8  EF80  F004         	goto	l2706
  1138  0008FC  EF73  F004         	goto	l692
  1139  000900                     l2706:
  1140                           
  1141                           ; Switch size 1, requested type "simple"
  1142                           ; Number of cases is 6, Range of values is 0 to 16
  1143                           ; switch strategies available:
  1144                           ; Name         Instructions Cycles
  1145                           ; simple_byte           19    10 (average)
  1146                           ;	Chosen strategy is simple_byte
  1147  000900  500B               	movf	??_setStepSize^0,w,c
  1148  000902  0A00               	xorlw	0	; case 0
  1149  000904  B4D8               	btfsc	status,2,c
  1150  000906  EF73  F004         	goto	l692
  1151  00090A  0A01               	xorlw	1	; case 1
  1152  00090C  B4D8               	btfsc	status,2,c
  1153  00090E  EF5A  F004         	goto	l655
  1154  000912  0A03               	xorlw	3	; case 2
  1155  000914  B4D8               	btfsc	status,2,c
  1156  000916  EF5F  F004         	goto	l663
  1157  00091A  0A06               	xorlw	6	; case 4
  1158  00091C  B4D8               	btfsc	status,2,c
  1159  00091E  EF64  F004         	goto	l670
  1160  000922  0A0C               	xorlw	12	; case 8
  1161  000924  B4D8               	btfsc	status,2,c
  1162  000926  EF69  F004         	goto	l677
  1163  00092A  0A18               	xorlw	24	; case 16
  1164  00092C  B4D8               	btfsc	status,2,c
  1165  00092E  EF6E  F004         	goto	l684
  1166  000932  EF73  F004         	goto	l692
  1167  000936                     l694:
  1168  000936  0012               	return		;funcret
  1169  000938                     __end_of_setStepSize:
  1170                           	callstack 0
  1171                           
  1172 ;; *************** function _setDirection *****************
  1173 ;; Defined at:
  1174 ;;		line 101 in file "step/step.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  dir             1    wreg     enum E5841
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;  dir             1   10[COMRAM] enum E5841
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      void 
  1181 ;; Registers used:
  1182 ;;		wreg, status,2
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1
  1188 ;;      Params:         0       0       0
  1189 ;;      Locals:         1       0       0
  1190 ;;      Temps:          0       0       0
  1191 ;;      Totals:         1       0       0
  1192 ;;Total ram usage:        1 bytes
  1193 ;; Hardware stack levels used:    1
  1194 ;; Hardware stack levels required when called:    5
  1195 ;; This function calls:
  1196 ;;		Nothing
  1197 ;; This function is called by:
  1198 ;;		_moveUntilZ
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text9
  1203  000C62                     __ptext9:
  1204                           	callstack 0
  1205  000C62                     _setDirection:
  1206                           	callstack 24
  1207                           
  1208                           ;incstack = 0
  1209                           ;setDirection@dir stored from wreg
  1210  000C62  6E0B               	movwf	setDirection@dir^0,c
  1211  000C64                     
  1212                           ;step/step.c: 103:     if (dir == FORWARDS) {
  1213  000C64  500B               	movf	setDirection@dir^0,w,c
  1214  000C66  A4D8               	btfss	status,2,c
  1215  000C68  EF38  F006         	goto	u181
  1216  000C6C  EF3A  F006         	goto	u180
  1217  000C70                     u181:
  1218  000C70  EF3D  F006         	goto	l701
  1219  000C74                     u180:
  1220  000C74  888A               	bsf	138,4,c	;volatile
  1221  000C76  EF3E  F006         	goto	l703
  1222  000C7A                     l701:
  1223  000C7A  988A               	bcf	138,4,c	;volatile
  1224  000C7C                     l703:
  1225  000C7C  0012               	return		;funcret
  1226  000C7E                     __end_of_setDirection:
  1227                           	callstack 0
  1228                           
  1229 ;; *************** function _get_INTERRUPT_STEPPER_BREAK_FLAG *****************
  1230 ;; Defined at:
  1231 ;;		line 66 in file "mcc_generated_files/interrupt_manager.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;		None
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;		None
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      _Bool 
  1238 ;; Registers used:
  1239 ;;		wreg, status,2
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1
  1245 ;;      Params:         0       0       0
  1246 ;;      Locals:         0       0       0
  1247 ;;      Temps:          0       0       0
  1248 ;;      Totals:         0       0       0
  1249 ;;Total ram usage:        0 bytes
  1250 ;; Hardware stack levels used:    1
  1251 ;; Hardware stack levels required when called:    5
  1252 ;; This function calls:
  1253 ;;		Nothing
  1254 ;; This function is called by:
  1255 ;;		_moveUntilZ
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           	psect	text10
  1260  000DEE                     __ptext10:
  1261                           	callstack 0
  1262  000DEE                     _get_INTERRUPT_STEPPER_BREAK_FLAG:
  1263                           	callstack 24
  1264  000DEE                     
  1265                           ;mcc_generated_files/interrupt_manager.c: 67:     return INTERRUPT_STEPPER_BREAK_FLAG;
  1266  000DEE  501C               	movf	_INTERRUPT_STEPPER_BREAK_FLAG^0,w,c	;volatile
  1267  000DF0  0012               	return		;funcret
  1268  000DF2                     __end_of_get_INTERRUPT_STEPPER_BREAK_FLAG:
  1269                           	callstack 0
  1270                           
  1271 ;; *************** function _initPumps *****************
  1272 ;; Defined at:
  1273 ;;		line 17 in file "pumps/pumps.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;		None
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;		None
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  1    wreg      void 
  1280 ;; Registers used:
  1281 ;;		wreg, status,2, cstack
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMRAM   BANK0   BANK1
  1287 ;;      Params:         0       0       0
  1288 ;;      Locals:         0       0       0
  1289 ;;      Temps:          0       0       0
  1290 ;;      Totals:         0       0       0
  1291 ;;Total ram usage:        0 bytes
  1292 ;; Hardware stack levels used:    1
  1293 ;; Hardware stack levels required when called:    6
  1294 ;; This function calls:
  1295 ;;		_TMR2_StartTimer
  1296 ;; This function is called by:
  1297 ;;		_main
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           	psect	text11
  1302  000C98                     __ptext11:
  1303                           	callstack 0
  1304  000C98                     _initPumps:
  1305                           	callstack 24
  1306  000C98                     
  1307                           ;pumps/pumps.c: 18:     TMR2_StartTimer();
  1308  000C98  ECF9  F006         	call	_TMR2_StartTimer	;wreg free
  1309  000C9C  9A89               	bcf	137,5,c	;volatile
  1310  000C9E  9489               	bcf	137,2,c	;volatile
  1311  000CA0                     
  1312                           ;pumps/pumps.c: 24:     Pumps.Blood_Pump_PWM = 0;
  1313  000CA0  0E00               	movlw	0
  1314  000CA2  6E13               	movwf	(_Pumps+1)^0,c	;volatile
  1315  000CA4  0E00               	movlw	0
  1316  000CA6  6E12               	movwf	_Pumps^0,c	;volatile
  1317  000CA8                     
  1318                           ;pumps/pumps.c: 25:     Pumps.Amniotic_Pump_PWM = 0;
  1319  000CA8  0E00               	movlw	0
  1320  000CAA  6E15               	movwf	(_Pumps+3)^0,c	;volatile
  1321  000CAC  0E00               	movlw	0
  1322  000CAE  6E14               	movwf	(_Pumps+2)^0,c	;volatile
  1323  000CB0  0012               	return		;funcret
  1324  000CB2                     __end_of_initPumps:
  1325                           	callstack 0
  1326                           
  1327 ;; *************** function _TMR2_StartTimer *****************
  1328 ;; Defined at:
  1329 ;;		line 79 in file "mcc_generated_files/tmr2.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;		None
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;		None
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      void 
  1336 ;; Registers used:
  1337 ;;		None
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMRAM   BANK0   BANK1
  1343 ;;      Params:         0       0       0
  1344 ;;      Locals:         0       0       0
  1345 ;;      Temps:          0       0       0
  1346 ;;      Totals:         0       0       0
  1347 ;;Total ram usage:        0 bytes
  1348 ;; Hardware stack levels used:    1
  1349 ;; Hardware stack levels required when called:    5
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_initPumps
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text12
  1358  000DF2                     __ptext12:
  1359                           	callstack 0
  1360  000DF2                     _TMR2_StartTimer:
  1361                           	callstack 24
  1362  000DF2                     
  1363                           ;mcc_generated_files/tmr2.c: 82:     T2CONbits.TMR2ON = 1;
  1364  000DF2  84BA               	bsf	186,2,c	;volatile
  1365  000DF4  0012               	return		;funcret
  1366  000DF6                     __end_of_TMR2_StartTimer:
  1367                           	callstack 0
  1368                           
  1369 ;; *************** function _get_interruptAction *****************
  1370 ;; Defined at:
  1371 ;;		line 74 in file "mcc_generated_files/interrupt_manager.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      unsigned char 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1
  1385 ;;      Params:         0       0       0
  1386 ;;      Locals:         0       0       0
  1387 ;;      Temps:          0       0       0
  1388 ;;      Totals:         0       0       0
  1389 ;;Total ram usage:        0 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; Hardware stack levels required when called:    5
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text13
  1400  000DF6                     __ptext13:
  1401                           	callstack 0
  1402  000DF6                     _get_interruptAction:
  1403                           	callstack 25
  1404  000DF6                     
  1405                           ;mcc_generated_files/interrupt_manager.c: 75:     return interruptAction;
  1406  000DF6  501B               	movf	_interruptAction^0,w,c	;volatile
  1407  000DF8  0012               	return		;funcret
  1408  000DFA                     __end_of_get_interruptAction:
  1409                           	callstack 0
  1410                           
  1411 ;; *************** function _SYSTEM_Initialize *****************
  1412 ;; Defined at:
  1413 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;		None
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;		None
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		wreg, status,2, status,0, cstack
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMRAM   BANK0   BANK1
  1427 ;;      Params:         0       0       0
  1428 ;;      Locals:         0       0       0
  1429 ;;      Temps:          0       0       0
  1430 ;;      Totals:         0       0       0
  1431 ;;Total ram usage:        0 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; Hardware stack levels required when called:    7
  1434 ;; This function calls:
  1435 ;;		_EUSART2_Initialize
  1436 ;;		_EXT_INT_Initialize
  1437 ;;		_INTERRUPT_Initialize
  1438 ;;		_OSCILLATOR_Initialize
  1439 ;;		_PIN_MANAGER_Initialize
  1440 ;;		_PWM4_Initialize
  1441 ;;		_PWM5_Initialize
  1442 ;;		_TMR2_Initialize
  1443 ;; This function is called by:
  1444 ;;		_main
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text14
  1449  000C24                     __ptext14:
  1450                           	callstack 0
  1451  000C24                     _SYSTEM_Initialize:
  1452                           	callstack 23
  1453  000C24                     
  1454                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  1455  000C24  ECAC  F006         	call	_INTERRUPT_Initialize	;wreg free
  1456  000C28                     
  1457                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1458  000C28  ECE4  F004         	call	_PIN_MANAGER_Initialize	;wreg free
  1459  000C2C                     
  1460                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1461  000C2C  ECBC  F006         	call	_OSCILLATOR_Initialize	;wreg free
  1462  000C30                     
  1463                           ;mcc_generated_files/mcc.c: 56:     PWM4_Initialize();
  1464  000C30  EC90  F006         	call	_PWM4_Initialize	;wreg free
  1465  000C34                     
  1466                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  1467  000C34  ECA4  F006         	call	_TMR2_Initialize	;wreg free
  1468  000C38                     
  1469                           ;mcc_generated_files/mcc.c: 58:     PWM5_Initialize();
  1470  000C38  EC86  F006         	call	_PWM5_Initialize	;wreg free
  1471  000C3C                     
  1472                           ;mcc_generated_files/mcc.c: 59:     EXT_INT_Initialize();
  1473  000C3C  ECFF  F005         	call	_EXT_INT_Initialize	;wreg free
  1474  000C40                     
  1475                           ;mcc_generated_files/mcc.c: 60:     EUSART2_Initialize();
  1476  000C40  EC03  F005         	call	_EUSART2_Initialize	;wreg free
  1477  000C44  0012               	return		;funcret
  1478  000C46                     __end_of_SYSTEM_Initialize:
  1479                           	callstack 0
  1480                           
  1481 ;; *************** function _TMR2_Initialize *****************
  1482 ;; Defined at:
  1483 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;		None
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;		None
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      void 
  1490 ;; Registers used:
  1491 ;;		wreg, status,2
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1
  1497 ;;      Params:         0       0       0
  1498 ;;      Locals:         0       0       0
  1499 ;;      Temps:          0       0       0
  1500 ;;      Totals:         0       0       0
  1501 ;;Total ram usage:        0 bytes
  1502 ;; Hardware stack levels used:    1
  1503 ;; Hardware stack levels required when called:    5
  1504 ;; This function calls:
  1505 ;;		Nothing
  1506 ;; This function is called by:
  1507 ;;		_SYSTEM_Initialize
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text15
  1512  000D48                     __ptext15:
  1513                           	callstack 0
  1514  000D48                     _TMR2_Initialize:
  1515                           	callstack 24
  1516  000D48                     
  1517                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x7C;
  1518  000D48  0E7C               	movlw	124
  1519  000D4A  6EBB               	movwf	187,c	;volatile
  1520                           
  1521                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  1522  000D4C  0E00               	movlw	0
  1523  000D4E  6EBC               	movwf	188,c	;volatile
  1524  000D50                     
  1525                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  1526  000D50  929E               	bcf	158,1,c	;volatile
  1527                           
  1528                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x06;
  1529  000D52  0E06               	movlw	6
  1530  000D54  6EBA               	movwf	186,c	;volatile
  1531  000D56  0012               	return		;funcret
  1532  000D58                     __end_of_TMR2_Initialize:
  1533                           	callstack 0
  1534                           
  1535 ;; *************** function _PWM5_Initialize *****************
  1536 ;; Defined at:
  1537 ;;		line 64 in file "mcc_generated_files/pwm5.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;		None
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;		None
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg, status,2
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMRAM   BANK0   BANK1
  1551 ;;      Params:         0       0       0
  1552 ;;      Locals:         0       0       0
  1553 ;;      Temps:          0       0       0
  1554 ;;      Totals:         0       0       0
  1555 ;;Total ram usage:        0 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; Hardware stack levels required when called:    5
  1558 ;; This function calls:
  1559 ;;		Nothing
  1560 ;; This function is called by:
  1561 ;;		_SYSTEM_Initialize
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text16
  1566  000D0C                     __ptext16:
  1567                           	callstack 0
  1568  000D0C                     _PWM5_Initialize:
  1569                           	callstack 24
  1570  000D0C                     
  1571                           ;mcc_generated_files/pwm5.c: 69:  CCP5CON = 0x0C;
  1572  000D0C  0E0C               	movlw	12
  1573  000D0E  010F               	movlb	15	; () banked
  1574  000D10  6F54               	movwf	84,b	;volatile
  1575                           
  1576                           ;mcc_generated_files/pwm5.c: 72:  CCPR5L = 0x00;
  1577  000D12  0E00               	movlw	0
  1578  000D14  6F55               	movwf	85,b	;volatile
  1579                           
  1580                           ;mcc_generated_files/pwm5.c: 75:  CCPR5H = 0x00;
  1581  000D16  0E00               	movlw	0
  1582  000D18  6F56               	movwf	86,b	;volatile
  1583                           
  1584                           ;mcc_generated_files/pwm5.c: 78:  CCPTMRS1bits.C5TSEL = 0x0;
  1585  000D1A  0EF3               	movlw	-13
  1586  000D1C  1748               	andwf	72,f,b	;volatile
  1587  000D1E                     
  1588                           ; BSR set to: 15
  1589  000D1E  0012               	return		;funcret
  1590  000D20                     __end_of_PWM5_Initialize:
  1591                           	callstack 0
  1592                           
  1593 ;; *************** function _PWM4_Initialize *****************
  1594 ;; Defined at:
  1595 ;;		line 64 in file "mcc_generated_files/pwm4.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;		None
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;		None
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		wreg, status,2
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMRAM   BANK0   BANK1
  1609 ;;      Params:         0       0       0
  1610 ;;      Locals:         0       0       0
  1611 ;;      Temps:          0       0       0
  1612 ;;      Totals:         0       0       0
  1613 ;;Total ram usage:        0 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; Hardware stack levels required when called:    5
  1616 ;; This function calls:
  1617 ;;		Nothing
  1618 ;; This function is called by:
  1619 ;;		_SYSTEM_Initialize
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623                           	psect	text17
  1624  000D20                     __ptext17:
  1625                           	callstack 0
  1626  000D20                     _PWM4_Initialize:
  1627                           	callstack 24
  1628  000D20                     
  1629                           ;mcc_generated_files/pwm4.c: 69:  CCP4CON = 0x0C;
  1630  000D20  0E0C               	movlw	12
  1631  000D22  010F               	movlb	15	; () banked
  1632  000D24  6F57               	movwf	87,b	;volatile
  1633                           
  1634                           ;mcc_generated_files/pwm4.c: 72:  CCPR4L = 0x00;
  1635  000D26  0E00               	movlw	0
  1636  000D28  6F58               	movwf	88,b	;volatile
  1637                           
  1638                           ;mcc_generated_files/pwm4.c: 75:  CCPR4H = 0x00;
  1639  000D2A  0E00               	movlw	0
  1640  000D2C  6F59               	movwf	89,b	;volatile
  1641                           
  1642                           ;mcc_generated_files/pwm4.c: 78:  CCPTMRS1bits.C4TSEL = 0x0;
  1643  000D2E  0EFC               	movlw	-4
  1644  000D30  1748               	andwf	72,f,b	;volatile
  1645  000D32                     
  1646                           ; BSR set to: 15
  1647  000D32  0012               	return		;funcret
  1648  000D34                     __end_of_PWM4_Initialize:
  1649                           	callstack 0
  1650                           
  1651 ;; *************** function _PIN_MANAGER_Initialize *****************
  1652 ;; Defined at:
  1653 ;;		line 62 in file "mcc_generated_files/pin_manager.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;		None
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;		None
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  1    wreg      void 
  1660 ;; Registers used:
  1661 ;;		wreg, status,2, status,0, cstack
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMRAM   BANK0   BANK1
  1667 ;;      Params:         0       0       0
  1668 ;;      Locals:         0       0       0
  1669 ;;      Temps:          0       0       0
  1670 ;;      Totals:         0       0       0
  1671 ;;Total ram usage:        0 bytes
  1672 ;; Hardware stack levels used:    1
  1673 ;; Hardware stack levels required when called:    6
  1674 ;; This function calls:
  1675 ;;		_IOCB5_SetInterruptHandler
  1676 ;; This function is called by:
  1677 ;;		_SYSTEM_Initialize
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           	psect	text18
  1682  0009C8                     __ptext18:
  1683                           	callstack 0
  1684  0009C8                     _PIN_MANAGER_Initialize:
  1685                           	callstack 23
  1686  0009C8                     
  1687                           ;mcc_generated_files/pin_manager.c: 67:     LATA = 0x00;
  1688  0009C8  0E00               	movlw	0
  1689  0009CA  6E89               	movwf	137,c	;volatile
  1690                           
  1691                           ;mcc_generated_files/pin_manager.c: 68:     LATB = 0x26;
  1692  0009CC  0E26               	movlw	38
  1693  0009CE  6E8A               	movwf	138,c	;volatile
  1694                           
  1695                           ;mcc_generated_files/pin_manager.c: 69:     LATC = 0x00;
  1696  0009D0  0E00               	movlw	0
  1697  0009D2  6E8B               	movwf	139,c	;volatile
  1698                           
  1699                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x4A;
  1700  0009D4  0E4A               	movlw	74
  1701  0009D6  6E92               	movwf	146,c	;volatile
  1702                           
  1703                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xA6;
  1704  0009D8  0EA6               	movlw	166
  1705  0009DA  6E93               	movwf	147,c	;volatile
  1706                           
  1707                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x07;
  1708  0009DC  0E07               	movlw	7
  1709  0009DE  6E94               	movwf	148,c	;volatile
  1710                           
  1711                           ;mcc_generated_files/pin_manager.c: 81:     ANSELC = 0x00;
  1712  0009E0  0E00               	movlw	0
  1713  0009E2  010F               	movlb	15	; () banked
  1714  0009E4  6F3A               	movwf	58,b	;volatile
  1715                           
  1716                           ;mcc_generated_files/pin_manager.c: 82:     ANSELB = 0x00;
  1717  0009E6  0E00               	movlw	0
  1718  0009E8  6F39               	movwf	57,b	;volatile
  1719                           
  1720                           ;mcc_generated_files/pin_manager.c: 83:     ANSELA = 0x00;
  1721  0009EA  0E00               	movlw	0
  1722  0009EC  6F38               	movwf	56,b	;volatile
  1723                           
  1724                           ;mcc_generated_files/pin_manager.c: 88:     WPUB = 0x06;
  1725  0009EE  0E06               	movlw	6
  1726  0009F0  6E61               	movwf	97,c	;volatile
  1727  0009F2                     
  1728                           ; BSR set to: 15
  1729                           ;mcc_generated_files/pin_manager.c: 89:     INTCON2bits.nRBPU = 1;
  1730  0009F2  8EF1               	bsf	241,7,c	;volatile
  1731  0009F4                     
  1732                           ; BSR set to: 15
  1733                           ;mcc_generated_files/pin_manager.c: 97:     IOCBbits.IOCB5 = 1;
  1734  0009F4  8A62               	bsf	98,5,c	;volatile
  1735  0009F6                     
  1736                           ; BSR set to: 15
  1737                           ;mcc_generated_files/pin_manager.c: 102:     IOCB5_SetInterruptHandler(IOCB5_DefaultInte
      +                          rruptHandler);
  1738  0009F6  0EFA               	movlw	low _IOCB5_DefaultInterruptHandler
  1739  0009F8  6E0B               	movwf	IOCB5_SetInterruptHandler@InterruptHandler^0,c
  1740  0009FA  0E0D               	movlw	high _IOCB5_DefaultInterruptHandler
  1741  0009FC  6E0C               	movwf	(IOCB5_SetInterruptHandler@InterruptHandler+1)^0,c
  1742  0009FE  ECC3  F006         	call	_IOCB5_SetInterruptHandler	;wreg free
  1743  000A02                     
  1744                           ;mcc_generated_files/pin_manager.c: 105:     INTCONbits.RBIE = 1;
  1745  000A02  86F2               	bsf	242,3,c	;volatile
  1746  000A04  0012               	return		;funcret
  1747  000A06                     __end_of_PIN_MANAGER_Initialize:
  1748                           	callstack 0
  1749                           
  1750 ;; *************** function _IOCB5_SetInterruptHandler *****************
  1751 ;; Defined at:
  1752 ;;		line 139 in file "mcc_generated_files/pin_manager.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;  InterruptHan    2   10[COMRAM] PTR FTN()void 
  1755 ;;		 -> IOCB5_DefaultInterruptHandler(1), 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;		None
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  1    wreg      void 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1
  1767 ;;      Params:         2       0       0
  1768 ;;      Locals:         0       0       0
  1769 ;;      Temps:          0       0       0
  1770 ;;      Totals:         2       0       0
  1771 ;;Total ram usage:        2 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    5
  1774 ;; This function calls:
  1775 ;;		Nothing
  1776 ;; This function is called by:
  1777 ;;		_PIN_MANAGER_Initialize
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           	psect	text19
  1782  000D86                     __ptext19:
  1783                           	callstack 0
  1784  000D86                     _IOCB5_SetInterruptHandler:
  1785                           	callstack 23
  1786  000D86                     
  1787                           ;mcc_generated_files/pin_manager.c: 140:     IOCB5_InterruptHandler = InterruptHandler;
  1788  000D86  C00B  F029         	movff	IOCB5_SetInterruptHandler@InterruptHandler,_IOCB5_InterruptHandler
  1789  000D8A  C00C  F02A         	movff	IOCB5_SetInterruptHandler@InterruptHandler+1,_IOCB5_InterruptHandler+1
  1790  000D8E  0012               	return		;funcret
  1791  000D90                     __end_of_IOCB5_SetInterruptHandler:
  1792                           	callstack 0
  1793                           
  1794 ;; *************** function _OSCILLATOR_Initialize *****************
  1795 ;; Defined at:
  1796 ;;		line 63 in file "mcc_generated_files/mcc.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;		None
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;		None
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  1    wreg      void 
  1803 ;; Registers used:
  1804 ;;		wreg, status,2
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMRAM   BANK0   BANK1
  1810 ;;      Params:         0       0       0
  1811 ;;      Locals:         0       0       0
  1812 ;;      Temps:          0       0       0
  1813 ;;      Totals:         0       0       0
  1814 ;;Total ram usage:        0 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:    5
  1817 ;; This function calls:
  1818 ;;		Nothing
  1819 ;; This function is called by:
  1820 ;;		_SYSTEM_Initialize
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           	psect	text20
  1825  000D78                     __ptext20:
  1826                           	callstack 0
  1827  000D78                     _OSCILLATOR_Initialize:
  1828                           	callstack 24
  1829  000D78                     
  1830                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x62;
  1831  000D78  0E62               	movlw	98
  1832  000D7A  6ED3               	movwf	211,c	;volatile
  1833                           
  1834                           ;mcc_generated_files/mcc.c: 68:     OSCCON2 = 0x04;
  1835  000D7C  0E04               	movlw	4
  1836  000D7E  6ED2               	movwf	210,c	;volatile
  1837                           
  1838                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
  1839  000D80  0E00               	movlw	0
  1840  000D82  6E9B               	movwf	155,c	;volatile
  1841  000D84  0012               	return		;funcret
  1842  000D86                     __end_of_OSCILLATOR_Initialize:
  1843                           	callstack 0
  1844                           
  1845 ;; *************** function _INTERRUPT_Initialize *****************
  1846 ;; Defined at:
  1847 ;;		line 82 in file "mcc_generated_files/interrupt_manager.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;		None
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;		None
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1
  1861 ;;      Params:         0       0       0
  1862 ;;      Locals:         0       0       0
  1863 ;;      Temps:          0       0       0
  1864 ;;      Totals:         0       0       0
  1865 ;;Total ram usage:        0 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:    5
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_SYSTEM_Initialize
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text21
  1876  000D58                     __ptext21:
  1877                           	callstack 0
  1878  000D58                     _INTERRUPT_Initialize:
  1879                           	callstack 24
  1880  000D58                     
  1881                           ;mcc_generated_files/interrupt_manager.c: 84:     RCONbits.IPEN = 0;
  1882  000D58  9ED0               	bcf	208,7,c	;volatile
  1883                           
  1884                           ;mcc_generated_files/interrupt_manager.c: 95:     PIE3bits.RC2IE = 1;
  1885  000D5A  8AA3               	bsf	163,5,c	;volatile
  1886                           
  1887                           ;mcc_generated_files/interrupt_manager.c: 97:     PIR3bits.RC2IF = 0;
  1888  000D5C  9AA4               	bcf	164,5,c	;volatile
  1889                           
  1890                           ;mcc_generated_files/interrupt_manager.c: 100:     INTCON3bits.INT1IF = 0;
  1891  000D5E  90F0               	bcf	240,0,c	;volatile
  1892                           
  1893                           ;mcc_generated_files/interrupt_manager.c: 101:     INTCON3bits.INT2IF = 0;
  1894  000D60  92F0               	bcf	240,1,c	;volatile
  1895  000D62                     
  1896                           ;mcc_generated_files/interrupt_manager.c: 104:     interruptAction = NULL_ACTION;
  1897  000D62  0E00               	movlw	0
  1898  000D64  6E1B               	movwf	_interruptAction^0,c	;volatile
  1899  000D66  0012               	return		;funcret
  1900  000D68                     __end_of_INTERRUPT_Initialize:
  1901                           	callstack 0
  1902                           
  1903 ;; *************** function _EXT_INT_Initialize *****************
  1904 ;; Defined at:
  1905 ;;		line 92 in file "mcc_generated_files/ext_int.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;		None
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;		None
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      void 
  1912 ;; Registers used:
  1913 ;;		wreg, status,2, status,0, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMRAM   BANK0   BANK1
  1919 ;;      Params:         0       0       0
  1920 ;;      Locals:         0       0       0
  1921 ;;      Temps:          0       0       0
  1922 ;;      Totals:         0       0       0
  1923 ;;Total ram usage:        0 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:    6
  1926 ;; This function calls:
  1927 ;;		_INT1_SetInterruptHandler
  1928 ;;		_INT2_SetInterruptHandler
  1929 ;; This function is called by:
  1930 ;;		_SYSTEM_Initialize
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text22
  1935  000BFE                     __ptext22:
  1936                           	callstack 0
  1937  000BFE                     _EXT_INT_Initialize:
  1938                           	callstack 23
  1939  000BFE                     
  1940                           ;mcc_generated_files/ext_int.c: 97:     (INTCON3bits.INT1IF = 0);
  1941  000BFE  90F0               	bcf	240,0,c	;volatile
  1942                           
  1943                           ;mcc_generated_files/ext_int.c: 98:     (INTCON2bits.INTEDG1 = 0);
  1944  000C00  9AF1               	bcf	241,5,c	;volatile
  1945  000C02                     
  1946                           ;mcc_generated_files/ext_int.c: 100:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
  1947  000C02  0EFE               	movlw	low _INT1_DefaultInterruptHandler
  1948  000C04  6E0B               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  1949  000C06  0E0D               	movlw	high _INT1_DefaultInterruptHandler
  1950  000C08  6E0C               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  1951  000C0A  ECCD  F006         	call	_INT1_SetInterruptHandler	;wreg free
  1952  000C0E                     
  1953                           ;mcc_generated_files/ext_int.c: 101:     (INTCON3bits.INT1IE = 1);
  1954  000C0E  86F0               	bsf	240,3,c	;volatile
  1955  000C10                     
  1956                           ;mcc_generated_files/ext_int.c: 106:     (INTCON3bits.INT2IF = 0);
  1957  000C10  92F0               	bcf	240,1,c	;volatile
  1958  000C12                     
  1959                           ;mcc_generated_files/ext_int.c: 107:     (INTCON2bits.INTEDG2 = 0);
  1960  000C12  98F1               	bcf	241,4,c	;volatile
  1961                           
  1962                           ;mcc_generated_files/ext_int.c: 109:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
  1963  000C14  0EFC               	movlw	low _INT2_DefaultInterruptHandler
  1964  000C16  6E0B               	movwf	INT2_SetInterruptHandler@InterruptHandler^0,c
  1965  000C18  0E0D               	movlw	high _INT2_DefaultInterruptHandler
  1966  000C1A  6E0C               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,c
  1967  000C1C  ECC8  F006         	call	_INT2_SetInterruptHandler	;wreg free
  1968  000C20                     
  1969                           ;mcc_generated_files/ext_int.c: 110:     (INTCON3bits.INT2IE = 1);
  1970  000C20  88F0               	bsf	240,4,c	;volatile
  1971  000C22  0012               	return		;funcret
  1972  000C24                     __end_of_EXT_INT_Initialize:
  1973                           	callstack 0
  1974                           
  1975 ;; *************** function _INT2_SetInterruptHandler *****************
  1976 ;; Defined at:
  1977 ;;		line 83 in file "mcc_generated_files/ext_int.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  InterruptHan    2   10[COMRAM] PTR FTN()void 
  1980 ;;		 -> INT2_DefaultInterruptHandler(1), 
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;		None
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg, status,2, status,0
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1
  1992 ;;      Params:         2       0       0
  1993 ;;      Locals:         0       0       0
  1994 ;;      Temps:          0       0       0
  1995 ;;      Totals:         2       0       0
  1996 ;;Total ram usage:        2 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    5
  1999 ;; This function calls:
  2000 ;;		Nothing
  2001 ;; This function is called by:
  2002 ;;		_EXT_INT_Initialize
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text23
  2007  000D90                     __ptext23:
  2008                           	callstack 0
  2009  000D90                     _INT2_SetInterruptHandler:
  2010                           	callstack 23
  2011  000D90                     
  2012                           ;mcc_generated_files/ext_int.c: 84:     INT2_InterruptHandler = InterruptHandler;
  2013  000D90  C00B  F025         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  2014  000D94  C00C  F026         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  2015  000D98  0012               	return		;funcret
  2016  000D9A                     __end_of_INT2_SetInterruptHandler:
  2017                           	callstack 0
  2018                           
  2019 ;; *************** function _INT1_SetInterruptHandler *****************
  2020 ;; Defined at:
  2021 ;;		line 55 in file "mcc_generated_files/ext_int.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;  InterruptHan    2   10[COMRAM] PTR FTN()void 
  2024 ;;		 -> INT1_DefaultInterruptHandler(1), 
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;		None
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  1    wreg      void 
  2029 ;; Registers used:
  2030 ;;		wreg, status,2, status,0
  2031 ;; Tracked objects:
  2032 ;;		On entry : 0/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMRAM   BANK0   BANK1
  2036 ;;      Params:         2       0       0
  2037 ;;      Locals:         0       0       0
  2038 ;;      Temps:          0       0       0
  2039 ;;      Totals:         2       0       0
  2040 ;;Total ram usage:        2 bytes
  2041 ;; Hardware stack levels used:    1
  2042 ;; Hardware stack levels required when called:    5
  2043 ;; This function calls:
  2044 ;;		Nothing
  2045 ;; This function is called by:
  2046 ;;		_EXT_INT_Initialize
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           	psect	text24
  2051  000D9A                     __ptext24:
  2052                           	callstack 0
  2053  000D9A                     _INT1_SetInterruptHandler:
  2054                           	callstack 23
  2055  000D9A                     
  2056                           ;mcc_generated_files/ext_int.c: 56:     INT1_InterruptHandler = InterruptHandler;
  2057  000D9A  C00B  F027         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  2058  000D9E  C00C  F028         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  2059  000DA2  0012               	return		;funcret
  2060  000DA4                     __end_of_INT1_SetInterruptHandler:
  2061                           	callstack 0
  2062                           
  2063 ;; *************** function _EUSART2_Initialize *****************
  2064 ;; Defined at:
  2065 ;;		line 66 in file "mcc_generated_files/eusart2.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;		None
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;		None
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      void 
  2072 ;; Registers used:
  2073 ;;		wreg, status,2, status,0, cstack
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1
  2079 ;;      Params:         0       0       0
  2080 ;;      Locals:         0       0       0
  2081 ;;      Temps:          0       0       0
  2082 ;;      Totals:         0       0       0
  2083 ;;Total ram usage:        0 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; Hardware stack levels required when called:    6
  2086 ;; This function calls:
  2087 ;;		_EUSART2_SetErrorHandler
  2088 ;;		_EUSART2_SetFramingErrorHandler
  2089 ;;		_EUSART2_SetOverrunErrorHandler
  2090 ;; This function is called by:
  2091 ;;		_SYSTEM_Initialize
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095                           	psect	text25
  2096  000A06                     __ptext25:
  2097                           	callstack 0
  2098  000A06                     _EUSART2_Initialize:
  2099                           	callstack 23
  2100  000A06                     
  2101                           ;mcc_generated_files/eusart2.c: 71:     BAUDCON2 = 0x08;
  2102  000A06  0E08               	movlw	8
  2103  000A08  6E70               	movwf	112,c	;volatile
  2104                           
  2105                           ;mcc_generated_files/eusart2.c: 74:     RCSTA2 = 0x90;
  2106  000A0A  0E90               	movlw	144
  2107  000A0C  6E71               	movwf	113,c	;volatile
  2108                           
  2109                           ;mcc_generated_files/eusart2.c: 77:     TXSTA2 = 0x24;
  2110  000A0E  0E24               	movlw	36
  2111  000A10  6E72               	movwf	114,c	;volatile
  2112                           
  2113                           ;mcc_generated_files/eusart2.c: 80:     SPBRG2 = 0xCF;
  2114  000A12  0ECF               	movlw	207
  2115  000A14  6E75               	movwf	117,c	;volatile
  2116                           
  2117                           ;mcc_generated_files/eusart2.c: 83:     SPBRGH2 = 0x00;
  2118  000A16  0E00               	movlw	0
  2119  000A18  6E76               	movwf	118,c	;volatile
  2120  000A1A                     
  2121                           ;mcc_generated_files/eusart2.c: 86:     EUSART2_SetFramingErrorHandler(EUSART2_DefaultFr
      +                          amingErrorHandler);
  2122  000A1A  0E00               	movlw	0
  2123  000A1C  6E0B               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler^0,c
  2124  000A1E  0E00               	movlw	0
  2125  000A20  6E0C               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)^0,c
  2126  000A22  ECD7  F006         	call	_EUSART2_SetFramingErrorHandler	;wreg free
  2127  000A26                     
  2128                           ;mcc_generated_files/eusart2.c: 87:     EUSART2_SetOverrunErrorHandler(EUSART2_DefaultOv
      +                          errunErrorHandler);
  2129  000A26  0E00               	movlw	0
  2130  000A28  6E0B               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler^0,c
  2131  000A2A  0E00               	movlw	0
  2132  000A2C  6E0C               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2133  000A2E  ECD2  F006         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
  2134  000A32                     
  2135                           ;mcc_generated_files/eusart2.c: 88:     EUSART2_SetErrorHandler(EUSART2_DefaultErrorHand
      +                          ler);
  2136  000A32  0E00               	movlw	0
  2137  000A34  6E0B               	movwf	EUSART2_SetErrorHandler@interruptHandler^0,c
  2138  000A36  0E00               	movlw	0
  2139  000A38  6E0C               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)^0,c
  2140  000A3A  ECDC  F006         	call	_EUSART2_SetErrorHandler	;wreg free
  2141  000A3E                     
  2142                           ;mcc_generated_files/eusart2.c: 90:     eusart2RxLastError.status = 0;
  2143  000A3E  0E00               	movlw	0
  2144  000A40  6E1A               	movwf	_eusart2RxLastError^0,c	;volatile
  2145  000A42  0012               	return		;funcret
  2146  000A44                     __end_of_EUSART2_Initialize:
  2147                           	callstack 0
  2148                           
  2149 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
  2150 ;; Defined at:
  2151 ;;		line 161 in file "mcc_generated_files/eusart2.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  interruptHan    2   10[COMRAM] PTR FTN()void 
  2154 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;		None
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2, status,0
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1
  2166 ;;      Params:         2       0       0
  2167 ;;      Locals:         0       0       0
  2168 ;;      Temps:          0       0       0
  2169 ;;      Totals:         2       0       0
  2170 ;;Total ram usage:        2 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    5
  2173 ;; This function calls:
  2174 ;;		Nothing
  2175 ;; This function is called by:
  2176 ;;		_EUSART2_Initialize
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           	psect	text26
  2181  000DA4                     __ptext26:
  2182                           	callstack 0
  2183  000DA4                     _EUSART2_SetOverrunErrorHandler:
  2184                           	callstack 23
  2185  000DA4                     
  2186                           ;mcc_generated_files/eusart2.c: 162:     EUSART2_OverrunErrorHandler = interruptHandler;
  2187  000DA4  C00B  F021         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
  2188  000DA8  C00C  F022         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
  2189  000DAC  0012               	return		;funcret
  2190  000DAE                     __end_of_EUSART2_SetOverrunErrorHandler:
  2191                           	callstack 0
  2192                           
  2193 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
  2194 ;; Defined at:
  2195 ;;		line 157 in file "mcc_generated_files/eusart2.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;  interruptHan    2   10[COMRAM] PTR FTN()void 
  2198 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;		None
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      void 
  2203 ;; Registers used:
  2204 ;;		wreg, status,2, status,0
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMRAM   BANK0   BANK1
  2210 ;;      Params:         2       0       0
  2211 ;;      Locals:         0       0       0
  2212 ;;      Temps:          0       0       0
  2213 ;;      Totals:         2       0       0
  2214 ;;Total ram usage:        2 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; Hardware stack levels required when called:    5
  2217 ;; This function calls:
  2218 ;;		Nothing
  2219 ;; This function is called by:
  2220 ;;		_EUSART2_Initialize
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           	psect	text27
  2225  000DAE                     __ptext27:
  2226                           	callstack 0
  2227  000DAE                     _EUSART2_SetFramingErrorHandler:
  2228                           	callstack 23
  2229  000DAE                     
  2230                           ;mcc_generated_files/eusart2.c: 158:     EUSART2_FramingErrorHandler = interruptHandler;
  2231  000DAE  C00B  F023         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
  2232  000DB2  C00C  F024         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
  2233  000DB6  0012               	return		;funcret
  2234  000DB8                     __end_of_EUSART2_SetFramingErrorHandler:
  2235                           	callstack 0
  2236                           
  2237 ;; *************** function _EUSART2_SetErrorHandler *****************
  2238 ;; Defined at:
  2239 ;;		line 165 in file "mcc_generated_files/eusart2.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  interruptHan    2   10[COMRAM] PTR FTN()void 
  2242 ;;		 -> EUSART2_DefaultErrorHandler(1), 
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg, status,2, status,0
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1
  2254 ;;      Params:         2       0       0
  2255 ;;      Locals:         0       0       0
  2256 ;;      Temps:          0       0       0
  2257 ;;      Totals:         2       0       0
  2258 ;;Total ram usage:        2 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:    5
  2261 ;; This function calls:
  2262 ;;		Nothing
  2263 ;; This function is called by:
  2264 ;;		_EUSART2_Initialize
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text28
  2269  000DB8                     __ptext28:
  2270                           	callstack 0
  2271  000DB8                     _EUSART2_SetErrorHandler:
  2272                           	callstack 23
  2273  000DB8                     
  2274                           ;mcc_generated_files/eusart2.c: 166:     EUSART2_ErrorHandler = interruptHandler;
  2275  000DB8  C00B  F01F         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
  2276  000DBC  C00C  F020         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
  2277  000DC0  0012               	return		;funcret
  2278  000DC2                     __end_of_EUSART2_SetErrorHandler:
  2279                           	callstack 0
  2280                           
  2281 ;; *************** function _INTERRUPT_InterruptManager *****************
  2282 ;; Defined at:
  2283 ;;		line 107 in file "mcc_generated_files/interrupt_manager.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;		None
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;		None
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  1    wreg      void 
  2290 ;; Registers used:
  2291 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMRAM   BANK0   BANK1
  2297 ;;      Params:         0       0       0
  2298 ;;      Locals:         0       0       0
  2299 ;;      Temps:          4       0       0
  2300 ;;      Totals:         4       0       0
  2301 ;;Total ram usage:        4 bytes
  2302 ;; Hardware stack levels used:    1
  2303 ;; Hardware stack levels required when called:    4
  2304 ;; This function calls:
  2305 ;;		_EUSART2_Read
  2306 ;;		_EUSART2_is_rx_ready
  2307 ;;		_INT1_ISR
  2308 ;;		_INT2_ISR
  2309 ;;		_PIN_MANAGER_IOC
  2310 ;;		_resetEncoderTicks
  2311 ;;		_setAmnioticPumpPWM
  2312 ;;		_setBloodPumpPWM
  2313 ;;		_stepperIsAsleep
  2314 ;;		i2_EUSART2_Write
  2315 ;; This function is called by:
  2316 ;;		Interrupt level 2
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           	psect	intcode
  2321  000008                     __pintcode:
  2322                           	callstack 0
  2323  000008                     _INTERRUPT_InterruptManager:
  2324                           	callstack 23
  2325                           
  2326                           ;incstack = 0
  2327  000008  822B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2328  00000A  CFFA F009          	movff	pclath,??_INTERRUPT_InterruptManager+2
  2329  00000E  CFFB F00A          	movff	pclatu,??_INTERRUPT_InterruptManager+3
  2330  000012                     
  2331                           ;mcc_generated_files/interrupt_manager.c: 110:     if(INTCON3bits.INT1IE == 1 && INTCON3
      +                          bits.INT1IF == 1)
  2332  000012  A6F0               	btfss	240,3,c	;volatile
  2333  000014  EF0E  F000         	goto	i2u82_41
  2334  000018  EF10  F000         	goto	i2u82_40
  2335  00001C                     i2u82_41:
  2336  00001C  EF20  F000         	goto	i2l392
  2337  000020                     i2u82_40:
  2338  000020  A0F0               	btfss	240,0,c	;volatile
  2339  000022  EF15  F000         	goto	i2u83_41
  2340  000026  EF17  F000         	goto	i2u83_40
  2341  00002A                     i2u83_41:
  2342  00002A  EF20  F000         	goto	i2l392
  2343  00002E                     i2u83_40:
  2344  00002E                     
  2345                           ;mcc_generated_files/interrupt_manager.c: 111:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 113:         INT1_ISR();
  2346  00002E  ECE9  F006         	call	_INT1_ISR	;wreg free
  2347  000032                     
  2348                           ;mcc_generated_files/interrupt_manager.c: 116:             EUSART2_Write(0x10);
  2349  000032  0E10               	movlw	16
  2350  000034  EC7B  F006         	call	i2_EUSART2_Write
  2351  000038                     
  2352                           ;mcc_generated_files/interrupt_manager.c: 117:             resetEncoderTicks();
  2353  000038  ECB4  F006         	call	_resetEncoderTicks	;wreg free
  2354                           
  2355                           ;mcc_generated_files/interrupt_manager.c: 119:     }
  2356  00003C  EF1B  F003         	goto	i2l470
  2357  000040                     i2l392:
  2358  000040  A8F0               	btfss	240,4,c	;volatile
  2359  000042  EF25  F000         	goto	i2u84_41
  2360  000046  EF27  F000         	goto	i2u84_40
  2361  00004A                     i2u84_41:
  2362  00004A  EF35  F000         	goto	i2l2342
  2363  00004E                     i2u84_40:
  2364  00004E  A2F0               	btfss	240,1,c	;volatile
  2365  000050  EF2C  F000         	goto	i2u85_41
  2366  000054  EF2E  F000         	goto	i2u85_40
  2367  000058                     i2u85_41:
  2368  000058  EF35  F000         	goto	i2l2342
  2369  00005C                     i2u85_40:
  2370  00005C                     
  2371                           ;mcc_generated_files/interrupt_manager.c: 121:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 123:         INT2_ISR();
  2372  00005C  ECE5  F006         	call	_INT2_ISR	;wreg free
  2373  000060                     
  2374                           ;mcc_generated_files/interrupt_manager.c: 126:             EUSART2_Write(0x0F);
  2375  000060  0E0F               	movlw	15
  2376  000062  EC7B  F006         	call	i2_EUSART2_Write
  2377                           
  2378                           ;mcc_generated_files/interrupt_manager.c: 128:     }else if (EUSART2_is_rx_ready()) {
  2379  000066  EF1B  F003         	goto	i2l470
  2380  00006A                     i2l2342:
  2381  00006A  EC9A  F006         	call	_EUSART2_is_rx_ready	;wreg free
  2382  00006E  0900               	iorlw	0
  2383  000070  B4D8               	btfsc	status,2,c
  2384  000072  EF3D  F000         	goto	i2u86_41
  2385  000076  EF3F  F000         	goto	i2u86_40
  2386  00007A                     i2u86_41:
  2387  00007A  EF09  F003         	goto	i2l396
  2388  00007E                     i2u86_40:
  2389  00007E                     
  2390                           ;mcc_generated_files/interrupt_manager.c: 131:         UART_RX_in = EUSART2_Read();
  2391  00007E  ECEB  F005         	call	_EUSART2_Read	;wreg free
  2392  000082  6E1D               	movwf	_UART_RX_in^0,c	;volatile
  2393                           
  2394                           ;mcc_generated_files/interrupt_manager.c: 132:         switch (UART_RX_in) {
  2395  000084  EF70  F002         	goto	i2l2548
  2396  000088                     i2l2346:
  2397                           
  2398                           ;mcc_generated_files/interrupt_manager.c: 138:                 setBloodPumpPWM(0);
  2399  000088  0E00               	movlw	0
  2400  00008A  6E06               	movwf	(setBloodPumpPWM@pwm+1)^0,c
  2401  00008C  0E00               	movlw	0
  2402  00008E  6E05               	movwf	setBloodPumpPWM@pwm^0,c
  2403  000090  EC9C  F004         	call	_setBloodPumpPWM	;wreg free
  2404                           
  2405                           ;mcc_generated_files/interrupt_manager.c: 139:                 setAmnioticPumpPWM(0);
  2406  000094  0E00               	movlw	0
  2407  000096  6E06               	movwf	(setAmnioticPumpPWM@pwm+1)^0,c
  2408  000098  0E00               	movlw	0
  2409  00009A  6E05               	movwf	setAmnioticPumpPWM@pwm^0,c
  2410  00009C  ECC1  F004         	call	_setAmnioticPumpPWM	;wreg free
  2411  0000A0                     
  2412                           ;mcc_generated_files/interrupt_manager.c: 141:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  2413  0000A0  0E01               	movlw	1
  2414  0000A2  6E1C               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  2415  0000A4                     
  2416                           ;mcc_generated_files/interrupt_manager.c: 142:                 interruptAction = NULL_AC
      +                          TION;
  2417  0000A4  0E00               	movlw	0
  2418  0000A6  6E1B               	movwf	_interruptAction^0,c	;volatile
  2419  0000A8                     
  2420                           ;mcc_generated_files/interrupt_manager.c: 143:                 if(!stepperIsAsleep()){
  2421  0000A8  EC59  F006         	call	_stepperIsAsleep	;wreg free
  2422  0000AC  0900               	iorlw	0
  2423  0000AE  A4D8               	btfss	status,2,c
  2424  0000B0  EF5C  F000         	goto	i2u87_41
  2425  0000B4  EF5E  F000         	goto	i2u87_40
  2426  0000B8                     i2u87_41:
  2427  0000B8  EF1B  F003         	goto	i2l470
  2428  0000BC                     i2u87_40:
  2429  0000BC                     
  2430                           ;mcc_generated_files/interrupt_manager.c: 145:                     EUSART2_Write(0x0C);
  2431  0000BC  0E0C               	movlw	12
  2432  0000BE  EC7B  F006         	call	i2_EUSART2_Write
  2433  0000C2  EF1B  F003         	goto	i2l470
  2434  0000C6                     i2l2356:
  2435                           
  2436                           ;mcc_generated_files/interrupt_manager.c: 152:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  2437  0000C6  0E01               	movlw	1
  2438  0000C8  6E1C               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  2439                           
  2440                           ;mcc_generated_files/interrupt_manager.c: 153:                 interruptAction = NULL_AC
      +                          TION;
  2441  0000CA  0E00               	movlw	0
  2442  0000CC  6E1B               	movwf	_interruptAction^0,c	;volatile
  2443  0000CE                     
  2444                           ;mcc_generated_files/interrupt_manager.c: 154:                 if(!stepperIsAsleep()){
  2445  0000CE  EC59  F006         	call	_stepperIsAsleep	;wreg free
  2446  0000D2  0900               	iorlw	0
  2447  0000D4  A4D8               	btfss	status,2,c
  2448  0000D6  EF6F  F000         	goto	i2u88_41
  2449  0000DA  EF71  F000         	goto	i2u88_40
  2450  0000DE                     i2u88_41:
  2451  0000DE  EF1B  F003         	goto	i2l467
  2452  0000E2                     i2u88_40:
  2453  0000E2                     
  2454                           ;mcc_generated_files/interrupt_manager.c: 156:                     EUSART2_Write(0x0C);
  2455  0000E2  0E0C               	movlw	12
  2456  0000E4  EC7B  F006         	call	i2_EUSART2_Write
  2457  0000E8  EF1B  F003         	goto	i2l470
  2458  0000EC                     i2l2362:
  2459                           
  2460                           ;mcc_generated_files/interrupt_manager.c: 162:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  2461  0000EC  0E01               	movlw	1
  2462  0000EE  6E1C               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  2463  0000F0                     
  2464                           ;mcc_generated_files/interrupt_manager.c: 164:                 if (!PORTBbits.RB2) {
  2465  0000F0  B481               	btfsc	129,2,c	;volatile
  2466  0000F2  EF7D  F000         	goto	i2u89_41
  2467  0000F6  EF7F  F000         	goto	i2u89_40
  2468  0000FA                     i2u89_41:
  2469  0000FA  EF86  F000         	goto	i2l2370
  2470  0000FE                     i2u89_40:
  2471  0000FE                     
  2472                           ;mcc_generated_files/interrupt_manager.c: 165:                     interruptAction = NUL
      +                          L_ACTION;
  2473  0000FE  0E00               	movlw	0
  2474  000100  6E1B               	movwf	_interruptAction^0,c	;volatile
  2475  000102                     
  2476                           ;mcc_generated_files/interrupt_manager.c: 166:                     EUSART2_Write(0x0F);
  2477  000102  0E0F               	movlw	15
  2478  000104  EC7B  F006         	call	i2_EUSART2_Write
  2479                           
  2480                           ;mcc_generated_files/interrupt_manager.c: 167:                 } else {
  2481  000108  EF1B  F003         	goto	i2l470
  2482  00010C                     i2l2370:
  2483                           
  2484                           ;mcc_generated_files/interrupt_manager.c: 168:                     interruptAction = STE
      +                          PPER_FORWARD_UNTIL_STOP_FULL;
  2485  00010C  0E02               	movlw	2
  2486  00010E  6E1B               	movwf	_interruptAction^0,c	;volatile
  2487  000110                     
  2488                           ;mcc_generated_files/interrupt_manager.c: 169:                     if(!stepperIsAsleep()
      +                          ){
  2489  000110  EC59  F006         	call	_stepperIsAsleep	;wreg free
  2490  000114  0900               	iorlw	0
  2491  000116  A4D8               	btfss	status,2,c
  2492  000118  EF90  F000         	goto	i2u90_41
  2493  00011C  EF92  F000         	goto	i2u90_40
  2494  000120                     i2u90_41:
  2495  000120  EF1B  F003         	goto	i2l467
  2496  000124                     i2u90_40:
  2497  000124                     
  2498                           ;mcc_generated_files/interrupt_manager.c: 171:                         EUSART2_Write(0x0
      +                          E);
  2499  000124  0E0E               	movlw	14
  2500  000126  EC7B  F006         	call	i2_EUSART2_Write
  2501  00012A  EF1B  F003         	goto	i2l470
  2502  00012E                     i2l2376:
  2503                           
  2504                           ;mcc_generated_files/interrupt_manager.c: 178:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  2505  00012E  0E01               	movlw	1
  2506  000130  6E1C               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  2507  000132                     
  2508                           ;mcc_generated_files/interrupt_manager.c: 180:                 if (!PORTBbits.RB1) {
  2509  000132  B281               	btfsc	129,1,c	;volatile
  2510  000134  EF9E  F000         	goto	i2u91_41
  2511  000138  EFA0  F000         	goto	i2u91_40
  2512  00013C                     i2u91_41:
  2513  00013C  EFA7  F000         	goto	i2l2384
  2514  000140                     i2u91_40:
  2515  000140                     
  2516                           ;mcc_generated_files/interrupt_manager.c: 181:                     interruptAction = NUL
      +                          L_ACTION;
  2517  000140  0E00               	movlw	0
  2518  000142  6E1B               	movwf	_interruptAction^0,c	;volatile
  2519  000144                     
  2520                           ;mcc_generated_files/interrupt_manager.c: 182:                     EUSART2_Write(0x10);
  2521  000144  0E10               	movlw	16
  2522  000146  EC7B  F006         	call	i2_EUSART2_Write
  2523                           
  2524                           ;mcc_generated_files/interrupt_manager.c: 183:                 } else {
  2525  00014A  EF1B  F003         	goto	i2l470
  2526  00014E                     i2l2384:
  2527                           
  2528                           ;mcc_generated_files/interrupt_manager.c: 184:                     interruptAction = STE
      +                          PPER_BACKWARD_UNTIL_STOP_FULL;
  2529  00014E  0E03               	movlw	3
  2530  000150  6E1B               	movwf	_interruptAction^0,c	;volatile
  2531  000152                     
  2532                           ;mcc_generated_files/interrupt_manager.c: 185:                     if(!stepperIsAsleep()
      +                          ){
  2533  000152  EC59  F006         	call	_stepperIsAsleep	;wreg free
  2534  000156  0900               	iorlw	0
  2535  000158  A4D8               	btfss	status,2,c
  2536  00015A  EFB1  F000         	goto	i2u92_41
  2537  00015E  EFB3  F000         	goto	i2u92_40
  2538  000162                     i2u92_41:
  2539  000162  EF1B  F003         	goto	i2l467
  2540  000166                     i2u92_40:
  2541  000166                     
  2542                           ;mcc_generated_files/interrupt_manager.c: 187:                         EUSART2_Write(0x0
      +                          E);
  2543  000166  0E0E               	movlw	14
  2544  000168  EC7B  F006         	call	i2_EUSART2_Write
  2545  00016C  EF1B  F003         	goto	i2l470
  2546  000170                     i2l2390:
  2547                           
  2548                           ;mcc_generated_files/interrupt_manager.c: 194:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  2549  000170  0E01               	movlw	1
  2550  000172  6E1C               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  2551  000174                     
  2552                           ;mcc_generated_files/interrupt_manager.c: 196:                 if (!PORTBbits.RB2) {
  2553  000174  B481               	btfsc	129,2,c	;volatile
  2554  000176  EFBF  F000         	goto	i2u93_41
  2555  00017A  EFC1  F000         	goto	i2u93_40
  2556  00017E                     i2u93_41:
  2557  00017E  EFC8  F000         	goto	i2l2398
  2558  000182                     i2u93_40:
  2559  000182                     
  2560                           ;mcc_generated_files/interrupt_manager.c: 197:                     interruptAction = NUL
      +                          L_ACTION;
  2561  000182  0E00               	movlw	0
  2562  000184  6E1B               	movwf	_interruptAction^0,c	;volatile
  2563  000186                     
  2564                           ;mcc_generated_files/interrupt_manager.c: 198:                     EUSART2_Write(0x0F);
  2565  000186  0E0F               	movlw	15
  2566  000188  EC7B  F006         	call	i2_EUSART2_Write
  2567                           
  2568                           ;mcc_generated_files/interrupt_manager.c: 199:                 } else {
  2569  00018C  EF1B  F003         	goto	i2l470
  2570  000190                     i2l2398:
  2571                           
  2572                           ;mcc_generated_files/interrupt_manager.c: 200:                     interruptAction = STE
      +                          PPER_FORWARD_UNTIL_STOP_HALF;
  2573  000190  0E04               	movlw	4
  2574  000192  6E1B               	movwf	_interruptAction^0,c	;volatile
  2575  000194                     
  2576                           ;mcc_generated_files/interrupt_manager.c: 201:                     if(!stepperIsAsleep()
      +                          ){
  2577  000194  EC59  F006         	call	_stepperIsAsleep	;wreg free
  2578  000198  0900               	iorlw	0
  2579  00019A  A4D8               	btfss	status,2,c
  2580  00019C  EFD2  F000         	goto	i2u94_41
  2581  0001A0  EFD4  F000         	goto	i2u94_40
  2582  0001A4                     i2u94_41:
  2583  0001A4  EF1B  F003         	goto	i2l467
  2584  0001A8                     i2u94_40:
  2585  0001A8                     
  2586                           ;mcc_generated_files/interrupt_manager.c: 203:                         EUSART2_Write(0x0
      +                          E);
  2587  0001A8  0E0E               	movlw	14
  2588  0001AA  EC7B  F006         	call	i2_EUSART2_Write
  2589  0001AE  EF1B  F003         	goto	i2l470
  2590  0001B2                     i2l2404:
  2591                           
  2592                           ;mcc_generated_files/interrupt_manager.c: 210:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  2593  0001B2  0E01               	movlw	1
  2594  0001B4  6E1C               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  2595  0001B6                     
  2596                           ;mcc_generated_files/interrupt_manager.c: 212:                 if (!PORTBbits.RB1) {
  2597  0001B6  B281               	btfsc	129,1,c	;volatile
  2598  0001B8  EFE0  F000         	goto	i2u95_41
  2599  0001BC  EFE2  F000         	goto	i2u95_40
  2600  0001C0                     i2u95_41:
  2601  0001C0  EFE9  F000         	goto	i2l2412
  2602  0001C4                     i2u95_40:
  2603  0001C4                     
  2604                           ;mcc_generated_files/interrupt_manager.c: 213:                     interruptAction = NUL
      +                          L_ACTION;
  2605  0001C4  0E00               	movlw	0
  2606  0001C6  6E1B               	movwf	_interruptAction^0,c	;volatile
  2607  0001C8                     
  2608                           ;mcc_generated_files/interrupt_manager.c: 214:                     EUSART2_Write(0x10);
  2609  0001C8  0E10               	movlw	16
  2610  0001CA  EC7B  F006         	call	i2_EUSART2_Write
  2611                           
  2612                           ;mcc_generated_files/interrupt_manager.c: 215:                 } else {
  2613  0001CE  EF1B  F003         	goto	i2l470
  2614  0001D2                     i2l2412:
  2615                           
  2616                           ;mcc_generated_files/interrupt_manager.c: 216:                     interruptAction = STE
      +                          PPER_BACKWARD_UNTIL_STOP_HALF;
  2617  0001D2  0E05               	movlw	5
  2618  0001D4  6E1B               	movwf	_interruptAction^0,c	;volatile
  2619  0001D6                     
  2620                           ;mcc_generated_files/interrupt_manager.c: 217:                     if(!stepperIsAsleep()
      +                          ){
  2621  0001D6  EC59  F006         	call	_stepperIsAsleep	;wreg free
  2622  0001DA  0900               	iorlw	0
  2623  0001DC  A4D8               	btfss	status,2,c
  2624  0001DE  EFF3  F000         	goto	i2u96_41
  2625  0001E2  EFF5  F000         	goto	i2u96_40
  2626  0001E6                     i2u96_41:
  2627  0001E6  EF1B  F003         	goto	i2l467
  2628  0001EA                     i2u96_40:
  2629  0001EA                     
  2630                           ;mcc_generated_files/interrupt_manager.c: 219:                         EUSART2_Write(0x0
      +                          E);
  2631  0001EA  0E0E               	movlw	14
  2632  0001EC  EC7B  F006         	call	i2_EUSART2_Write
  2633  0001F0  EF1B  F003         	goto	i2l470
  2634  0001F4                     i2l2418:
  2635                           
  2636                           ;mcc_generated_files/interrupt_manager.c: 226:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  2637  0001F4  0E01               	movlw	1
  2638  0001F6  6E1C               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  2639  0001F8                     
  2640                           ;mcc_generated_files/interrupt_manager.c: 228:                 if (!PORTBbits.RB2) {
  2641  0001F8  B481               	btfsc	129,2,c	;volatile
  2642  0001FA  EF01  F001         	goto	i2u97_41
  2643  0001FE  EF03  F001         	goto	i2u97_40
  2644  000202                     i2u97_41:
  2645  000202  EF0A  F001         	goto	i2l2426
  2646  000206                     i2u97_40:
  2647  000206                     
  2648                           ;mcc_generated_files/interrupt_manager.c: 229:                     interruptAction = NUL
      +                          L_ACTION;
  2649  000206  0E00               	movlw	0
  2650  000208  6E1B               	movwf	_interruptAction^0,c	;volatile
  2651  00020A                     
  2652                           ;mcc_generated_files/interrupt_manager.c: 230:                     EUSART2_Write(0x0F);
  2653  00020A  0E0F               	movlw	15
  2654  00020C  EC7B  F006         	call	i2_EUSART2_Write
  2655                           
  2656                           ;mcc_generated_files/interrupt_manager.c: 231:                 } else {
  2657  000210  EF1B  F003         	goto	i2l470
  2658  000214                     i2l2426:
  2659                           
  2660                           ;mcc_generated_files/interrupt_manager.c: 232:                     interruptAction = STE
      +                          PPER_FORWARD_UNTIL_STOP_QUARTER;
  2661  000214  0E06               	movlw	6
  2662  000216  6E1B               	movwf	_interruptAction^0,c	;volatile
  2663  000218                     
  2664                           ;mcc_generated_files/interrupt_manager.c: 233:                     if(!stepperIsAsleep()
      +                          ){
  2665  000218  EC59  F006         	call	_stepperIsAsleep	;wreg free
  2666  00021C  0900               	iorlw	0
  2667  00021E  A4D8               	btfss	status,2,c
  2668  000220  EF14  F001         	goto	i2u98_41
  2669  000224  EF16  F001         	goto	i2u98_40
  2670  000228                     i2u98_41:
  2671  000228  EF1B  F003         	goto	i2l467
  2672  00022C                     i2u98_40:
  2673  00022C                     
  2674                           ;mcc_generated_files/interrupt_manager.c: 235:                         EUSART2_Write(0x0
      +                          E);
  2675  00022C  0E0E               	movlw	14
  2676  00022E  EC7B  F006         	call	i2_EUSART2_Write
  2677  000232  EF1B  F003         	goto	i2l470
  2678  000236                     i2l2432:
  2679                           
  2680                           ;mcc_generated_files/interrupt_manager.c: 243:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  2681  000236  0E01               	movlw	1
  2682  000238  6E1C               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  2683  00023A                     
  2684                           ;mcc_generated_files/interrupt_manager.c: 245:                 if (!PORTBbits.RB1) {
  2685  00023A  B281               	btfsc	129,1,c	;volatile
  2686  00023C  EF22  F001         	goto	i2u99_41
  2687  000240  EF24  F001         	goto	i2u99_40
  2688  000244                     i2u99_41:
  2689  000244  EF2B  F001         	goto	i2l2440
  2690  000248                     i2u99_40:
  2691  000248                     
  2692                           ;mcc_generated_files/interrupt_manager.c: 246:                     interruptAction = NUL
      +                          L_ACTION;
  2693  000248  0E00               	movlw	0
  2694  00024A  6E1B               	movwf	_interruptAction^0,c	;volatile
  2695  00024C                     
  2696                           ;mcc_generated_files/interrupt_manager.c: 247:                     EUSART2_Write(0x10);
  2697  00024C  0E10               	movlw	16
  2698  00024E  EC7B  F006         	call	i2_EUSART2_Write
  2699                           
  2700                           ;mcc_generated_files/interrupt_manager.c: 248:                 } else {
  2701  000252  EF1B  F003         	goto	i2l470
  2702  000256                     i2l2440:
  2703                           
  2704                           ;mcc_generated_files/interrupt_manager.c: 249:                     interruptAction = STE
      +                          PPER_BACKWARD_UNTIL_STOP_QUARTER;
  2705  000256  0E07               	movlw	7
  2706  000258  6E1B               	movwf	_interruptAction^0,c	;volatile
  2707  00025A                     
  2708                           ;mcc_generated_files/interrupt_manager.c: 250:                     if(!stepperIsAsleep()
      +                          ){
  2709  00025A  EC59  F006         	call	_stepperIsAsleep	;wreg free
  2710  00025E  0900               	iorlw	0
  2711  000260  A4D8               	btfss	status,2,c
  2712  000262  EF35  F001         	goto	i2u100_41
  2713  000266  EF37  F001         	goto	i2u100_40
  2714  00026A                     i2u100_41:
  2715  00026A  EF1B  F003         	goto	i2l467
  2716  00026E                     i2u100_40:
  2717  00026E                     
  2718                           ;mcc_generated_files/interrupt_manager.c: 252:                         EUSART2_Write(0x0
      +                          E);
  2719  00026E  0E0E               	movlw	14
  2720  000270  EC7B  F006         	call	i2_EUSART2_Write
  2721  000274  EF1B  F003         	goto	i2l470
  2722  000278                     i2l2446:
  2723                           
  2724                           ;mcc_generated_files/interrupt_manager.c: 259:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  2725  000278  0E01               	movlw	1
  2726  00027A  6E1C               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  2727  00027C                     
  2728                           ;mcc_generated_files/interrupt_manager.c: 261:                 if (!PORTBbits.RB2) {
  2729  00027C  B481               	btfsc	129,2,c	;volatile
  2730  00027E  EF43  F001         	goto	i2u101_41
  2731  000282  EF45  F001         	goto	i2u101_40
  2732  000286                     i2u101_41:
  2733  000286  EF4C  F001         	goto	i2l2454
  2734  00028A                     i2u101_40:
  2735  00028A                     
  2736                           ;mcc_generated_files/interrupt_manager.c: 262:                     interruptAction = NUL
      +                          L_ACTION;
  2737  00028A  0E00               	movlw	0
  2738  00028C  6E1B               	movwf	_interruptAction^0,c	;volatile
  2739  00028E                     
  2740                           ;mcc_generated_files/interrupt_manager.c: 263:                     EUSART2_Write(0x0F);
  2741  00028E  0E0F               	movlw	15
  2742  000290  EC7B  F006         	call	i2_EUSART2_Write
  2743                           
  2744                           ;mcc_generated_files/interrupt_manager.c: 264:                 } else {
  2745  000294  EF1B  F003         	goto	i2l470
  2746  000298                     i2l2454:
  2747                           
  2748                           ;mcc_generated_files/interrupt_manager.c: 265:                     interruptAction = STE
      +                          PPER_FORWARD_UNTIL_STOP_EIGHTH;
  2749  000298  0E08               	movlw	8
  2750  00029A  6E1B               	movwf	_interruptAction^0,c	;volatile
  2751  00029C                     
  2752                           ;mcc_generated_files/interrupt_manager.c: 266:                     if(!stepperIsAsleep()
      +                          ){
  2753  00029C  EC59  F006         	call	_stepperIsAsleep	;wreg free
  2754  0002A0  0900               	iorlw	0
  2755  0002A2  A4D8               	btfss	status,2,c
  2756  0002A4  EF56  F001         	goto	i2u102_41
  2757  0002A8  EF58  F001         	goto	i2u102_40
  2758  0002AC                     i2u102_41:
  2759  0002AC  EF1B  F003         	goto	i2l467
  2760  0002B0                     i2u102_40:
  2761  0002B0                     
  2762                           ;mcc_generated_files/interrupt_manager.c: 268:                         EUSART2_Write(0x0
      +                          E);
  2763  0002B0  0E0E               	movlw	14
  2764  0002B2  EC7B  F006         	call	i2_EUSART2_Write
  2765  0002B6  EF1B  F003         	goto	i2l470
  2766  0002BA                     i2l2460:
  2767                           
  2768                           ;mcc_generated_files/interrupt_manager.c: 275:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  2769  0002BA  0E01               	movlw	1
  2770  0002BC  6E1C               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  2771  0002BE                     
  2772                           ;mcc_generated_files/interrupt_manager.c: 277:                 if (!PORTBbits.RB1) {
  2773  0002BE  B281               	btfsc	129,1,c	;volatile
  2774  0002C0  EF64  F001         	goto	i2u103_41
  2775  0002C4  EF66  F001         	goto	i2u103_40
  2776  0002C8                     i2u103_41:
  2777  0002C8  EF6D  F001         	goto	i2l2468
  2778  0002CC                     i2u103_40:
  2779  0002CC                     
  2780                           ;mcc_generated_files/interrupt_manager.c: 278:                     interruptAction = NUL
      +                          L_ACTION;
  2781  0002CC  0E00               	movlw	0
  2782  0002CE  6E1B               	movwf	_interruptAction^0,c	;volatile
  2783  0002D0                     
  2784                           ;mcc_generated_files/interrupt_manager.c: 279:                     EUSART2_Write(0x10);
  2785  0002D0  0E10               	movlw	16
  2786  0002D2  EC7B  F006         	call	i2_EUSART2_Write
  2787                           
  2788                           ;mcc_generated_files/interrupt_manager.c: 280:                 } else {
  2789  0002D6  EF1B  F003         	goto	i2l470
  2790  0002DA                     i2l2468:
  2791                           
  2792                           ;mcc_generated_files/interrupt_manager.c: 281:                     interruptAction = STE
      +                          PPER_BACKWARD_UNTIL_STOP_EIGHTH;
  2793  0002DA  0E09               	movlw	9
  2794  0002DC  6E1B               	movwf	_interruptAction^0,c	;volatile
  2795  0002DE                     
  2796                           ;mcc_generated_files/interrupt_manager.c: 282:                     if(!stepperIsAsleep()
      +                          ){
  2797  0002DE  EC59  F006         	call	_stepperIsAsleep	;wreg free
  2798  0002E2  0900               	iorlw	0
  2799  0002E4  A4D8               	btfss	status,2,c
  2800  0002E6  EF77  F001         	goto	i2u104_41
  2801  0002EA  EF79  F001         	goto	i2u104_40
  2802  0002EE                     i2u104_41:
  2803  0002EE  EF1B  F003         	goto	i2l467
  2804  0002F2                     i2u104_40:
  2805  0002F2                     
  2806                           ;mcc_generated_files/interrupt_manager.c: 284:                         EUSART2_Write(0x0
      +                          E);
  2807  0002F2  0E0E               	movlw	14
  2808  0002F4  EC7B  F006         	call	i2_EUSART2_Write
  2809  0002F8  EF1B  F003         	goto	i2l470
  2810  0002FC                     i2l2474:
  2811                           
  2812                           ;mcc_generated_files/interrupt_manager.c: 291:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  2813  0002FC  0E01               	movlw	1
  2814  0002FE  6E1C               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  2815  000300                     
  2816                           ;mcc_generated_files/interrupt_manager.c: 293:                 if (!PORTBbits.RB2) {
  2817  000300  B481               	btfsc	129,2,c	;volatile
  2818  000302  EF85  F001         	goto	i2u105_41
  2819  000306  EF87  F001         	goto	i2u105_40
  2820  00030A                     i2u105_41:
  2821  00030A  EF8E  F001         	goto	i2l2482
  2822  00030E                     i2u105_40:
  2823  00030E                     
  2824                           ;mcc_generated_files/interrupt_manager.c: 294:                     interruptAction = NUL
      +                          L_ACTION;
  2825  00030E  0E00               	movlw	0
  2826  000310  6E1B               	movwf	_interruptAction^0,c	;volatile
  2827  000312                     
  2828                           ;mcc_generated_files/interrupt_manager.c: 295:                     EUSART2_Write(0x0F);
  2829  000312  0E0F               	movlw	15
  2830  000314  EC7B  F006         	call	i2_EUSART2_Write
  2831                           
  2832                           ;mcc_generated_files/interrupt_manager.c: 296:                 } else {
  2833  000318  EF1B  F003         	goto	i2l470
  2834  00031C                     i2l2482:
  2835                           
  2836                           ;mcc_generated_files/interrupt_manager.c: 297:                     interruptAction = STE
      +                          PPER_FORWARD_UNTIL_STOP_SIXTEENTH;
  2837  00031C  0E0A               	movlw	10
  2838  00031E  6E1B               	movwf	_interruptAction^0,c	;volatile
  2839  000320                     
  2840                           ;mcc_generated_files/interrupt_manager.c: 298:                     if(!stepperIsAsleep()
      +                          ){
  2841  000320  EC59  F006         	call	_stepperIsAsleep	;wreg free
  2842  000324  0900               	iorlw	0
  2843  000326  A4D8               	btfss	status,2,c
  2844  000328  EF98  F001         	goto	i2u106_41
  2845  00032C  EF9A  F001         	goto	i2u106_40
  2846  000330                     i2u106_41:
  2847  000330  EF1B  F003         	goto	i2l467
  2848  000334                     i2u106_40:
  2849  000334                     
  2850                           ;mcc_generated_files/interrupt_manager.c: 300:                         EUSART2_Write(0x0
      +                          E);
  2851  000334  0E0E               	movlw	14
  2852  000336  EC7B  F006         	call	i2_EUSART2_Write
  2853  00033A  EF1B  F003         	goto	i2l470
  2854  00033E                     i2l2488:
  2855                           
  2856                           ;mcc_generated_files/interrupt_manager.c: 307:                 INTERRUPT_STEPPER_BREAK_F
      +                          LAG = 1;
  2857  00033E  0E01               	movlw	1
  2858  000340  6E1C               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  2859  000342                     
  2860                           ;mcc_generated_files/interrupt_manager.c: 309:                 if (!PORTBbits.RB1) {
  2861  000342  B281               	btfsc	129,1,c	;volatile
  2862  000344  EFA6  F001         	goto	i2u107_41
  2863  000348  EFA8  F001         	goto	i2u107_40
  2864  00034C                     i2u107_41:
  2865  00034C  EFAF  F001         	goto	i2l2496
  2866  000350                     i2u107_40:
  2867  000350                     
  2868                           ;mcc_generated_files/interrupt_manager.c: 310:                     interruptAction = NUL
      +                          L_ACTION;
  2869  000350  0E00               	movlw	0
  2870  000352  6E1B               	movwf	_interruptAction^0,c	;volatile
  2871  000354                     
  2872                           ;mcc_generated_files/interrupt_manager.c: 311:                     EUSART2_Write(0x10);
  2873  000354  0E10               	movlw	16
  2874  000356  EC7B  F006         	call	i2_EUSART2_Write
  2875                           
  2876                           ;mcc_generated_files/interrupt_manager.c: 312:                 } else {
  2877  00035A  EF1B  F003         	goto	i2l470
  2878  00035E                     i2l2496:
  2879                           
  2880                           ;mcc_generated_files/interrupt_manager.c: 313:                     interruptAction = STE
      +                          PPER_BACKWARD_UNTIL_STOP_SIXTEENTH;
  2881  00035E  0E0B               	movlw	11
  2882  000360  6E1B               	movwf	_interruptAction^0,c	;volatile
  2883  000362                     
  2884                           ;mcc_generated_files/interrupt_manager.c: 314:                     if(!stepperIsAsleep()
      +                          ){
  2885  000362  EC59  F006         	call	_stepperIsAsleep	;wreg free
  2886  000366  0900               	iorlw	0
  2887  000368  A4D8               	btfss	status,2,c
  2888  00036A  EFB9  F001         	goto	i2u108_41
  2889  00036E  EFBB  F001         	goto	i2u108_40
  2890  000372                     i2u108_41:
  2891  000372  EF1B  F003         	goto	i2l467
  2892  000376                     i2u108_40:
  2893  000376                     
  2894                           ;mcc_generated_files/interrupt_manager.c: 316:                         EUSART2_Write(0x0
      +                          E);
  2895  000376  0E0E               	movlw	14
  2896  000378  EC7B  F006         	call	i2_EUSART2_Write
  2897  00037C  EF1B  F003         	goto	i2l470
  2898  000380                     i2l2502:
  2899                           
  2900                           ;mcc_generated_files/interrupt_manager.c: 323:                 setBloodPumpPWM(0);
  2901  000380  0E00               	movlw	0
  2902  000382  6E06               	movwf	(setBloodPumpPWM@pwm+1)^0,c
  2903  000384  0E00               	movlw	0
  2904  000386  6E05               	movwf	setBloodPumpPWM@pwm^0,c
  2905  000388  EC9C  F004         	call	_setBloodPumpPWM	;wreg free
  2906                           
  2907                           ;mcc_generated_files/interrupt_manager.c: 324:                 break;
  2908  00038C  EF1B  F003         	goto	i2l470
  2909  000390                     i2l2504:
  2910                           
  2911                           ;mcc_generated_files/interrupt_manager.c: 327:                 setBloodPumpPWM(50);
  2912  000390  0E00               	movlw	0
  2913  000392  6E06               	movwf	(setBloodPumpPWM@pwm+1)^0,c
  2914  000394  0E32               	movlw	50
  2915  000396  6E05               	movwf	setBloodPumpPWM@pwm^0,c
  2916  000398  EC9C  F004         	call	_setBloodPumpPWM	;wreg free
  2917                           
  2918                           ;mcc_generated_files/interrupt_manager.c: 328:                 break;
  2919  00039C  EF1B  F003         	goto	i2l470
  2920  0003A0                     i2l2506:
  2921                           
  2922                           ;mcc_generated_files/interrupt_manager.c: 331:                 setBloodPumpPWM(100);
  2923  0003A0  0E00               	movlw	0
  2924  0003A2  6E06               	movwf	(setBloodPumpPWM@pwm+1)^0,c
  2925  0003A4  0E64               	movlw	100
  2926  0003A6  6E05               	movwf	setBloodPumpPWM@pwm^0,c
  2927  0003A8  EC9C  F004         	call	_setBloodPumpPWM	;wreg free
  2928                           
  2929                           ;mcc_generated_files/interrupt_manager.c: 332:                 break;
  2930  0003AC  EF1B  F003         	goto	i2l470
  2931  0003B0                     i2l2508:
  2932                           
  2933                           ;mcc_generated_files/interrupt_manager.c: 335:                 setBloodPumpPWM(150);
  2934  0003B0  0E00               	movlw	0
  2935  0003B2  6E06               	movwf	(setBloodPumpPWM@pwm+1)^0,c
  2936  0003B4  0E96               	movlw	150
  2937  0003B6  6E05               	movwf	setBloodPumpPWM@pwm^0,c
  2938  0003B8  EC9C  F004         	call	_setBloodPumpPWM	;wreg free
  2939                           
  2940                           ;mcc_generated_files/interrupt_manager.c: 336:                 break;
  2941  0003BC  EF1B  F003         	goto	i2l470
  2942  0003C0                     i2l2510:
  2943                           
  2944                           ;mcc_generated_files/interrupt_manager.c: 339:                 setBloodPumpPWM(200);
  2945  0003C0  0E00               	movlw	0
  2946  0003C2  6E06               	movwf	(setBloodPumpPWM@pwm+1)^0,c
  2947  0003C4  0EC8               	movlw	200
  2948  0003C6  6E05               	movwf	setBloodPumpPWM@pwm^0,c
  2949  0003C8  EC9C  F004         	call	_setBloodPumpPWM	;wreg free
  2950                           
  2951                           ;mcc_generated_files/interrupt_manager.c: 340:                 break;
  2952  0003CC  EF1B  F003         	goto	i2l470
  2953  0003D0                     i2l2512:
  2954                           
  2955                           ;mcc_generated_files/interrupt_manager.c: 343:                 setBloodPumpPWM(250);
  2956  0003D0  0E00               	movlw	0
  2957  0003D2  6E06               	movwf	(setBloodPumpPWM@pwm+1)^0,c
  2958  0003D4  0EFA               	movlw	250
  2959  0003D6  6E05               	movwf	setBloodPumpPWM@pwm^0,c
  2960  0003D8  EC9C  F004         	call	_setBloodPumpPWM	;wreg free
  2961                           
  2962                           ;mcc_generated_files/interrupt_manager.c: 344:                 break;
  2963  0003DC  EF1B  F003         	goto	i2l470
  2964  0003E0                     i2l2514:
  2965                           
  2966                           ;mcc_generated_files/interrupt_manager.c: 347:                 setBloodPumpPWM(300);
  2967  0003E0  0E01               	movlw	1
  2968  0003E2  6E06               	movwf	(setBloodPumpPWM@pwm+1)^0,c
  2969  0003E4  0E2C               	movlw	44
  2970  0003E6  6E05               	movwf	setBloodPumpPWM@pwm^0,c
  2971  0003E8  EC9C  F004         	call	_setBloodPumpPWM	;wreg free
  2972                           
  2973                           ;mcc_generated_files/interrupt_manager.c: 348:                 break;
  2974  0003EC  EF1B  F003         	goto	i2l470
  2975  0003F0                     i2l2516:
  2976                           
  2977                           ;mcc_generated_files/interrupt_manager.c: 351:                 setBloodPumpPWM(350);
  2978  0003F0  0E01               	movlw	1
  2979  0003F2  6E06               	movwf	(setBloodPumpPWM@pwm+1)^0,c
  2980  0003F4  0E5E               	movlw	94
  2981  0003F6  6E05               	movwf	setBloodPumpPWM@pwm^0,c
  2982  0003F8  EC9C  F004         	call	_setBloodPumpPWM	;wreg free
  2983                           
  2984                           ;mcc_generated_files/interrupt_manager.c: 352:                 break;
  2985  0003FC  EF1B  F003         	goto	i2l470
  2986  000400                     i2l2518:
  2987                           
  2988                           ;mcc_generated_files/interrupt_manager.c: 355:                 setBloodPumpPWM(400);
  2989  000400  0E01               	movlw	1
  2990  000402  6E06               	movwf	(setBloodPumpPWM@pwm+1)^0,c
  2991  000404  0E90               	movlw	144
  2992  000406  6E05               	movwf	setBloodPumpPWM@pwm^0,c
  2993  000408  EC9C  F004         	call	_setBloodPumpPWM	;wreg free
  2994                           
  2995                           ;mcc_generated_files/interrupt_manager.c: 356:                 break;
  2996  00040C  EF1B  F003         	goto	i2l470
  2997  000410                     i2l2520:
  2998                           
  2999                           ;mcc_generated_files/interrupt_manager.c: 359:                 setBloodPumpPWM(450);
  3000  000410  0E01               	movlw	1
  3001  000412  6E06               	movwf	(setBloodPumpPWM@pwm+1)^0,c
  3002  000414  0EC2               	movlw	194
  3003  000416  6E05               	movwf	setBloodPumpPWM@pwm^0,c
  3004  000418  EC9C  F004         	call	_setBloodPumpPWM	;wreg free
  3005                           
  3006                           ;mcc_generated_files/interrupt_manager.c: 360:                 break;
  3007  00041C  EF1B  F003         	goto	i2l470
  3008  000420                     i2l2522:
  3009                           
  3010                           ;mcc_generated_files/interrupt_manager.c: 363:                 setBloodPumpPWM(499);
  3011  000420  0E01               	movlw	1
  3012  000422  6E06               	movwf	(setBloodPumpPWM@pwm+1)^0,c
  3013  000424  0EF3               	movlw	243
  3014  000426  6E05               	movwf	setBloodPumpPWM@pwm^0,c
  3015  000428  EC9C  F004         	call	_setBloodPumpPWM	;wreg free
  3016                           
  3017                           ;mcc_generated_files/interrupt_manager.c: 364:                 break;
  3018  00042C  EF1B  F003         	goto	i2l470
  3019  000430                     i2l2524:
  3020                           
  3021                           ;mcc_generated_files/interrupt_manager.c: 367:                 setAmnioticPumpPWM(0);
  3022  000430  0E00               	movlw	0
  3023  000432  6E06               	movwf	(setAmnioticPumpPWM@pwm+1)^0,c
  3024  000434  0E00               	movlw	0
  3025  000436  6E05               	movwf	setAmnioticPumpPWM@pwm^0,c
  3026  000438  ECC1  F004         	call	_setAmnioticPumpPWM	;wreg free
  3027                           
  3028                           ;mcc_generated_files/interrupt_manager.c: 368:                 break;
  3029  00043C  EF1B  F003         	goto	i2l470
  3030  000440                     i2l2526:
  3031                           
  3032                           ;mcc_generated_files/interrupt_manager.c: 371:                 setAmnioticPumpPWM(50);
  3033  000440  0E00               	movlw	0
  3034  000442  6E06               	movwf	(setAmnioticPumpPWM@pwm+1)^0,c
  3035  000444  0E32               	movlw	50
  3036  000446  6E05               	movwf	setAmnioticPumpPWM@pwm^0,c
  3037  000448  ECC1  F004         	call	_setAmnioticPumpPWM	;wreg free
  3038                           
  3039                           ;mcc_generated_files/interrupt_manager.c: 372:                 break;
  3040  00044C  EF1B  F003         	goto	i2l470
  3041  000450                     i2l2528:
  3042                           
  3043                           ;mcc_generated_files/interrupt_manager.c: 375:                 setAmnioticPumpPWM(100);
  3044  000450  0E00               	movlw	0
  3045  000452  6E06               	movwf	(setAmnioticPumpPWM@pwm+1)^0,c
  3046  000454  0E64               	movlw	100
  3047  000456  6E05               	movwf	setAmnioticPumpPWM@pwm^0,c
  3048  000458  ECC1  F004         	call	_setAmnioticPumpPWM	;wreg free
  3049                           
  3050                           ;mcc_generated_files/interrupt_manager.c: 376:                 break;
  3051  00045C  EF1B  F003         	goto	i2l470
  3052  000460                     i2l2530:
  3053                           
  3054                           ;mcc_generated_files/interrupt_manager.c: 379:                 setAmnioticPumpPWM(150);
  3055  000460  0E00               	movlw	0
  3056  000462  6E06               	movwf	(setAmnioticPumpPWM@pwm+1)^0,c
  3057  000464  0E96               	movlw	150
  3058  000466  6E05               	movwf	setAmnioticPumpPWM@pwm^0,c
  3059  000468  ECC1  F004         	call	_setAmnioticPumpPWM	;wreg free
  3060                           
  3061                           ;mcc_generated_files/interrupt_manager.c: 380:                 break;
  3062  00046C  EF1B  F003         	goto	i2l470
  3063  000470                     i2l2532:
  3064                           
  3065                           ;mcc_generated_files/interrupt_manager.c: 383:                 setAmnioticPumpPWM(200);
  3066  000470  0E00               	movlw	0
  3067  000472  6E06               	movwf	(setAmnioticPumpPWM@pwm+1)^0,c
  3068  000474  0EC8               	movlw	200
  3069  000476  6E05               	movwf	setAmnioticPumpPWM@pwm^0,c
  3070  000478  ECC1  F004         	call	_setAmnioticPumpPWM	;wreg free
  3071                           
  3072                           ;mcc_generated_files/interrupt_manager.c: 384:                 break;
  3073  00047C  EF1B  F003         	goto	i2l470
  3074  000480                     i2l2534:
  3075                           
  3076                           ;mcc_generated_files/interrupt_manager.c: 387:                 setAmnioticPumpPWM(250);
  3077  000480  0E00               	movlw	0
  3078  000482  6E06               	movwf	(setAmnioticPumpPWM@pwm+1)^0,c
  3079  000484  0EFA               	movlw	250
  3080  000486  6E05               	movwf	setAmnioticPumpPWM@pwm^0,c
  3081  000488  ECC1  F004         	call	_setAmnioticPumpPWM	;wreg free
  3082                           
  3083                           ;mcc_generated_files/interrupt_manager.c: 388:                 break;
  3084  00048C  EF1B  F003         	goto	i2l470
  3085  000490                     i2l2536:
  3086                           
  3087                           ;mcc_generated_files/interrupt_manager.c: 391:                 setAmnioticPumpPWM(300);
  3088  000490  0E01               	movlw	1
  3089  000492  6E06               	movwf	(setAmnioticPumpPWM@pwm+1)^0,c
  3090  000494  0E2C               	movlw	44
  3091  000496  6E05               	movwf	setAmnioticPumpPWM@pwm^0,c
  3092  000498  ECC1  F004         	call	_setAmnioticPumpPWM	;wreg free
  3093                           
  3094                           ;mcc_generated_files/interrupt_manager.c: 392:                 break;
  3095  00049C  EF1B  F003         	goto	i2l470
  3096  0004A0                     i2l2538:
  3097                           
  3098                           ;mcc_generated_files/interrupt_manager.c: 395:                 setAmnioticPumpPWM(350);
  3099  0004A0  0E01               	movlw	1
  3100  0004A2  6E06               	movwf	(setAmnioticPumpPWM@pwm+1)^0,c
  3101  0004A4  0E5E               	movlw	94
  3102  0004A6  6E05               	movwf	setAmnioticPumpPWM@pwm^0,c
  3103  0004A8  ECC1  F004         	call	_setAmnioticPumpPWM	;wreg free
  3104                           
  3105                           ;mcc_generated_files/interrupt_manager.c: 396:                 break;
  3106  0004AC  EF1B  F003         	goto	i2l470
  3107  0004B0                     i2l2540:
  3108                           
  3109                           ;mcc_generated_files/interrupt_manager.c: 399:                 setAmnioticPumpPWM(400);
  3110  0004B0  0E01               	movlw	1
  3111  0004B2  6E06               	movwf	(setAmnioticPumpPWM@pwm+1)^0,c
  3112  0004B4  0E90               	movlw	144
  3113  0004B6  6E05               	movwf	setAmnioticPumpPWM@pwm^0,c
  3114  0004B8  ECC1  F004         	call	_setAmnioticPumpPWM	;wreg free
  3115                           
  3116                           ;mcc_generated_files/interrupt_manager.c: 400:                 break;
  3117  0004BC  EF1B  F003         	goto	i2l470
  3118  0004C0                     i2l2542:
  3119                           
  3120                           ;mcc_generated_files/interrupt_manager.c: 403:                 setAmnioticPumpPWM(450);
  3121  0004C0  0E01               	movlw	1
  3122  0004C2  6E06               	movwf	(setAmnioticPumpPWM@pwm+1)^0,c
  3123  0004C4  0EC2               	movlw	194
  3124  0004C6  6E05               	movwf	setAmnioticPumpPWM@pwm^0,c
  3125  0004C8  ECC1  F004         	call	_setAmnioticPumpPWM	;wreg free
  3126                           
  3127                           ;mcc_generated_files/interrupt_manager.c: 404:                 break;
  3128  0004CC  EF1B  F003         	goto	i2l470
  3129  0004D0                     i2l2544:
  3130                           
  3131                           ;mcc_generated_files/interrupt_manager.c: 407:                 setAmnioticPumpPWM(499);
  3132  0004D0  0E01               	movlw	1
  3133  0004D2  6E06               	movwf	(setAmnioticPumpPWM@pwm+1)^0,c
  3134  0004D4  0EF3               	movlw	243
  3135  0004D6  6E05               	movwf	setAmnioticPumpPWM@pwm^0,c
  3136  0004D8  ECC1  F004         	call	_setAmnioticPumpPWM	;wreg free
  3137                           
  3138                           ;mcc_generated_files/interrupt_manager.c: 408:                 break;
  3139  0004DC  EF1B  F003         	goto	i2l470
  3140  0004E0                     i2l2548:
  3141  0004E0  501D               	movf	_UART_RX_in^0,w,c	;volatile
  3142  0004E2  6E07               	movwf	??_INTERRUPT_InterruptManager^0,c
  3143  0004E4  6A08               	clrf	(??_INTERRUPT_InterruptManager+1)^0,c
  3144                           
  3145                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3146                           ; Switch size 1, requested type "simple"
  3147                           ; Number of cases is 1, Range of values is 0 to 0
  3148                           ; switch strategies available:
  3149                           ; Name         Instructions Cycles
  3150                           ; simple_byte            4     3 (average)
  3151                           ;	Chosen strategy is simple_byte
  3152  0004E6  5008               	movf	(??_INTERRUPT_InterruptManager+1)^0,w,c
  3153  0004E8  0A00               	xorlw	0	; case 0
  3154  0004EA  B4D8               	btfsc	status,2,c
  3155  0004EC  EF7A  F002         	goto	i2l2708
  3156  0004F0  EF1B  F003         	goto	i2l467
  3157  0004F4                     i2l2708:
  3158                           
  3159                           ; Switch size 1, requested type "simple"
  3160                           ; Number of cases is 35, Range of values is 16 to 231
  3161                           ; switch strategies available:
  3162                           ; Name         Instructions Cycles
  3163                           ; simple_byte          106    54 (average)
  3164                           ;	Chosen strategy is simple_byte
  3165  0004F4  5007               	movf	??_INTERRUPT_InterruptManager^0,w,c
  3166  0004F6  0A10               	xorlw	16	; case 16
  3167  0004F8  B4D8               	btfsc	status,2,c
  3168  0004FA  EFC0  F001         	goto	i2l2502
  3169  0004FE  0A01               	xorlw	1	; case 17
  3170  000500  B4D8               	btfsc	status,2,c
  3171  000502  EFC8  F001         	goto	i2l2504
  3172  000506  0A03               	xorlw	3	; case 18
  3173  000508  B4D8               	btfsc	status,2,c
  3174  00050A  EFD0  F001         	goto	i2l2506
  3175  00050E  0A01               	xorlw	1	; case 19
  3176  000510  B4D8               	btfsc	status,2,c
  3177  000512  EFD8  F001         	goto	i2l2508
  3178  000516  0A07               	xorlw	7	; case 20
  3179  000518  B4D8               	btfsc	status,2,c
  3180  00051A  EFE0  F001         	goto	i2l2510
  3181  00051E  0A01               	xorlw	1	; case 21
  3182  000520  B4D8               	btfsc	status,2,c
  3183  000522  EFE8  F001         	goto	i2l2512
  3184  000526  0A03               	xorlw	3	; case 22
  3185  000528  B4D8               	btfsc	status,2,c
  3186  00052A  EFF0  F001         	goto	i2l2514
  3187  00052E  0A01               	xorlw	1	; case 23
  3188  000530  B4D8               	btfsc	status,2,c
  3189  000532  EFF8  F001         	goto	i2l2516
  3190  000536  0A0F               	xorlw	15	; case 24
  3191  000538  B4D8               	btfsc	status,2,c
  3192  00053A  EF00  F002         	goto	i2l2518
  3193  00053E  0A01               	xorlw	1	; case 25
  3194  000540  B4D8               	btfsc	status,2,c
  3195  000542  EF08  F002         	goto	i2l2520
  3196  000546  0A03               	xorlw	3	; case 26
  3197  000548  B4D8               	btfsc	status,2,c
  3198  00054A  EF10  F002         	goto	i2l2522
  3199  00054E  0A01               	xorlw	1	; case 27
  3200  000550  B4D8               	btfsc	status,2,c
  3201  000552  EF18  F002         	goto	i2l2524
  3202  000556  0A07               	xorlw	7	; case 28
  3203  000558  B4D8               	btfsc	status,2,c
  3204  00055A  EF20  F002         	goto	i2l2526
  3205  00055E  0A01               	xorlw	1	; case 29
  3206  000560  B4D8               	btfsc	status,2,c
  3207  000562  EF28  F002         	goto	i2l2528
  3208  000566  0A03               	xorlw	3	; case 30
  3209  000568  B4D8               	btfsc	status,2,c
  3210  00056A  EF30  F002         	goto	i2l2530
  3211  00056E  0A01               	xorlw	1	; case 31
  3212  000570  B4D8               	btfsc	status,2,c
  3213  000572  EF38  F002         	goto	i2l2532
  3214  000576  0A3F               	xorlw	63	; case 32
  3215  000578  B4D8               	btfsc	status,2,c
  3216  00057A  EF40  F002         	goto	i2l2534
  3217  00057E  0A01               	xorlw	1	; case 33
  3218  000580  B4D8               	btfsc	status,2,c
  3219  000582  EF48  F002         	goto	i2l2536
  3220  000586  0A03               	xorlw	3	; case 34
  3221  000588  B4D8               	btfsc	status,2,c
  3222  00058A  EF50  F002         	goto	i2l2538
  3223  00058E  0A01               	xorlw	1	; case 35
  3224  000590  B4D8               	btfsc	status,2,c
  3225  000592  EF58  F002         	goto	i2l2540
  3226  000596  0A07               	xorlw	7	; case 36
  3227  000598  B4D8               	btfsc	status,2,c
  3228  00059A  EF60  F002         	goto	i2l2542
  3229  00059E  0A01               	xorlw	1	; case 37
  3230  0005A0  B4D8               	btfsc	status,2,c
  3231  0005A2  EF68  F002         	goto	i2l2544
  3232  0005A6  0A64               	xorlw	100	; case 65
  3233  0005A8  B4D8               	btfsc	status,2,c
  3234  0005AA  EF44  F000         	goto	i2l2346
  3235  0005AE  0A3B               	xorlw	59	; case 122
  3236  0005B0  B4D8               	btfsc	status,2,c
  3237  0005B2  EF44  F000         	goto	i2l2346
  3238  0005B6  0AAB               	xorlw	171	; case 209
  3239  0005B8  B4D8               	btfsc	status,2,c
  3240  0005BA  EF76  F000         	goto	i2l2362
  3241  0005BE  0A03               	xorlw	3	; case 210
  3242  0005C0  B4D8               	btfsc	status,2,c
  3243  0005C2  EF97  F000         	goto	i2l2376
  3244  0005C6  0A01               	xorlw	1	; case 211
  3245  0005C8  B4D8               	btfsc	status,2,c
  3246  0005CA  EFB8  F000         	goto	i2l2390
  3247  0005CE  0A07               	xorlw	7	; case 212
  3248  0005D0  B4D8               	btfsc	status,2,c
  3249  0005D2  EFD9  F000         	goto	i2l2404
  3250  0005D6  0A01               	xorlw	1	; case 213
  3251  0005D8  B4D8               	btfsc	status,2,c
  3252  0005DA  EF3C  F001         	goto	i2l2446
  3253  0005DE  0A03               	xorlw	3	; case 214
  3254  0005E0  B4D8               	btfsc	status,2,c
  3255  0005E2  EF5D  F001         	goto	i2l2460
  3256  0005E6  0A01               	xorlw	1	; case 215
  3257  0005E8  B4D8               	btfsc	status,2,c
  3258  0005EA  EF7E  F001         	goto	i2l2474
  3259  0005EE  0A0F               	xorlw	15	; case 216
  3260  0005F0  B4D8               	btfsc	status,2,c
  3261  0005F2  EF9F  F001         	goto	i2l2488
  3262  0005F6  0A3D               	xorlw	61	; case 229
  3263  0005F8  B4D8               	btfsc	status,2,c
  3264  0005FA  EF63  F000         	goto	i2l2356
  3265  0005FE  0A03               	xorlw	3	; case 230
  3266  000600  B4D8               	btfsc	status,2,c
  3267  000602  EFFA  F000         	goto	i2l2418
  3268  000606  0A01               	xorlw	1	; case 231
  3269  000608  B4D8               	btfsc	status,2,c
  3270  00060A  EF1B  F001         	goto	i2l2432
  3271  00060E  EF1B  F003         	goto	i2l467
  3272  000612                     i2l396:
  3273  000612  A6F2               	btfss	242,3,c	;volatile
  3274  000614  EF0E  F003         	goto	i2u109_41
  3275  000618  EF10  F003         	goto	i2u109_40
  3276  00061C                     i2u109_41:
  3277  00061C  EF1B  F003         	goto	i2l467
  3278  000620                     i2u109_40:
  3279  000620  A0F2               	btfss	242,0,c	;volatile
  3280  000622  EF15  F003         	goto	i2u110_41
  3281  000626  EF17  F003         	goto	i2u110_40
  3282  00062A                     i2u110_41:
  3283  00062A  EF1B  F003         	goto	i2l467
  3284  00062E                     i2u110_40:
  3285  00062E                     
  3286                           ;mcc_generated_files/interrupt_manager.c: 415:     {;mcc_generated_files/interrupt_manag
      +                          er.c: 419:         PIN_MANAGER_IOC();
  3287  00062E  EC70  F006         	call	_PIN_MANAGER_IOC	;wreg free
  3288                           
  3289                           ;mcc_generated_files/interrupt_manager.c: 420:     }
  3290  000632  EF1B  F003         	goto	i2l470
  3291  000636                     i2l467:
  3292  000636                     i2l470:
  3293  000636  C00A  FFFB         	movff	??_INTERRUPT_InterruptManager+3,pclatu
  3294  00063A  C009  FFFA         	movff	??_INTERRUPT_InterruptManager+2,pclath
  3295  00063E  922B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3296  000640  0011               	retfie		f
  3297  000642                     __end_of_INTERRUPT_InterruptManager:
  3298                           	callstack 0
  3299                           
  3300 ;; *************** function _setBloodPumpPWM *****************
  3301 ;; Defined at:
  3302 ;;		line 36 in file "pumps/pumps.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  pwm             2    4[COMRAM] unsigned short 
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;		None
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      void 
  3309 ;; Registers used:
  3310 ;;		wreg, status,2, status,0, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMRAM   BANK0   BANK1
  3316 ;;      Params:         2       0       0
  3317 ;;      Locals:         0       0       0
  3318 ;;      Temps:          0       0       0
  3319 ;;      Totals:         2       0       0
  3320 ;;Total ram usage:        2 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:    1
  3323 ;; This function calls:
  3324 ;;		_PWM4_LoadDutyValue
  3325 ;; This function is called by:
  3326 ;;		_INTERRUPT_InterruptManager
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           	psect	text30
  3331  000938                     __ptext30:
  3332                           	callstack 0
  3333  000938                     _setBloodPumpPWM:
  3334                           	callstack 25
  3335  000938                     
  3336                           ;pumps/pumps.c: 37:     PWM4_LoadDutyValue(pwm);
  3337  000938  C005  F001         	movff	setBloodPumpPWM@pwm,PWM4_LoadDutyValue@dutyValue
  3338  00093C  C006  F002         	movff	setBloodPumpPWM@pwm+1,PWM4_LoadDutyValue@dutyValue+1
  3339  000940  EC74  F005         	call	_PWM4_LoadDutyValue	;wreg free
  3340  000944                     
  3341                           ;pumps/pumps.c: 38:     Pumps.Blood_Pump_PWM = pwm;
  3342  000944  C005  F012         	movff	setBloodPumpPWM@pwm,_Pumps	;volatile
  3343  000948  C006  F013         	movff	setBloodPumpPWM@pwm+1,_Pumps+1	;volatile
  3344  00094C                     
  3345                           ;pumps/pumps.c: 39:     if(Pumps.Blood_Pump_PWM == 0){
  3346  00094C  5012               	movf	_Pumps^0,w,c	;volatile
  3347  00094E  1013               	iorwf	(_Pumps+1)^0,w,c	;volatile
  3348  000950  A4D8               	btfss	status,2,c
  3349  000952  EFAD  F004         	goto	i2u76_41
  3350  000956  EFAF  F004         	goto	i2u76_40
  3351  00095A                     i2u76_41:
  3352  00095A  EFBD  F004         	goto	i2l127
  3353  00095E                     i2u76_40:
  3354  00095E  968B               	bcf	139,3,c	;volatile
  3355  000960  9089               	bcf	137,0,c	;volatile
  3356  000962                     
  3357                           ;pumps/pumps.c: 41:         if(Pumps.Amniotic_Pump_PWM == 0){
  3358  000962  5014               	movf	(_Pumps+2)^0,w,c	;volatile
  3359  000964  1015               	iorwf	(_Pumps+3)^0,w,c	;volatile
  3360  000966  A4D8               	btfss	status,2,c
  3361  000968  EFB8  F004         	goto	i2u77_41
  3362  00096C  EFBA  F004         	goto	i2u77_40
  3363  000970                     i2u77_41:
  3364  000970  EFC0  F004         	goto	i2l134
  3365  000974                     i2u77_40:
  3366  000974  9489               	bcf	137,2,c	;volatile
  3367  000976  EFC0  F004         	goto	i2l134
  3368  00097A                     i2l127:
  3369  00097A  868B               	bsf	139,3,c	;volatile
  3370  00097C  8089               	bsf	137,0,c	;volatile
  3371  00097E  8489               	bsf	137,2,c	;volatile
  3372  000980                     i2l134:
  3373  000980  0012               	return		;funcret
  3374  000982                     __end_of_setBloodPumpPWM:
  3375                           	callstack 0
  3376                           
  3377 ;; *************** function _PWM4_LoadDutyValue *****************
  3378 ;; Defined at:
  3379 ;;		line 82 in file "mcc_generated_files/pwm4.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;  dutyValue       2    0[COMRAM] unsigned short 
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;		None
  3384 ;; Return value:  Size  Location     Type
  3385 ;;                  1    wreg      void 
  3386 ;; Registers used:
  3387 ;;		wreg, status,2, status,0
  3388 ;; Tracked objects:
  3389 ;;		On entry : 0/0
  3390 ;;		On exit  : 0/0
  3391 ;;		Unchanged: 0/0
  3392 ;; Data sizes:     COMRAM   BANK0   BANK1
  3393 ;;      Params:         2       0       0
  3394 ;;      Locals:         0       0       0
  3395 ;;      Temps:          2       0       0
  3396 ;;      Totals:         4       0       0
  3397 ;;Total ram usage:        4 bytes
  3398 ;; Hardware stack levels used:    1
  3399 ;; This function calls:
  3400 ;;		Nothing
  3401 ;; This function is called by:
  3402 ;;		_setBloodPumpPWM
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           	psect	text31
  3407  000AE8                     __ptext31:
  3408                           	callstack 0
  3409  000AE8                     _PWM4_LoadDutyValue:
  3410                           	callstack 25
  3411  000AE8                     
  3412                           ;mcc_generated_files/pwm4.c: 82: void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm4.c: 83: {;mcc_generated_files/pwm4.c: 85:     CCPR4L = ((dutyValue & 0x03FC
      +                          )>>2);
  3413  000AE8  C001  F003         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  3414  000AEC  C002  F004         	movff	PWM4_LoadDutyValue@dutyValue+1,??_PWM4_LoadDutyValue+1
  3415  000AF0  90D8               	bcf	status,0,c
  3416  000AF2  3204               	rrcf	(??_PWM4_LoadDutyValue+1)^0,f,c
  3417  000AF4  3203               	rrcf	??_PWM4_LoadDutyValue^0,f,c
  3418  000AF6  90D8               	bcf	status,0,c
  3419  000AF8  3204               	rrcf	(??_PWM4_LoadDutyValue+1)^0,f,c
  3420  000AFA  3203               	rrcf	??_PWM4_LoadDutyValue^0,f,c
  3421  000AFC  5003               	movf	??_PWM4_LoadDutyValue^0,w,c
  3422  000AFE  010F               	movlb	15	; () banked
  3423  000B00  6F58               	movwf	88,b	;volatile
  3424                           
  3425                           ;mcc_generated_files/pwm4.c: 88:     CCP4CON = ((uint8_t)(CCP4CON & 0xCF) | ((dutyValue 
      +                          & 0x0003)<<4));
  3426  000B02  C001  F003         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  3427  000B06  0E03               	movlw	3
  3428  000B08  1603               	andwf	??_PWM4_LoadDutyValue^0,f,c
  3429  000B0A  3A03               	swapf	??_PWM4_LoadDutyValue^0,f,c
  3430  000B0C  0EF0               	movlw	240
  3431  000B0E  1603               	andwf	??_PWM4_LoadDutyValue^0,f,c
  3432  000B10  5157               	movf	87,w,b	;volatile
  3433  000B12  0BCF               	andlw	207
  3434  000B14  1003               	iorwf	??_PWM4_LoadDutyValue^0,w,c
  3435  000B16  6F57               	movwf	87,b	;volatile
  3436  000B18                     
  3437                           ; BSR set to: 15
  3438  000B18  0012               	return		;funcret
  3439  000B1A                     __end_of_PWM4_LoadDutyValue:
  3440                           	callstack 0
  3441                           
  3442 ;; *************** function _setAmnioticPumpPWM *****************
  3443 ;; Defined at:
  3444 ;;		line 52 in file "pumps/pumps.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;  pwm             2    4[COMRAM] unsigned short 
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;		None
  3449 ;; Return value:  Size  Location     Type
  3450 ;;                  1    wreg      void 
  3451 ;; Registers used:
  3452 ;;		wreg, status,2, status,0, cstack
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMRAM   BANK0   BANK1
  3458 ;;      Params:         2       0       0
  3459 ;;      Locals:         0       0       0
  3460 ;;      Temps:          0       0       0
  3461 ;;      Totals:         2       0       0
  3462 ;;Total ram usage:        2 bytes
  3463 ;; Hardware stack levels used:    1
  3464 ;; Hardware stack levels required when called:    1
  3465 ;; This function calls:
  3466 ;;		_PWM5_LoadDutyValue
  3467 ;; This function is called by:
  3468 ;;		_INTERRUPT_InterruptManager
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           	psect	text32
  3473  000982                     __ptext32:
  3474                           	callstack 0
  3475  000982                     _setAmnioticPumpPWM:
  3476                           	callstack 25
  3477  000982                     
  3478                           ;pumps/pumps.c: 53:     PWM5_LoadDutyValue(pwm);
  3479  000982  C005  F001         	movff	setAmnioticPumpPWM@pwm,PWM5_LoadDutyValue@dutyValue
  3480  000986  C006  F002         	movff	setAmnioticPumpPWM@pwm+1,PWM5_LoadDutyValue@dutyValue+1
  3481  00098A  EC8D  F005         	call	_PWM5_LoadDutyValue	;wreg free
  3482  00098E                     
  3483                           ;pumps/pumps.c: 54:     Pumps.Amniotic_Pump_PWM = pwm;
  3484  00098E  C005  F014         	movff	setAmnioticPumpPWM@pwm,_Pumps+2	;volatile
  3485  000992  C006  F015         	movff	setAmnioticPumpPWM@pwm+1,_Pumps+3	;volatile
  3486  000996                     
  3487                           ;pumps/pumps.c: 55:     if(Pumps.Amniotic_Pump_PWM == 0){
  3488  000996  5014               	movf	(_Pumps+2)^0,w,c	;volatile
  3489  000998  1015               	iorwf	(_Pumps+3)^0,w,c	;volatile
  3490  00099A  A4D8               	btfss	status,2,c
  3491  00099C  EFD2  F004         	goto	i2u78_41
  3492  0009A0  EFD4  F004         	goto	i2u78_40
  3493  0009A4                     i2u78_41:
  3494  0009A4  EFE1  F004         	goto	i2l144
  3495  0009A8                     i2u78_40:
  3496  0009A8  9A89               	bcf	137,5,c	;volatile
  3497  0009AA                     
  3498                           ;pumps/pumps.c: 57:         if(Pumps.Blood_Pump_PWM == 0){
  3499  0009AA  5012               	movf	_Pumps^0,w,c	;volatile
  3500  0009AC  1013               	iorwf	(_Pumps+1)^0,w,c	;volatile
  3501  0009AE  A4D8               	btfss	status,2,c
  3502  0009B0  EFDC  F004         	goto	i2u79_41
  3503  0009B4  EFDE  F004         	goto	i2u79_40
  3504  0009B8                     i2u79_41:
  3505  0009B8  EFE3  F004         	goto	i2l148
  3506  0009BC                     i2u79_40:
  3507  0009BC  9489               	bcf	137,2,c	;volatile
  3508  0009BE  EFE3  F004         	goto	i2l148
  3509  0009C2                     i2l144:
  3510  0009C2  8A89               	bsf	137,5,c	;volatile
  3511  0009C4  8489               	bsf	137,2,c	;volatile
  3512  0009C6                     i2l148:
  3513  0009C6  0012               	return		;funcret
  3514  0009C8                     __end_of_setAmnioticPumpPWM:
  3515                           	callstack 0
  3516                           
  3517 ;; *************** function _PWM5_LoadDutyValue *****************
  3518 ;; Defined at:
  3519 ;;		line 82 in file "mcc_generated_files/pwm5.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  dutyValue       2    0[COMRAM] unsigned short 
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;		None
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      void 
  3526 ;; Registers used:
  3527 ;;		wreg, status,2, status,0
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMRAM   BANK0   BANK1
  3533 ;;      Params:         2       0       0
  3534 ;;      Locals:         0       0       0
  3535 ;;      Temps:          2       0       0
  3536 ;;      Totals:         4       0       0
  3537 ;;Total ram usage:        4 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; This function calls:
  3540 ;;		Nothing
  3541 ;; This function is called by:
  3542 ;;		_setAmnioticPumpPWM
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           	psect	text33
  3547  000B1A                     __ptext33:
  3548                           	callstack 0
  3549  000B1A                     _PWM5_LoadDutyValue:
  3550                           	callstack 25
  3551  000B1A                     
  3552                           ;mcc_generated_files/pwm5.c: 82: void PWM5_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm5.c: 83: {;mcc_generated_files/pwm5.c: 85:     CCPR5L = ((dutyValue & 0x03FC
      +                          )>>2);
  3553  000B1A  C001  F003         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  3554  000B1E  C002  F004         	movff	PWM5_LoadDutyValue@dutyValue+1,??_PWM5_LoadDutyValue+1
  3555  000B22  90D8               	bcf	status,0,c
  3556  000B24  3204               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  3557  000B26  3203               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  3558  000B28  90D8               	bcf	status,0,c
  3559  000B2A  3204               	rrcf	(??_PWM5_LoadDutyValue+1)^0,f,c
  3560  000B2C  3203               	rrcf	??_PWM5_LoadDutyValue^0,f,c
  3561  000B2E  5003               	movf	??_PWM5_LoadDutyValue^0,w,c
  3562  000B30  010F               	movlb	15	; () banked
  3563  000B32  6F55               	movwf	85,b	;volatile
  3564                           
  3565                           ;mcc_generated_files/pwm5.c: 88:     CCP5CON = ((uint8_t)(CCP5CON & 0xCF) | ((dutyValue 
      +                          & 0x0003)<<4));
  3566  000B34  C001  F003         	movff	PWM5_LoadDutyValue@dutyValue,??_PWM5_LoadDutyValue
  3567  000B38  0E03               	movlw	3
  3568  000B3A  1603               	andwf	??_PWM5_LoadDutyValue^0,f,c
  3569  000B3C  3A03               	swapf	??_PWM5_LoadDutyValue^0,f,c
  3570  000B3E  0EF0               	movlw	240
  3571  000B40  1603               	andwf	??_PWM5_LoadDutyValue^0,f,c
  3572  000B42  5154               	movf	84,w,b	;volatile
  3573  000B44  0BCF               	andlw	207
  3574  000B46  1003               	iorwf	??_PWM5_LoadDutyValue^0,w,c
  3575  000B48  6F54               	movwf	84,b	;volatile
  3576  000B4A                     
  3577                           ; BSR set to: 15
  3578  000B4A  0012               	return		;funcret
  3579  000B4C                     __end_of_PWM5_LoadDutyValue:
  3580                           	callstack 0
  3581                           
  3582 ;; *************** function _resetEncoderTicks *****************
  3583 ;; Defined at:
  3584 ;;		line 39 in file "encoder/encoder.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;		None
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg, status,2, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1
  3598 ;;      Params:         0       0       0
  3599 ;;      Locals:         0       0       0
  3600 ;;      Temps:          0       0       0
  3601 ;;      Totals:         0       0       0
  3602 ;;Total ram usage:        0 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    1
  3605 ;; This function calls:
  3606 ;;		i2_EUSART2_Write
  3607 ;; This function is called by:
  3608 ;;		_INTERRUPT_InterruptManager
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text34
  3613  000D68                     __ptext34:
  3614                           	callstack 0
  3615  000D68                     _resetEncoderTicks:
  3616                           	callstack 25
  3617  000D68                     
  3618                           ;encoder/encoder.c: 40:     encoder_ticks = 0;
  3619  000D68  0E00               	movlw	0
  3620  000D6A  6E19               	movwf	(_encoder_ticks+1)^0,c	;volatile
  3621  000D6C  0E00               	movlw	0
  3622  000D6E  6E18               	movwf	_encoder_ticks^0,c	;volatile
  3623  000D70                     
  3624                           ;encoder/encoder.c: 41:     EUSART2_Write(0xCA);
  3625  000D70  0ECA               	movlw	202
  3626  000D72  EC7B  F006         	call	i2_EUSART2_Write
  3627  000D76  0012               	return		;funcret
  3628  000D78                     __end_of_resetEncoderTicks:
  3629                           	callstack 0
  3630                           
  3631 ;; *************** function _PIN_MANAGER_IOC *****************
  3632 ;; Defined at:
  3633 ;;		line 109 in file "mcc_generated_files/pin_manager.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;		None
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;		None
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  1    wreg      void 
  3640 ;; Registers used:
  3641 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1
  3647 ;;      Params:         0       0       0
  3648 ;;      Locals:         0       0       0
  3649 ;;      Temps:          0       0       0
  3650 ;;      Totals:         0       0       0
  3651 ;;Total ram usage:        0 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:    3
  3654 ;; This function calls:
  3655 ;;		_IOCB5_ISR
  3656 ;; This function is called by:
  3657 ;;		_INTERRUPT_InterruptManager
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text35
  3662  000CE0                     __ptext35:
  3663                           	callstack 0
  3664  000CE0                     _PIN_MANAGER_IOC:
  3665                           	callstack 23
  3666  000CE0                     
  3667                           ;mcc_generated_files/pin_manager.c: 112:     if(IOCBbits.IOCB5 == 1)
  3668  000CE0  AA62               	btfss	98,5,c	;volatile
  3669  000CE2  EF75  F006         	goto	i2u80_41
  3670  000CE6  EF77  F006         	goto	i2u80_40
  3671  000CEA                     i2u80_41:
  3672  000CEA  EF79  F006         	goto	i2l2288
  3673  000CEE                     i2u80_40:
  3674  000CEE                     
  3675                           ;mcc_generated_files/pin_manager.c: 113:     {;mcc_generated_files/pin_manager.c: 114:  
      +                                 IOCB5_ISR();
  3676  000CEE  ECA6  F005         	call	_IOCB5_ISR	;wreg free
  3677  000CF2                     i2l2288:
  3678                           
  3679                           ;mcc_generated_files/pin_manager.c: 117:     INTCONbits.RBIF = 0;
  3680  000CF2  90F2               	bcf	242,0,c	;volatile
  3681  000CF4  0012               	return		;funcret
  3682  000CF6                     __end_of_PIN_MANAGER_IOC:
  3683                           	callstack 0
  3684                           
  3685 ;; *************** function _IOCB5_ISR *****************
  3686 ;; Defined at:
  3687 ;;		line 123 in file "mcc_generated_files/pin_manager.c"
  3688 ;; Parameters:    Size  Location     Type
  3689 ;;		None
  3690 ;; Auto vars:     Size  Location     Type
  3691 ;;		None
  3692 ;; Return value:  Size  Location     Type
  3693 ;;                  1    wreg      void 
  3694 ;; Registers used:
  3695 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3696 ;; Tracked objects:
  3697 ;;		On entry : 0/0
  3698 ;;		On exit  : 0/0
  3699 ;;		Unchanged: 0/0
  3700 ;; Data sizes:     COMRAM   BANK0   BANK1
  3701 ;;      Params:         0       0       0
  3702 ;;      Locals:         0       0       0
  3703 ;;      Temps:          0       0       0
  3704 ;;      Totals:         0       0       0
  3705 ;;Total ram usage:        0 bytes
  3706 ;; Hardware stack levels used:    1
  3707 ;; Hardware stack levels required when called:    2
  3708 ;; This function calls:
  3709 ;;		Absolute function
  3710 ;;		_IOCB5_DefaultInterruptHandler
  3711 ;;		_encoder_IOC
  3712 ;; This function is called by:
  3713 ;;		_PIN_MANAGER_IOC
  3714 ;; This function uses a non-reentrant model
  3715 ;;
  3716                           
  3717                           	psect	text36
  3718  000B4C                     __ptext36:
  3719                           	callstack 0
  3720  000B4C                     _IOCB5_ISR:
  3721                           	callstack 23
  3722  000B4C                     
  3723                           ;mcc_generated_files/pin_manager.c: 127:     encoder_IOC();
  3724  000B4C  ECEE  F003         	call	_encoder_IOC	;wreg free
  3725  000B50                     
  3726                           ;mcc_generated_files/pin_manager.c: 130:     if(IOCB5_InterruptHandler)
  3727  000B50  5029               	movf	_IOCB5_InterruptHandler^0,w,c
  3728  000B52  102A               	iorwf	(_IOCB5_InterruptHandler+1)^0,w,c
  3729  000B54  B4D8               	btfsc	status,2,c
  3730  000B56  EFAF  F005         	goto	i2u70_41
  3731  000B5A  EFB1  F005         	goto	i2u70_40
  3732  000B5E                     i2u70_41:
  3733  000B5E  EFBE  F005         	goto	i2l255
  3734  000B62                     i2u70_40:
  3735  000B62                     
  3736                           ;mcc_generated_files/pin_manager.c: 131:     {;mcc_generated_files/pin_manager.c: 132:  
      +                                 IOCB5_InterruptHandler();
  3737  000B62  D802               	call	i2u71_48
  3738  000B64  EFBE  F005         	goto	i2u71_49
  3739  000B68                     i2u71_48:
  3740  000B68  0005               	push	
  3741  000B6A  6EFA               	movwf	pclath,c
  3742  000B6C  5029               	movf	_IOCB5_InterruptHandler^0,w,c
  3743  000B6E  6EFD               	movwf	tosl,c
  3744  000B70  502A               	movf	(_IOCB5_InterruptHandler+1)^0,w,c
  3745  000B72  6EFE               	movwf	tosh,c
  3746  000B74  50F8               	movf	tblptru,w,c
  3747  000B76  6EFF               	movwf	tosu,c
  3748  000B78  50FA               	movf	pclath,w,c
  3749  000B7A  0012               	return		;indir
  3750  000B7C                     i2u71_49:
  3751  000B7C                     i2l255:
  3752  000B7C  0012               	return		;funcret
  3753  000B7E                     __end_of_IOCB5_ISR:
  3754                           	callstack 0
  3755                           
  3756 ;; *************** function _encoder_IOC *****************
  3757 ;; Defined at:
  3758 ;;		line 92 in file "encoder/encoder.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;		None
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;		None
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      void 
  3765 ;; Registers used:
  3766 ;;		wreg, status,2, status,0, cstack
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMRAM   BANK0   BANK1
  3772 ;;      Params:         0       0       0
  3773 ;;      Locals:         0       0       0
  3774 ;;      Temps:          2       0       0
  3775 ;;      Totals:         2       0       0
  3776 ;;Total ram usage:        2 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; Hardware stack levels required when called:    1
  3779 ;; This function calls:
  3780 ;;		_stepperIsAsleep
  3781 ;;		i2_EUSART2_Write
  3782 ;; This function is called by:
  3783 ;;		_IOCB5_ISR
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           	psect	text37
  3788  0007DC                     __ptext37:
  3789                           	callstack 0
  3790  0007DC                     _encoder_IOC:
  3791                           	callstack 23
  3792  0007DC                     
  3793                           ;encoder/encoder.c: 93:     if(stepperIsAsleep()){
  3794  0007DC  EC59  F006         	call	_stepperIsAsleep	;wreg free
  3795  0007E0  0900               	iorlw	0
  3796  0007E2  B4D8               	btfsc	status,2,c
  3797  0007E4  EFF6  F003         	goto	i2u63_41
  3798  0007E8  EFF8  F003         	goto	i2u63_40
  3799  0007EC                     i2u63_41:
  3800  0007EC  EFFA  F003         	goto	i2l23
  3801  0007F0                     i2u63_40:
  3802  0007F0  EF56  F004         	goto	i2l24
  3803  0007F4                     i2l23:
  3804                           
  3805                           ;encoder/encoder.c: 99:     if(PORTBbits.RB5){
  3806  0007F4  AA81               	btfss	129,5,c	;volatile
  3807  0007F6  EFFF  F003         	goto	i2u64_41
  3808  0007FA  EF01  F004         	goto	i2u64_40
  3809  0007FE                     i2u64_41:
  3810  0007FE  EF53  F004         	goto	i2l2188
  3811  000802                     i2u64_40:
  3812  000802                     
  3813                           ;encoder/encoder.c: 100:         if(WAS_LOW_LAST_TIME){
  3814  000802  501E               	movf	_WAS_LOW_LAST_TIME^0,w,c	;volatile
  3815  000804  B4D8               	btfsc	status,2,c
  3816  000806  EF07  F004         	goto	i2u65_41
  3817  00080A  EF09  F004         	goto	i2u65_40
  3818  00080E                     i2u65_41:
  3819  00080E  EF4F  F004         	goto	i2l2186
  3820  000812                     i2u65_40:
  3821  000812  8289               	bsf	137,1,c	;volatile
  3822  000814                     
  3823                           ;encoder/encoder.c: 107:                 if(LATBbits.LATB4){
  3824  000814  A88A               	btfss	138,4,c	;volatile
  3825  000816  EF0F  F004         	goto	i2u66_41
  3826  00081A  EF11  F004         	goto	i2u66_40
  3827  00081E                     i2u66_41:
  3828  00081E  EF15  F004         	goto	i2l2172
  3829  000822                     i2u66_40:
  3830  000822                     
  3831                           ;encoder/encoder.c: 108:                     encoder_ticks++;
  3832  000822  4A18               	infsnz	_encoder_ticks^0,f,c	;volatile
  3833  000824  2A19               	incf	(_encoder_ticks+1)^0,f,c	;volatile
  3834                           
  3835                           ;encoder/encoder.c: 115:                 }else{
  3836  000826  EF27  F004         	goto	i2l2178
  3837  00082A                     i2l2172:
  3838                           
  3839                           ;encoder/encoder.c: 116:                     if(encoder_ticks > 0){
  3840  00082A  5018               	movf	_encoder_ticks^0,w,c	;volatile
  3841  00082C  1019               	iorwf	(_encoder_ticks+1)^0,w,c	;volatile
  3842  00082E  B4D8               	btfsc	status,2,c
  3843  000830  EF1C  F004         	goto	i2u67_41
  3844  000834  EF1E  F004         	goto	i2u67_40
  3845  000838                     i2u67_41:
  3846  000838  EF23  F004         	goto	i2l2176
  3847  00083C                     i2u67_40:
  3848  00083C                     
  3849                           ;encoder/encoder.c: 117:                         encoder_ticks--;
  3850  00083C  0618               	decf	_encoder_ticks^0,f,c	;volatile
  3851  00083E  A0D8               	btfss	status,0,c
  3852  000840  0619               	decf	(_encoder_ticks+1)^0,f,c	;volatile
  3853                           
  3854                           ;encoder/encoder.c: 118:                     }else{
  3855  000842  EF27  F004         	goto	i2l2178
  3856  000846                     i2l2176:
  3857                           
  3858                           ;encoder/encoder.c: 119:                         encoder_ticks = 0;
  3859  000846  0E00               	movlw	0
  3860  000848  6E19               	movwf	(_encoder_ticks+1)^0,c	;volatile
  3861  00084A  0E00               	movlw	0
  3862  00084C  6E18               	movwf	_encoder_ticks^0,c	;volatile
  3863  00084E                     i2l2178:
  3864                           
  3865                           ;encoder/encoder.c: 128:                 if(((encoder_ticks%4) == 0) && encoder_ticks !=
      +                           0){
  3866  00084E  0E03               	movlw	3
  3867  000850  1418               	andwf	_encoder_ticks^0,w,c	;volatile
  3868  000852  6E02               	movwf	??_encoder_IOC^0,c
  3869  000854  0E00               	movlw	0
  3870  000856  1419               	andwf	(_encoder_ticks+1)^0,w,c	;volatile
  3871  000858  6E03               	movwf	(??_encoder_IOC+1)^0,c
  3872  00085A  5002               	movf	??_encoder_IOC^0,w,c
  3873  00085C  1003               	iorwf	(??_encoder_IOC+1)^0,w,c
  3874  00085E  A4D8               	btfss	status,2,c
  3875  000860  EF34  F004         	goto	i2u68_41
  3876  000864  EF36  F004         	goto	i2u68_40
  3877  000868                     i2u68_41:
  3878  000868  EF4F  F004         	goto	i2l2186
  3879  00086C                     i2u68_40:
  3880  00086C  5018               	movf	_encoder_ticks^0,w,c	;volatile
  3881  00086E  1019               	iorwf	(_encoder_ticks+1)^0,w,c	;volatile
  3882  000870  B4D8               	btfsc	status,2,c
  3883  000872  EF3D  F004         	goto	i2u69_41
  3884  000876  EF3F  F004         	goto	i2u69_40
  3885  00087A                     i2u69_41:
  3886  00087A  EF4F  F004         	goto	i2l2186
  3887  00087E                     i2u69_40:
  3888  00087E                     
  3889                           ;encoder/encoder.c: 132:                     EUSART2_Write(0xCC);
  3890  00087E  0ECC               	movlw	204
  3891  000880  EC7B  F006         	call	i2_EUSART2_Write
  3892  000884                     
  3893                           ;encoder/encoder.c: 133:                     EUSART2_Write(encoder_ticks>>2);
  3894  000884  C018  F002         	movff	_encoder_ticks,??_encoder_IOC	;volatile
  3895  000888  C019  F003         	movff	_encoder_ticks+1,??_encoder_IOC+1	;volatile
  3896  00088C  90D8               	bcf	status,0,c
  3897  00088E  3203               	rrcf	(??_encoder_IOC+1)^0,f,c
  3898  000890  3202               	rrcf	??_encoder_IOC^0,f,c
  3899  000892  90D8               	bcf	status,0,c
  3900  000894  3203               	rrcf	(??_encoder_IOC+1)^0,f,c
  3901  000896  3202               	rrcf	??_encoder_IOC^0,f,c
  3902  000898  5002               	movf	??_encoder_IOC^0,w,c
  3903  00089A  EC7B  F006         	call	i2_EUSART2_Write
  3904  00089E                     i2l2186:
  3905                           
  3906                           ;encoder/encoder.c: 138:         WAS_LOW_LAST_TIME = 0;
  3907  00089E  0E00               	movlw	0
  3908  0008A0  6E1E               	movwf	_WAS_LOW_LAST_TIME^0,c	;volatile
  3909                           
  3910                           ;encoder/encoder.c: 139:     }else{
  3911  0008A2  EF56  F004         	goto	i2l24
  3912  0008A6                     i2l2188:
  3913                           
  3914                           ;encoder/encoder.c: 140:         WAS_LOW_LAST_TIME = 1;
  3915  0008A6  0E01               	movlw	1
  3916  0008A8  6E1E               	movwf	_WAS_LOW_LAST_TIME^0,c	;volatile
  3917  0008AA  9289               	bcf	137,1,c	;volatile
  3918  0008AC                     i2l24:
  3919  0008AC  0012               	return		;funcret
  3920  0008AE                     __end_of_encoder_IOC:
  3921                           	callstack 0
  3922                           
  3923 ;; *************** function i2_EUSART2_Write *****************
  3924 ;; Defined at:
  3925 ;;		line 132 in file "mcc_generated_files/eusart2.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;  txData          1    wreg     unsigned char 
  3928 ;; Auto vars:     Size  Location     Type
  3929 ;;  txData          1    0[COMRAM] unsigned char 
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  1    wreg      void 
  3932 ;; Registers used:
  3933 ;;		wreg
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMRAM   BANK0   BANK1
  3939 ;;      Params:         0       0       0
  3940 ;;      Locals:         1       0       0
  3941 ;;      Temps:          0       0       0
  3942 ;;      Totals:         1       0       0
  3943 ;;Total ram usage:        1 bytes
  3944 ;; Hardware stack levels used:    1
  3945 ;; This function calls:
  3946 ;;		Nothing
  3947 ;; This function is called by:
  3948 ;;		_resetEncoderTicks
  3949 ;;		_encoder_IOC
  3950 ;;		_INTERRUPT_InterruptManager
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           	psect	text38
  3955  000CF6                     __ptext38:
  3956                           	callstack 0
  3957  000CF6                     i2_EUSART2_Write:
  3958                           	callstack 26
  3959                           
  3960                           ;incstack = 0
  3961                           ;i2EUSART2_Write@txData stored from wreg
  3962  000CF6  6E01               	movwf	i2EUSART2_Write@txData^0,c
  3963  000CF8                     i2l537:
  3964                           
  3965                           ;mcc_generated_files/eusart2.c: 134:     while(0 == PIR3bits.TX2IF)
  3966  000CF8  A8A4               	btfss	164,4,c	;volatile
  3967  000CFA  EF81  F006         	goto	i2u62_41
  3968  000CFE  EF83  F006         	goto	i2u62_40
  3969  000D02                     i2u62_41:
  3970  000D02  EF7C  F006         	goto	i2l537
  3971  000D06                     i2u62_40:
  3972  000D06                     
  3973                           ;mcc_generated_files/eusart2.c: 138:     TXREG2 = txData;
  3974  000D06  C001  FF73         	movff	i2EUSART2_Write@txData,3955	;volatile
  3975  000D0A  0012               	return		;funcret
  3976  000D0C                     __end_ofi2_EUSART2_Write:
  3977                           	callstack 0
  3978                           
  3979 ;; *************** function _stepperIsAsleep *****************
  3980 ;; Defined at:
  3981 ;;		line 40 in file "step/step.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;		None
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;		None
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  1    wreg      _Bool 
  3988 ;; Registers used:
  3989 ;;		wreg
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMRAM   BANK0   BANK1
  3995 ;;      Params:         0       0       0
  3996 ;;      Locals:         0       0       0
  3997 ;;      Temps:          0       0       0
  3998 ;;      Totals:         0       0       0
  3999 ;;Total ram usage:        0 bytes
  4000 ;; Hardware stack levels used:    1
  4001 ;; This function calls:
  4002 ;;		Nothing
  4003 ;; This function is called by:
  4004 ;;		_encoder_IOC
  4005 ;;		_INTERRUPT_InterruptManager
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           	psect	text39
  4010  000CB2                     __ptext39:
  4011                           	callstack 0
  4012  000CB2                     _stepperIsAsleep:
  4013                           	callstack 26
  4014  000CB2                     
  4015                           ;step/step.c: 41:     if(LATBbits.LATB3){
  4016  000CB2  A68A               	btfss	138,3,c	;volatile
  4017  000CB4  EF5E  F006         	goto	i2u1_41
  4018  000CB8  EF60  F006         	goto	i2u1_40
  4019  000CBC                     i2u1_41:
  4020  000CBC  EF63  F006         	goto	i2l1398
  4021  000CC0                     i2u1_40:
  4022  000CC0                     
  4023                           ;step/step.c: 43:         return 0;
  4024  000CC0  0E00               	movlw	0
  4025  000CC2  EF64  F006         	goto	i2l649
  4026  000CC6                     i2l1398:
  4027                           
  4028                           ;step/step.c: 46:         return 1;
  4029  000CC6  0E01               	movlw	1
  4030  000CC8                     i2l649:
  4031  000CC8  0012               	return		;funcret
  4032  000CCA                     __end_of_stepperIsAsleep:
  4033                           	callstack 0
  4034                           
  4035 ;; *************** function _IOCB5_DefaultInterruptHandler *****************
  4036 ;; Defined at:
  4037 ;;		line 146 in file "mcc_generated_files/pin_manager.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;		None
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;		None
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  1    wreg      void 
  4044 ;; Registers used:
  4045 ;;		None
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMRAM   BANK0   BANK1
  4051 ;;      Params:         0       0       0
  4052 ;;      Locals:         0       0       0
  4053 ;;      Temps:          0       0       0
  4054 ;;      Totals:         0       0       0
  4055 ;;Total ram usage:        0 bytes
  4056 ;; Hardware stack levels used:    1
  4057 ;; This function calls:
  4058 ;;		Nothing
  4059 ;; This function is called by:
  4060 ;;		_PIN_MANAGER_Initialize
  4061 ;;		_IOCB5_ISR
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           	psect	text40
  4066  000DFA                     __ptext40:
  4067                           	callstack 0
  4068  000DFA                     _IOCB5_DefaultInterruptHandler:
  4069                           	callstack 24
  4070  000DFA  0012               	return		;funcret
  4071  000DFC                     __end_of_IOCB5_DefaultInterruptHandler:
  4072                           	callstack 0
  4073                           
  4074 ;; *************** function _INT2_ISR *****************
  4075 ;; Defined at:
  4076 ;;		line 63 in file "mcc_generated_files/ext_int.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;		None
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;		None
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  1    wreg      void 
  4083 ;; Registers used:
  4084 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMRAM   BANK0   BANK1
  4090 ;;      Params:         0       0       0
  4091 ;;      Locals:         0       0       0
  4092 ;;      Temps:          0       0       0
  4093 ;;      Totals:         0       0       0
  4094 ;;Total ram usage:        0 bytes
  4095 ;; Hardware stack levels used:    1
  4096 ;; Hardware stack levels required when called:    2
  4097 ;; This function calls:
  4098 ;;		_INT2_CallBack
  4099 ;; This function is called by:
  4100 ;;		_INTERRUPT_InterruptManager
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           	psect	text41
  4105  000DCA                     __ptext41:
  4106                           	callstack 0
  4107  000DCA                     _INT2_ISR:
  4108                           	callstack 24
  4109  000DCA                     
  4110                           ;mcc_generated_files/ext_int.c: 65:     (INTCON3bits.INT2IF = 0);
  4111  000DCA  92F0               	bcf	240,1,c	;volatile
  4112  000DCC                     
  4113                           ;mcc_generated_files/ext_int.c: 68:     INT2_CallBack();
  4114  000DCC  EC22  F005         	call	_INT2_CallBack	;wreg free
  4115  000DD0  0012               	return		;funcret
  4116  000DD2                     __end_of_INT2_ISR:
  4117                           	callstack 0
  4118                           
  4119 ;; *************** function _INT2_CallBack *****************
  4120 ;; Defined at:
  4121 ;;		line 72 in file "mcc_generated_files/ext_int.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;		None
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;		None
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1    wreg      void 
  4128 ;; Registers used:
  4129 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMRAM   BANK0   BANK1
  4135 ;;      Params:         0       0       0
  4136 ;;      Locals:         0       0       0
  4137 ;;      Temps:          0       0       0
  4138 ;;      Totals:         0       0       0
  4139 ;;Total ram usage:        0 bytes
  4140 ;; Hardware stack levels used:    1
  4141 ;; Hardware stack levels required when called:    1
  4142 ;; This function calls:
  4143 ;;		Absolute function
  4144 ;;		_INT2_DefaultInterruptHandler
  4145 ;;		i2_reset_interruptAction
  4146 ;;		i2_set_INTERRUPT_STEPPER_BREAK_FLAG
  4147 ;; This function is called by:
  4148 ;;		_INT2_ISR
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152                           	psect	text42
  4153  000A44                     __ptext42:
  4154                           	callstack 0
  4155  000A44                     _INT2_CallBack:
  4156                           	callstack 24
  4157  000A44                     
  4158                           ;mcc_generated_files/ext_int.c: 75:     set_INTERRUPT_STEPPER_BREAK_FLAG(1);
  4159  000A44  0E01               	movlw	1
  4160  000A46  ECED  F006         	call	i2_set_INTERRUPT_STEPPER_BREAK_FLAG
  4161  000A4A                     
  4162                           ;mcc_generated_files/ext_int.c: 76:     reset_interruptAction();
  4163  000A4A  ECF4  F006         	call	i2_reset_interruptAction	;wreg free
  4164  000A4E                     
  4165                           ;mcc_generated_files/ext_int.c: 77:     if(INT2_InterruptHandler)
  4166  000A4E  5025               	movf	_INT2_InterruptHandler^0,w,c
  4167  000A50  1026               	iorwf	(_INT2_InterruptHandler+1)^0,w,c
  4168  000A52  B4D8               	btfsc	status,2,c
  4169  000A54  EF2E  F005         	goto	i2u74_41
  4170  000A58  EF30  F005         	goto	i2u74_40
  4171  000A5C                     i2u74_41:
  4172  000A5C  EF3D  F005         	goto	i2l297
  4173  000A60                     i2u74_40:
  4174  000A60                     
  4175                           ;mcc_generated_files/ext_int.c: 78:     {;mcc_generated_files/ext_int.c: 79:         INT
      +                          2_InterruptHandler();
  4176  000A60  D802               	call	i2u75_48
  4177  000A62  EF3D  F005         	goto	i2u75_49
  4178  000A66                     i2u75_48:
  4179  000A66  0005               	push	
  4180  000A68  6EFA               	movwf	pclath,c
  4181  000A6A  5025               	movf	_INT2_InterruptHandler^0,w,c
  4182  000A6C  6EFD               	movwf	tosl,c
  4183  000A6E  5026               	movf	(_INT2_InterruptHandler+1)^0,w,c
  4184  000A70  6EFE               	movwf	tosh,c
  4185  000A72  50F8               	movf	tblptru,w,c
  4186  000A74  6EFF               	movwf	tosu,c
  4187  000A76  50FA               	movf	pclath,w,c
  4188  000A78  0012               	return		;indir
  4189  000A7A                     i2u75_49:
  4190  000A7A                     i2l297:
  4191  000A7A  0012               	return		;funcret
  4192  000A7C                     __end_of_INT2_CallBack:
  4193                           	callstack 0
  4194                           
  4195 ;; *************** function _INT2_DefaultInterruptHandler *****************
  4196 ;; Defined at:
  4197 ;;		line 87 in file "mcc_generated_files/ext_int.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;		None
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;		None
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1    wreg      void 
  4204 ;; Registers used:
  4205 ;;		None
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMRAM   BANK0   BANK1
  4211 ;;      Params:         0       0       0
  4212 ;;      Locals:         0       0       0
  4213 ;;      Temps:          0       0       0
  4214 ;;      Totals:         0       0       0
  4215 ;;Total ram usage:        0 bytes
  4216 ;; Hardware stack levels used:    1
  4217 ;; This function calls:
  4218 ;;		Nothing
  4219 ;; This function is called by:
  4220 ;;		_EXT_INT_Initialize
  4221 ;;		_INT2_CallBack
  4222 ;; This function uses a non-reentrant model
  4223 ;;
  4224                           
  4225                           	psect	text43
  4226  000DFC                     __ptext43:
  4227                           	callstack 0
  4228  000DFC                     _INT2_DefaultInterruptHandler:
  4229                           	callstack 24
  4230  000DFC  0012               	return		;funcret
  4231  000DFE                     __end_of_INT2_DefaultInterruptHandler:
  4232                           	callstack 0
  4233                           
  4234 ;; *************** function _INT1_ISR *****************
  4235 ;; Defined at:
  4236 ;;		line 35 in file "mcc_generated_files/ext_int.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;		None
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;		None
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  1    wreg      void 
  4243 ;; Registers used:
  4244 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMRAM   BANK0   BANK1
  4250 ;;      Params:         0       0       0
  4251 ;;      Locals:         0       0       0
  4252 ;;      Temps:          0       0       0
  4253 ;;      Totals:         0       0       0
  4254 ;;Total ram usage:        0 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; Hardware stack levels required when called:    2
  4257 ;; This function calls:
  4258 ;;		_INT1_CallBack
  4259 ;; This function is called by:
  4260 ;;		_INTERRUPT_InterruptManager
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           	psect	text44
  4265  000DD2                     __ptext44:
  4266                           	callstack 0
  4267  000DD2                     _INT1_ISR:
  4268                           	callstack 24
  4269  000DD2                     
  4270                           ;mcc_generated_files/ext_int.c: 37:     (INTCON3bits.INT1IF = 0);
  4271  000DD2  90F0               	bcf	240,0,c	;volatile
  4272  000DD4                     
  4273                           ;mcc_generated_files/ext_int.c: 40:     INT1_CallBack();
  4274  000DD4  EC3E  F005         	call	_INT1_CallBack	;wreg free
  4275  000DD8  0012               	return		;funcret
  4276  000DDA                     __end_of_INT1_ISR:
  4277                           	callstack 0
  4278                           
  4279 ;; *************** function _INT1_CallBack *****************
  4280 ;; Defined at:
  4281 ;;		line 44 in file "mcc_generated_files/ext_int.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;		None
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;		None
  4286 ;; Return value:  Size  Location     Type
  4287 ;;                  1    wreg      void 
  4288 ;; Registers used:
  4289 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  4290 ;; Tracked objects:
  4291 ;;		On entry : 0/0
  4292 ;;		On exit  : 0/0
  4293 ;;		Unchanged: 0/0
  4294 ;; Data sizes:     COMRAM   BANK0   BANK1
  4295 ;;      Params:         0       0       0
  4296 ;;      Locals:         0       0       0
  4297 ;;      Temps:          0       0       0
  4298 ;;      Totals:         0       0       0
  4299 ;;Total ram usage:        0 bytes
  4300 ;; Hardware stack levels used:    1
  4301 ;; Hardware stack levels required when called:    1
  4302 ;; This function calls:
  4303 ;;		Absolute function
  4304 ;;		_INT1_DefaultInterruptHandler
  4305 ;;		i2_reset_interruptAction
  4306 ;;		i2_set_INTERRUPT_STEPPER_BREAK_FLAG
  4307 ;; This function is called by:
  4308 ;;		_INT1_ISR
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           	psect	text45
  4313  000A7C                     __ptext45:
  4314                           	callstack 0
  4315  000A7C                     _INT1_CallBack:
  4316                           	callstack 24
  4317  000A7C                     
  4318                           ;mcc_generated_files/ext_int.c: 47:     set_INTERRUPT_STEPPER_BREAK_FLAG(1);
  4319  000A7C  0E01               	movlw	1
  4320  000A7E  ECED  F006         	call	i2_set_INTERRUPT_STEPPER_BREAK_FLAG
  4321  000A82                     
  4322                           ;mcc_generated_files/ext_int.c: 48:     reset_interruptAction();
  4323  000A82  ECF4  F006         	call	i2_reset_interruptAction	;wreg free
  4324  000A86                     
  4325                           ;mcc_generated_files/ext_int.c: 49:     if(INT1_InterruptHandler)
  4326  000A86  5027               	movf	_INT1_InterruptHandler^0,w,c
  4327  000A88  1028               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
  4328  000A8A  B4D8               	btfsc	status,2,c
  4329  000A8C  EF4A  F005         	goto	i2u72_41
  4330  000A90  EF4C  F005         	goto	i2u72_40
  4331  000A94                     i2u72_41:
  4332  000A94  EF59  F005         	goto	i2l284
  4333  000A98                     i2u72_40:
  4334  000A98                     
  4335                           ;mcc_generated_files/ext_int.c: 50:     {;mcc_generated_files/ext_int.c: 51:         INT
      +                          1_InterruptHandler();
  4336  000A98  D802               	call	i2u73_48
  4337  000A9A  EF59  F005         	goto	i2u73_49
  4338  000A9E                     i2u73_48:
  4339  000A9E  0005               	push	
  4340  000AA0  6EFA               	movwf	pclath,c
  4341  000AA2  5027               	movf	_INT1_InterruptHandler^0,w,c
  4342  000AA4  6EFD               	movwf	tosl,c
  4343  000AA6  5028               	movf	(_INT1_InterruptHandler+1)^0,w,c
  4344  000AA8  6EFE               	movwf	tosh,c
  4345  000AAA  50F8               	movf	tblptru,w,c
  4346  000AAC  6EFF               	movwf	tosu,c
  4347  000AAE  50FA               	movf	pclath,w,c
  4348  000AB0  0012               	return		;indir
  4349  000AB2                     i2u73_49:
  4350  000AB2                     i2l284:
  4351  000AB2  0012               	return		;funcret
  4352  000AB4                     __end_of_INT1_CallBack:
  4353                           	callstack 0
  4354                           
  4355 ;; *************** function i2_set_INTERRUPT_STEPPER_BREAK_FLAG *****************
  4356 ;; Defined at:
  4357 ;;		line 70 in file "mcc_generated_files/interrupt_manager.c"
  4358 ;; Parameters:    Size  Location     Type
  4359 ;;  in              1    wreg     _Bool 
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;  in              1    0[COMRAM] _Bool 
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  1    wreg      void 
  4364 ;; Registers used:
  4365 ;;		wreg
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMRAM   BANK0   BANK1
  4371 ;;      Params:         0       0       0
  4372 ;;      Locals:         1       0       0
  4373 ;;      Temps:          0       0       0
  4374 ;;      Totals:         1       0       0
  4375 ;;Total ram usage:        1 bytes
  4376 ;; Hardware stack levels used:    1
  4377 ;; This function calls:
  4378 ;;		Nothing
  4379 ;; This function is called by:
  4380 ;;		_INT1_CallBack
  4381 ;;		_INT2_CallBack
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           	psect	text46
  4386  000DDA                     __ptext46:
  4387                           	callstack 0
  4388  000DDA                     i2_set_INTERRUPT_STEPPER_BREAK_FLAG:
  4389                           	callstack 24
  4390                           
  4391                           ;incstack = 0
  4392                           ;i2set_INTERRUPT_STEPPER_BREAK_FLAG@in stored from wreg
  4393  000DDA  6E01               	movwf	i2set_INTERRUPT_STEPPER_BREAK_FLAG@in^0,c
  4394  000DDC                     
  4395                           ;mcc_generated_files/interrupt_manager.c: 71:     INTERRUPT_STEPPER_BREAK_FLAG = in;
  4396  000DDC  C001  F01C         	movff	i2set_INTERRUPT_STEPPER_BREAK_FLAG@in,_INTERRUPT_STEPPER_BREAK_FLAG	;volatile
  4397  000DE0  0012               	return		;funcret
  4398  000DE2                     __end_ofi2_set_INTERRUPT_STEPPER_BREAK_FLAG:
  4399                           	callstack 0
  4400                           
  4401 ;; *************** function i2_reset_interruptAction *****************
  4402 ;; Defined at:
  4403 ;;		line 78 in file "mcc_generated_files/interrupt_manager.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;		None
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;		None
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      void 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK0   BANK1
  4417 ;;      Params:         0       0       0
  4418 ;;      Locals:         0       0       0
  4419 ;;      Temps:          0       0       0
  4420 ;;      Totals:         0       0       0
  4421 ;;Total ram usage:        0 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; This function calls:
  4424 ;;		Nothing
  4425 ;; This function is called by:
  4426 ;;		_INT1_CallBack
  4427 ;;		_INT2_CallBack
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           	psect	text47
  4432  000DE8                     __ptext47:
  4433                           	callstack 0
  4434  000DE8                     i2_reset_interruptAction:
  4435                           	callstack 24
  4436  000DE8                     
  4437                           ;mcc_generated_files/interrupt_manager.c: 79:     interruptAction = NULL_ACTION;
  4438  000DE8  0E00               	movlw	0
  4439  000DEA  6E1B               	movwf	_interruptAction^0,c	;volatile
  4440  000DEC  0012               	return		;funcret
  4441  000DEE                     __end_ofi2_reset_interruptAction:
  4442                           	callstack 0
  4443                           
  4444 ;; *************** function _INT1_DefaultInterruptHandler *****************
  4445 ;; Defined at:
  4446 ;;		line 59 in file "mcc_generated_files/ext_int.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;		None
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;		None
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  1    wreg      void 
  4453 ;; Registers used:
  4454 ;;		None
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMRAM   BANK0   BANK1
  4460 ;;      Params:         0       0       0
  4461 ;;      Locals:         0       0       0
  4462 ;;      Temps:          0       0       0
  4463 ;;      Totals:         0       0       0
  4464 ;;Total ram usage:        0 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; This function calls:
  4467 ;;		Nothing
  4468 ;; This function is called by:
  4469 ;;		_EXT_INT_Initialize
  4470 ;;		_INT1_CallBack
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           	psect	text48
  4475  000DFE                     __ptext48:
  4476                           	callstack 0
  4477  000DFE                     _INT1_DefaultInterruptHandler:
  4478                           	callstack 24
  4479  000DFE  0012               	return		;funcret
  4480  000E00                     __end_of_INT1_DefaultInterruptHandler:
  4481                           	callstack 0
  4482                           
  4483 ;; *************** function _EUSART2_is_rx_ready *****************
  4484 ;; Defined at:
  4485 ;;		line 99 in file "mcc_generated_files/eusart2.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;		None
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;		None
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  1    wreg      _Bool 
  4492 ;; Registers used:
  4493 ;;		wreg
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMRAM   BANK0   BANK1
  4499 ;;      Params:         0       0       0
  4500 ;;      Locals:         0       0       0
  4501 ;;      Temps:          0       0       0
  4502 ;;      Totals:         0       0       0
  4503 ;;Total ram usage:        0 bytes
  4504 ;; Hardware stack levels used:    1
  4505 ;; This function calls:
  4506 ;;		Nothing
  4507 ;; This function is called by:
  4508 ;;		_INTERRUPT_InterruptManager
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512                           	psect	text49
  4513  000D34                     __ptext49:
  4514                           	callstack 0
  4515  000D34                     _EUSART2_is_rx_ready:
  4516                           	callstack 26
  4517  000D34                     
  4518                           ;mcc_generated_files/eusart2.c: 101:     return (_Bool)(PIR3bits.RC2IF);
  4519  000D34  BAA4               	btfsc	164,5,c	;volatile
  4520  000D36  EF9F  F006         	goto	i2u24_41
  4521  000D3A  EFA2  F006         	goto	i2u24_40
  4522  000D3E                     i2u24_41:
  4523  000D3E  0E01               	movlw	1
  4524  000D40  EFA3  F006         	goto	i2u24_46
  4525  000D44                     i2u24_40:
  4526  000D44  0E00               	movlw	0
  4527  000D46                     i2u24_46:
  4528  000D46  0012               	return		;funcret
  4529  000D48                     __end_of_EUSART2_is_rx_ready:
  4530                           	callstack 0
  4531                           
  4532 ;; *************** function _EUSART2_Read *****************
  4533 ;; Defined at:
  4534 ;;		line 113 in file "mcc_generated_files/eusart2.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;		None
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;		None
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  1    wreg      unsigned char 
  4541 ;; Registers used:
  4542 ;;		wreg, status,2
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMRAM   BANK0   BANK1
  4548 ;;      Params:         0       0       0
  4549 ;;      Locals:         0       0       0
  4550 ;;      Temps:          0       0       0
  4551 ;;      Totals:         0       0       0
  4552 ;;Total ram usage:        0 bytes
  4553 ;; Hardware stack levels used:    1
  4554 ;; This function calls:
  4555 ;;		Nothing
  4556 ;; This function is called by:
  4557 ;;		_INTERRUPT_InterruptManager
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           	psect	text50
  4562  000BD6                     __ptext50:
  4563                           	callstack 0
  4564  000BD6                     _EUSART2_Read:
  4565                           	callstack 26
  4566  000BD6                     i2l530:
  4567                           
  4568                           ;mcc_generated_files/eusart2.c: 115:     while(!PIR3bits.RC2IF)
  4569  000BD6  AAA4               	btfss	164,5,c	;volatile
  4570  000BD8  EFF0  F005         	goto	i2u25_41
  4571  000BDC  EFF2  F005         	goto	i2u25_40
  4572  000BE0                     i2u25_41:
  4573  000BE0  EFEB  F005         	goto	i2l530
  4574  000BE4                     i2u25_40:
  4575  000BE4                     
  4576                           ;mcc_generated_files/eusart2.c: 119:     eusart2RxLastError.status = 0;
  4577  000BE4  0E00               	movlw	0
  4578  000BE6  6E1A               	movwf	_eusart2RxLastError^0,c	;volatile
  4579  000BE8                     
  4580                           ;mcc_generated_files/eusart2.c: 121:     if(1 == RCSTA2bits.OERR)
  4581  000BE8  A271               	btfss	113,1,c	;volatile
  4582  000BEA  EFF9  F005         	goto	i2u26_41
  4583  000BEE  EFFB  F005         	goto	i2u26_40
  4584  000BF2                     i2u26_41:
  4585  000BF2  EFFD  F005         	goto	i2l1634
  4586  000BF6                     i2u26_40:
  4587  000BF6                     
  4588                           ;mcc_generated_files/eusart2.c: 122:     {;mcc_generated_files/eusart2.c: 125:         R
      +                          CSTA2bits.CREN = 0;
  4589  000BF6  9871               	bcf	113,4,c	;volatile
  4590                           
  4591                           ;mcc_generated_files/eusart2.c: 126:         RCSTA2bits.CREN = 1;
  4592  000BF8  8871               	bsf	113,4,c	;volatile
  4593  000BFA                     i2l1634:
  4594                           
  4595                           ;mcc_generated_files/eusart2.c: 129:     return RCREG2;
  4596  000BFA  5074               	movf	116,w,c	;volatile
  4597  000BFC  0012               	return		;funcret
  4598  000BFE                     __end_of_EUSART2_Read:
  4599                           	callstack 0
  4600  0000                     
  4601                           	psect	text51
  4602  000000                     __ptext51:
  4603                           	callstack 0
  4604  000000                     
  4605                           	psect	rparam
  4606  0000                     
  4607                           	psect	temp
  4608  00002B                     btemp:
  4609                           	callstack 0
  4610  00002B                     	ds	1
  4611  0000                     int$flags	set	btemp
  4612  0000                     wtemp8	set	btemp+1
  4613  0000                     ttemp5	set	btemp+1
  4614  0000                     ttemp6	set	btemp+4
  4615  0000                     ttemp7	set	btemp+8
  4616                           
  4617                           	psect	idloc
  4618                           
  4619                           ;Config register IDLOC0 @ 0x200000
  4620                           ;	unspecified, using default values
  4621  200000                     	org	2097152
  4622  200000  FF                 	db	255
  4623                           
  4624                           ;Config register IDLOC1 @ 0x200001
  4625                           ;	unspecified, using default values
  4626  200001                     	org	2097153
  4627  200001  FF                 	db	255
  4628                           
  4629                           ;Config register IDLOC2 @ 0x200002
  4630                           ;	unspecified, using default values
  4631  200002                     	org	2097154
  4632  200002  FF                 	db	255
  4633                           
  4634                           ;Config register IDLOC3 @ 0x200003
  4635                           ;	unspecified, using default values
  4636  200003                     	org	2097155
  4637  200003  FF                 	db	255
  4638                           
  4639                           ;Config register IDLOC4 @ 0x200004
  4640                           ;	unspecified, using default values
  4641  200004                     	org	2097156
  4642  200004  FF                 	db	255
  4643                           
  4644                           ;Config register IDLOC5 @ 0x200005
  4645                           ;	unspecified, using default values
  4646  200005                     	org	2097157
  4647  200005  FF                 	db	255
  4648                           
  4649                           ;Config register IDLOC6 @ 0x200006
  4650                           ;	unspecified, using default values
  4651  200006                     	org	2097158
  4652  200006  FF                 	db	255
  4653                           
  4654                           ;Config register IDLOC7 @ 0x200007
  4655                           ;	unspecified, using default values
  4656  200007                     	org	2097159
  4657  200007  FF                 	db	255
  4658                           
  4659                           	psect	config
  4660                           
  4661                           ; Padding undefined space
  4662  300000                     	org	3145728
  4663  300000  FF                 	db	255
  4664                           
  4665                           ;Config register CONFIG1H @ 0x300001
  4666                           ;	Oscillator Selection bits
  4667                           ;	FOSC = INTIO67, Internal oscillator block
  4668                           ;	4X PLL Enable
  4669                           ;	PLLCFG = OFF, Oscillator used directly
  4670                           ;	Primary clock enable bit
  4671                           ;	PRICLKEN = ON, Primary clock enabled
  4672                           ;	Fail-Safe Clock Monitor Enable bit
  4673                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4674                           ;	Internal/External Oscillator Switchover bit
  4675                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4676  300001                     	org	3145729
  4677  300001  28                 	db	40
  4678                           
  4679                           ;Config register CONFIG2L @ 0x300002
  4680                           ;	Power-up Timer Enable bit
  4681                           ;	PWRTEN = OFF, Power up timer disabled
  4682                           ;	Brown-out Reset Enable bits
  4683                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4684                           ;	Brown Out Reset Voltage bits
  4685                           ;	BORV = 190, VBOR set to 1.90 V nominal
  4686  300002                     	org	3145730
  4687  300002  1F                 	db	31
  4688                           
  4689                           ;Config register CONFIG2H @ 0x300003
  4690                           ;	Watchdog Timer Enable bits
  4691                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  4692                           ;	Watchdog Timer Postscale Select bits
  4693                           ;	WDTPS = 32768, 1:32768
  4694  300003                     	org	3145731
  4695  300003  3C                 	db	60
  4696                           
  4697                           ; Padding undefined space
  4698  300004                     	org	3145732
  4699  300004  FF                 	db	255
  4700                           
  4701                           ;Config register CONFIG3H @ 0x300005
  4702                           ;	CCP2 MUX bit
  4703                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  4704                           ;	PORTB A/D Enable bit
  4705                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  4706                           ;	P3A/CCP3 Mux bit
  4707                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  4708                           ;	HFINTOSC Fast Start-up
  4709                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  4710                           ;	Timer3 Clock input mux bit
  4711                           ;	T3CMX = PORTC0, T3CKI is on RC0
  4712                           ;	ECCP2 B output mux bit
  4713                           ;	P2BMX = PORTB5, P2B is on RB5
  4714                           ;	MCLR Pin Enable bit
  4715                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  4716  300005                     	org	3145733
  4717  300005  BF                 	db	191
  4718                           
  4719                           ;Config register CONFIG4L @ 0x300006
  4720                           ;	Stack Full/Underflow Reset Enable bit
  4721                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4722                           ;	Single-Supply ICSP Enable bit
  4723                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4724                           ;	Extended Instruction Set Enable bit
  4725                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4726                           ;	Background Debug
  4727                           ;	DEBUG = OFF, Disabled
  4728  300006                     	org	3145734
  4729  300006  85                 	db	133
  4730                           
  4731                           ; Padding undefined space
  4732  300007                     	org	3145735
  4733  300007  FF                 	db	255
  4734                           
  4735                           ;Config register CONFIG5L @ 0x300008
  4736                           ;	Code Protection Block 0
  4737                           ;	CP0 = OFF, Block 0 (000200-000FFFh) not code-protected
  4738                           ;	Code Protection Block 1
  4739                           ;	CP1 = OFF, Block 1 (001000-001FFFh) not code-protected
  4740  300008                     	org	3145736
  4741  300008  03                 	db	3
  4742                           
  4743                           ;Config register CONFIG5H @ 0x300009
  4744                           ;	Boot Block Code Protection bit
  4745                           ;	CPB = OFF, Boot block (000000-0001FFh) not code-protected
  4746                           ;	Data EEPROM Code Protection bit
  4747                           ;	CPD = OFF, Data EEPROM not code-protected
  4748  300009                     	org	3145737
  4749  300009  C0                 	db	192
  4750                           
  4751                           ;Config register CONFIG6L @ 0x30000A
  4752                           ;	Write Protection Block 0
  4753                           ;	WRT0 = OFF, Block 0 (000200-000FFFh) not write-protected
  4754                           ;	Write Protection Block 1
  4755                           ;	WRT1 = OFF, Block 1 (001000-001FFFh) not write-protected
  4756  30000A                     	org	3145738
  4757  30000A  03                 	db	3
  4758                           
  4759                           ;Config register CONFIG6H @ 0x30000B
  4760                           ;	Configuration Register Write Protection bit
  4761                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4762                           ;	Boot Block Write Protection bit
  4763                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write-protected
  4764                           ;	Data EEPROM Write Protection bit
  4765                           ;	WRTD = OFF, Data EEPROM not write-protected
  4766  30000B                     	org	3145739
  4767  30000B  E0                 	db	224
  4768                           
  4769                           ;Config register CONFIG7L @ 0x30000C
  4770                           ;	Table Read Protection Block 0
  4771                           ;	EBTR0 = OFF, Block 0 (000200-000FFFh) not protected from table reads executed in other
      +                           blocks
  4772                           ;	Table Read Protection Block 1
  4773                           ;	EBTR1 = OFF, Block 1 (001000-001FFFh) not protected from table reads executed in other
      +                           blocks
  4774  30000C                     	org	3145740
  4775  30000C  03                 	db	3
  4776                           
  4777                           ;Config register CONFIG7H @ 0x30000D
  4778                           ;	Boot Block Table Read Protection bit
  4779                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from table reads executed in ot
      +                          her blocks
  4780  30000D                     	org	3145741
  4781  30000D  40                 	db	64
  4782                           tosu	equ	0xFFF
  4783                           tosh	equ	0xFFE
  4784                           tosl	equ	0xFFD
  4785                           stkptr	equ	0xFFC
  4786                           pclatu	equ	0xFFB
  4787                           pclath	equ	0xFFA
  4788                           pcl	equ	0xFF9
  4789                           tblptru	equ	0xFF8
  4790                           tblptrh	equ	0xFF7
  4791                           tblptrl	equ	0xFF6
  4792                           tablat	equ	0xFF5
  4793                           prodh	equ	0xFF4
  4794                           prodl	equ	0xFF3
  4795                           indf0	equ	0xFEF
  4796                           postinc0	equ	0xFEE
  4797                           postdec0	equ	0xFED
  4798                           preinc0	equ	0xFEC
  4799                           plusw0	equ	0xFEB
  4800                           fsr0h	equ	0xFEA
  4801                           fsr0l	equ	0xFE9
  4802                           wreg	equ	0xFE8
  4803                           indf1	equ	0xFE7
  4804                           postinc1	equ	0xFE6
  4805                           postdec1	equ	0xFE5
  4806                           preinc1	equ	0xFE4
  4807                           plusw1	equ	0xFE3
  4808                           fsr1h	equ	0xFE2
  4809                           fsr1l	equ	0xFE1
  4810                           bsr	equ	0xFE0
  4811                           indf2	equ	0xFDF
  4812                           postinc2	equ	0xFDE
  4813                           postdec2	equ	0xFDD
  4814                           preinc2	equ	0xFDC
  4815                           plusw2	equ	0xFDB
  4816                           fsr2h	equ	0xFDA
  4817                           fsr2l	equ	0xFD9
  4818                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         13
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     17      42
    BANK0           160      0       0
    BANK1           256      0       0

Pointer List with Targets:

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), Absolute function(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    IOCB5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB5_DefaultInterruptHandler(), 

    IOCB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCB5_DefaultInterruptHandler(), 

    uart_write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMRAM

    _main->_moveUntilZ
    _main->_update_PIC18F_software_version_number
    _update_PIC18F_software_version_number->_send_number
    _send_number->_EUSART2_Write
    _moveUntilZ->_setStepSize
    _PIN_MANAGER_Initialize->_IOCB5_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_setAmnioticPumpPWM
    _INTERRUPT_InterruptManager->_setBloodPumpPWM
    _setBloodPumpPWM->_PWM4_LoadDutyValue
    _setAmnioticPumpPWM->_PWM5_LoadDutyValue
    _resetEncoderTicks->i2_EUSART2_Write
    _IOCB5_ISR->_encoder_IOC
    _encoder_IOC->i2_EUSART2_Write
    _INT2_CallBack->i2_set_INTERRUPT_STEPPER_BREAK_FLAG
    _INT1_CallBack->i2_set_INTERRUPT_STEPPER_BREAK_FLAG

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1497
                                             15 COMRAM     2     2      0
                  _SYSTEM_Initialize
                _get_interruptAction
                          _initPumps
                         _moveUntilZ
              _reset_interruptAction
   _set_INTERRUPT_STEPPER_BREAK_FLAG
                       _stepperSleep
_update_PIC18F_software_version_numb
 ---------------------------------------------------------------------------------
 (1) _update_PIC18F_software_version_number                3     3      0      30
                                             12 COMRAM     3     3      0
                        _send_number
 ---------------------------------------------------------------------------------
 (2) _send_number                                          1     1      0      15
                                             11 COMRAM     1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART2_Write                                        1     1      0      15
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _set_INTERRUPT_STEPPER_BREAK_FLAG                     1     1      0      15
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _reset_interruptAction                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _moveUntilZ                                           2     1      1     849
                                             13 COMRAM     2     1      1
   _get_INTERRUPT_STEPPER_BREAK_FLAG
                       _setDirection
                        _setStepSize
                       _stepperSleep
 ---------------------------------------------------------------------------------
 (1) _stepperSleep                                         1     1      0      15
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setStepSize                                          3     3      0      15
                                             10 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _setDirection                                         1     1      0      15
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _get_INTERRUPT_STEPPER_BREAK_FLAG                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPumps                                            0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_interruptAction                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     588
                 _EUSART2_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM4_Initialize
                    _PWM5_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0      98
          _IOCB5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB5_SetInterruptHandler                            2     0      2      98
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     196
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      98
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     294
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2      98
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2      98
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2      98
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           4     4      0    2262
                                              6 COMRAM     4     4      0
                       _EUSART2_Read
                _EUSART2_is_rx_ready
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                  _resetEncoderTicks
                 _setAmnioticPumpPWM
                    _setBloodPumpPWM
                    _stepperIsAsleep
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _setBloodPumpPWM                                      2     0      2    1076
                                              4 COMRAM     2     0      2
                 _PWM4_LoadDutyValue
 ---------------------------------------------------------------------------------
 (6) _PWM4_LoadDutyValue                                   4     2      2     120
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _setAmnioticPumpPWM                                   2     0      2    1076
                                              4 COMRAM     2     0      2
                 _PWM5_LoadDutyValue
 ---------------------------------------------------------------------------------
 (6) _PWM5_LoadDutyValue                                   4     2      2     120
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _resetEncoderTicks                                    0     0      0      22
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0      22
                          _IOCB5_ISR
 ---------------------------------------------------------------------------------
 (6) _IOCB5_ISR                                            0     0      0      22
                   Absolute function *
      _IOCB5_DefaultInterruptHandler *
                        _encoder_IOC
 ---------------------------------------------------------------------------------
 (7) _encoder_IOC                                          2     2      0      22
                                              1 COMRAM     2     2      0
                    _stepperIsAsleep
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) i2_EUSART2_Write                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _stepperIsAsleep                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _IOCB5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             0     0      0      22
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT2_CallBack                                        0     0      0      22
                   Absolute function *
       _INT2_DefaultInterruptHandler *
            i2_reset_interruptAction
 i2_set_INTERRUPT_STEPPER_BREAK_FLAG
 ---------------------------------------------------------------------------------
 (7) _INT2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0      22
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT1_CallBack                                        0     0      0      22
                   Absolute function *
       _INT1_DefaultInterruptHandler *
            i2_reset_interruptAction
 i2_set_INTERRUPT_STEPPER_BREAK_FLAG
 ---------------------------------------------------------------------------------
 (7) i2_set_INTERRUPT_STEPPER_BREAK_FLAG                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) i2_reset_interruptAction                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART2_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB5_SetInterruptHandler
     _PWM4_Initialize
     _PWM5_Initialize
     _TMR2_Initialize
   _get_interruptAction
   _initPumps
     _TMR2_StartTimer
   _moveUntilZ
     _get_INTERRUPT_STEPPER_BREAK_FLAG
     _setDirection
     _setStepSize
     _stepperSleep
   _reset_interruptAction
   _set_INTERRUPT_STEPPER_BREAK_FLAG
   _stepperSleep
   _update_PIC18F_software_version_number
     _send_number
       _EUSART2_Write

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART2_Read
   _EUSART2_is_rx_ready
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
       i2_reset_interruptAction *
       i2_set_INTERRUPT_STEPPER_BREAK_FLAG *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _INT2_DefaultInterruptHandler *
       i2_reset_interruptAction *
       i2_set_INTERRUPT_STEPPER_BREAK_FLAG *
   _PIN_MANAGER_IOC
     _IOCB5_ISR
       Absolute function(Fake) *
       _IOCB5_DefaultInterruptHandler *
       _encoder_IOC *
         _stepperIsAsleep
         i2_EUSART2_Write
   _resetEncoderTicks
     i2_EUSART2_Write
   _setAmnioticPumpPWM
     _PWM5_LoadDutyValue
   _setBloodPumpPWM
     _PWM4_LoadDutyValue
   _stepperIsAsleep
   i2_EUSART2_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     11      2A       1       44.7%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2A       6        0.0%
DATA                 0      0      2A       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Jun 15 09:47:46 2022

                            setBloodPumpPWM@pwm 0005                                              u30 0CDA  
                                            u31 0CD6                                             l106 0CB0  
                                           l300 0D98                                             l205 0D1E  
                                           l161 0D56                                             l306 0C22  
                                           l331 0C44                                             l164 0DF4  
                                           l334 0D84                                             l247 0A04  
                                           l191 0D32                                             l513 0A42  
                                           l258 0D8E                                             l610 0BD4  
                                           l540 0CDE                                             l381 0DF8  
                                           l701 0C7A                                             l614 0BAA  
                                           l287 0DA2                                             l375 0DF0  
                                           l703 0C7C                                             l552 0DB6  
                                           l640 0C58                                             l384 0DE6  
                                           l537 0CCC                                             l634 0ADE  
                                           l378 0DC8                                             l555 0DAC  
                                           l387 0D66                                             l643 0C5E  
                                           l636 0AE6                                             l645 0C60  
                                           l558 0DC0                                             l670 08C8  
                                           l590 076C                                             l663 08BE  
                                           l655 08B4                                             l672 08CA  
                                           l681 08D6                                             l665 08C0  
                                           l657 08B6                                             l674 08CC  
                                           l667 08C2                                             l659 08B8  
                                           l692 08E6                                             l684 08DC  
                                           l677 08D2                                             l686 08DE  
                                           l694 0936                                             l679 08D4  
                                           l688 08E0                                             l698 0C74  
                         __size_of_stepperSleep 001C                                             u170 0C58  
                                           u171 0C54                                             u180 0C74  
                                           u181 0C70                                             _PR2 000FBB  
                               _setBloodPumpPWM 0938                                             u810 0ADE  
                                           u811 0ADA          __end_of_EUSART2_SetFramingErrorHandler 0DB8  
       __size_of_EUSART2_SetFramingErrorHandler 000A                  _EUSART2_SetFramingErrorHandler 0DAE  
                               _TMR2_Initialize 0D48                                 _PWM4_Initialize 0D20  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA2bits 000F72                                   _INT1_CallBack 0A7C  
                            __size_of_IOCB5_ISR 0032                                            l2200 0DA4  
                                          l2202 0DB8                                            l2210 09C8  
                                          l2212 09F2                                            l2300 0C28  
                                          l2214 09F4                                            l2310 0C3C  
                                          l2302 0C2C                                            l1406 0CCC  
                                          l1512 0D58                                            l2216 09F6  
                                          l2312 0C40                                            l2304 0C30  
                                          l2320 0AC8                                            l1408 0CDA  
                                          l2250 0C12                                            l2242 0BFE  
                                          l1514 0D62                                            l2218 0A02  
                                          l2306 0C34                                            l2322 0ACA  
                                          l2314 0AB6                                            l2260 0A32  
                                          l2252 0C20                                            l2244 0C02  
                                          l1516 0D78                                            l1460 0D48  
                                          l2308 0C38                                            l1540 0C64  
                                          l1532 0C48                                            l2324 0AE0  
                                          l2316 0ABC                                            l2262 0A3E  
                                          l2254 0A06                                            l2246 0C0E  
                                          l1462 0D50                                            l1454 0DF2  
                                          l1542 08B0                                            l2318 0AC2  
                                          l1534 0B7E                                            l2256 0A1A  
                                          l2248 0C10                                            l2192 0D86  
                                          l1464 0D20                                            l1560 0C9C  
                                          l1528 0DEE                                            l1536 0B84  
                                          l1640 0BAE                                            l2600 06DC  
                                          l2258 0A26                                            l2194 0D9A  
                                          l1466 0D0C                                            l1618 0DF6  
                                          l1562 0C9E                                            l1538 0B94  
                                          l1642 0BB2                                            l2610 06FE  
                                          l2602 06E0                                            l2196 0D90  
                                          l1564 0CA0                                            l1548 08EC  
                                          l1644 0BB6                                            l2620 0728  
                                          l2612 070C                                            l2604 06E6  
                                          l2198 0DAE                                            l1566 0CA8  
                                          l1558 0C98                                            l1646 0BCC  
                                          l1638 0BAC                                            l2630 0754  
                                          l2622 072E                                            l2614 0710  
                                          l2606 06F4                                            l1648 0BD2  
                                          l2704 0782                                            l2632 0758  
                                          l2624 073C                                            l2616 0716  
                                          l2608 06F8                                            l2560 064A  
                                          l2298 0C24                                            l2706 0900  
                                          l1594 0DC4                                            l2634 075E  
                                          l2626 0740                                            l2618 0724  
                                          l2570 0670                                            l2562 064C  
                                          l1596 0DE2                                            l2628 0746  
                                          l2580 0686                                            l2572 0674  
                                          l2564 0650                                            l2590 06B0  
                                          l2582 0694                                            l2638 076C  
                                          l2574 0676                                            l2566 0652  
                                          l2558 0646                                            l2592 06B6  
                                          l2584 0698                                            l2576 067C  
                                          l2568 0658                                            l2594 06C4  
                                          l2586 069E                                            l2578 0680  
                                          l2596 06C8                                            l2588 06AC  
                                          l2598 06CE                                            u1117 0662  
                                          u1127 0BC0                                            u1137 0B8A  
                                          u1147 0BA0                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          i2l23 07F4                                            i2l24 08AC  
                                          i2l17 0D76                                            i2l27 0812  
                                          i2l28 0814                                            _TMR2 000FBC  
                                          _WPUB 000F61                                   _INT2_CallBack 0A44  
                                 _EUSART2_Write 0CCA                                            _main 0646  
                                 ?_EUSART2_Read 0001                                            btemp 002B  
             __size_of_INT2_SetInterruptHandler 000A                       ?_INT2_SetInterruptHandler 000B  
                                          start 0642                                 _PWM5_Initialize 0D0C  
                                  ___param_bank 000000                      __end_of_PWM5_LoadDutyValue 0B4C  
                                  _stepperSleep 0C46                        __size_ofi2_EUSART2_Write 0016  
                              __end_of_INT1_ISR 0DDA                                __end_of_INT2_ISR 0DD2  
                __size_of_OSCILLATOR_Initialize 000E                   __end_of_OSCILLATOR_Initialize 0D86  
                                         ?_main 0001              set_INTERRUPT_STEPPER_BREAK_FLAG@in 000B  
          i2set_INTERRUPT_STEPPER_BREAK_FLAG@in 0001                                           _T2CON 000FBA  
                                         i2l123 0974                                           i2l132 097E  
                                         i2l141 09BC                                           i2l117 095E  
                                         i2l134 0980                                           i2l303 0DFC  
                                         i2l119 0960                                           i2l127 097A  
                                         i2l208 0B4A                                           i2l144 09C2  
                                         i2l129 097C                                           i2l146 09C4  
                                         i2l138 09A8                                           i2l251 0CF4  
                                         i2l148 09C6                                           i2l261 0DFA  
                                         i2l255 0B7C                                           i2l280 0DD8  
                                         i2l521 0D46                                           i2l530 0BD6  
                                         i2l290 0DFE                                           i2l194 0B18  
                                         i2l284 0AB2                                           i2l540 0D0A  
                                         i2l293 0DD0                                           i2l534 0BFC  
                                         i2l470 0636                                           i2l384 0DEC  
                                         i2l392 0040                                           i2l297 0A7A  
                                         i2l537 0CF8                                           i2l378 0DE0  
                                         i2l467 0636                                           i2l396 0612  
                                         i2l649 0CC8                              _PWM4_LoadDutyValue 0AE8  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _Pumps 0012  
                                ?_INT1_CallBack 0001                         __end_of_PIN_MANAGER_IOC 0CF6  
                ??_INT1_DefaultInterruptHandler 0001                             ?_PWM4_LoadDutyValue 0001  
                                ?_INT2_CallBack 0001                        _INT1_SetInterruptHandler 0D9A  
                                ?_EUSART2_Write 0001                                           pclath 000FFA  
                                stepperSleep@in 000B                                  ??_EUSART2_Read 0001  
                                         ttemp5 002C                                           ttemp6 002F  
                                         ttemp7 0033                                           status 000FD8  
                                         wtemp8 002C                             _get_interruptAction 0DF6  
                               _TMR2_StartTimer 0DF2                                 __initialization 0C7E  
                                  __end_of_main 07DC                         __end_of_setBloodPumpPWM 0982  
                          ??_PWM4_LoadDutyValue 0003                               __end_of_IOCB5_ISR 0B7E  
                       __end_of_PWM4_Initialize 0D34                         __end_of_TMR2_Initialize 0D58  
                   ?_INTERRUPT_InterruptManager 0001                                          ??_main 0010  
                      __size_of_stepperIsAsleep 0018                            ?_get_interruptAction 0001  
                                 __activetblptr 000002                     _EUSART2_DefaultErrorHandler 000000  
                    __end_of_EUSART2_Initialize 0A44                                          _CCPR4H 000F59  
                                        _CCPR5H 000F56                                          _CCPR4L 000F58  
                                        _CCPR5L 000F55                                          _ANSELA 000F38  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
              fp__IOCB5_DefaultInterruptHandler 0000                  ?_IOCB5_DefaultInterruptHandler 0001  
                                  ?_send_number 0001                         __end_of_PWM5_Initialize 0D20  
                                        i2l2204 0DDC                                          i2l2220 0B4C  
                                        i2l2230 0A86                                          i2l2222 0B50  
                                        i2l2206 0AE8                                          i2l2232 0A98  
                                        i2l2240 0A60                                          i2l2160 0CF8  
                                        i2l2224 0B62                                          i2l2208 0B1A  
                                        i2l2400 0194                                          i2l2226 0A7C  
                                        i2l2234 0A44                                          i2l2162 0D06  
                                        i2l2170 0822                                          i2l2410 01C8  
                                        i2l2402 01A8                                          i2l2330 002E  
                                        i2l1452 0DE8                                          i2l2228 0A82  
                                        i2l2236 0A4A                                          i2l2180 086C  
                                        i2l2172 082A                                          i2l2164 07DC  
                                        i2l2500 0376                                          i2l2420 01F8  
                                        i2l2412 01D2                                          i2l2404 01B2  
                                        i2l2340 0060                                          i2l2332 0032  
                                        i2l1630 0BE8                                          i2l1622 0D34  
                                        i2l2238 0A4E                                          i2l1390 0CB2  
                                        i2l2190 08AA                                          i2l2182 087E  
                                        i2l2174 083C                                          i2l2270 0944  
                                        i2l2510 03C0                                          i2l2502 0380  
                                        i2l2430 022C                                          i2l2422 0206  
                                        i2l2414 01D6                                          i2l2406 01B6  
                                        i2l2350 00A4                                          i2l2342 006A  
                                        i2l2334 0038                                          i2l2326 0012  
                                        i2l1632 0BF6                                          i2l1392 0CC0  
                                        i2l2184 0884                                          i2l2176 0846  
                                        i2l2168 0802                                          i2l2264 0D68  
                                        i2l2280 0996                                          i2l2272 094C  
                                        i2l2520 0410                                          i2l2512 03D0  
                                        i2l2504 0390                                          i2l2440 0256  
                                        i2l2432 0236                                          i2l2424 020A  
                                        i2l2416 01EA                                          i2l2408 01C4  
                                        i2l2360 00E2                                          i2l2352 00A8  
                                        i2l2344 007E                                          i2l2336 004E  
                                        i2l2328 0020                                          i2l1634 0BFA  
                                        i2l1626 0BD6                                          i2l2290 0DD2  
                                        i2l2178 084E                                          i2l2186 089E  
                                        i2l2266 0D70                                          i2l2282 09AA  
                                        i2l2274 0962                                          i2l2530 0460  
                                        i2l2522 0420                                          i2l2514 03E0  
                                        i2l2506 03A0                                          i2l2450 028A  
                                        i2l2442 025A                                          i2l2434 023A  
                                        i2l2426 0214                                          i2l2418 01F4  
                                        i2l2370 010C                                          i2l2362 00EC  
                                        i2l2354 00BC                                          i2l2346 0088  
                                        i2l2338 005C                                          i2l1628 0BE4  
                                        i2l2292 0DD4                                          i2l2188 08A6  
                                        i2l2284 0CE0                                          i2l2276 0982  
                                        i2l2268 0938                                          i2l2540 04B0  
                                        i2l2532 0470                                          i2l2524 0430  
                                        i2l2516 03F0                                          i2l2508 03B0  
                                        i2l2460 02BA                                          i2l2452 028E  
                                        i2l2444 026E                                          i2l2436 0248  
                                        i2l2428 0218                                          i2l2380 0140  
                                        i2l2372 0110                                          i2l2364 00F0  
                                        i2l2356 00C6                                          i2l2348 00A0  
                                        i2l2294 0DCA                                          i2l1398 0CC6  
                                        i2l2286 0CEE                                          i2l2278 098E  
                                        i2l2550 0620                                          i2l2542 04C0  
                                        i2l2534 0480                                          i2l2526 0440  
                                        i2l2518 0400                                          i2l2470 02DE  
                                        i2l2462 02BE                                          i2l2454 0298  
                                        i2l2446 0278                                          i2l2438 024C  
                                        i2l2390 0170                                          i2l2382 0144  
                                        i2l2374 0124                                          i2l2366 00FE  
                                        i2l2358 00CE                                          i2l2296 0DCC  
                                        i2l2288 0CF2                                          i2l2552 062E  
                                        i2l2544 04D0                                          i2l2536 0490  
                                        i2l2528 0450                                          i2l2480 0312  
                                        i2l2472 02F2                                          i2l2464 02CC  
                                        i2l2456 029C                                          i2l2448 027C  
                                        i2l2392 0174                                          i2l2384 014E  
                                        i2l2376 012E                                          i2l2368 0102  
                                        i2l2538 04A0                                          i2l2490 0342  
                                        i2l2482 031C                                          i2l2474 02FC  
                                        i2l2466 02D0                                          i2l2458 02B0  
                                        i2l2394 0182                                          i2l2386 0152  
                                        i2l2378 0132                                          i2l2708 04F4  
                                        i2l2492 0350                                          i2l2484 0320  
                                        i2l2476 0300                                          i2l2468 02DA  
                                        i2l2396 0186                                          i2l2388 0166  
                                        i2l2548 04E0                                          i2l2494 0354  
                                        i2l2486 0334                                          i2l2478 030E  
                                        i2l2398 0190                                          i2l2496 035E  
                                        i2l2488 033E                                          i2l2498 0362  
                                  ?_setStepSize 0001                                          _RCREG2 000F74  
                                        _RCSTA2 000F71                                          _OSCCON 000FD3  
                                        _SPBRG2 000F75                                          i2u1_40 0CC0  
                                        i2u1_41 0CBC                                 setDirection@dir 000B  
                                        _TXREG2 000F73                                          _TXSTA2 000F72  
                            _setAmnioticPumpPWM 0982                            __size_of_encoder_IOC 00D2  
                                  _CCPTMRS1bits 000F48                             ?_setAmnioticPumpPWM 0005  
                         setAmnioticPumpPWM@pwm 0005                                          clear_0 0C84  
                         ??_get_interruptAction 000B                     _EUSART2_FramingErrorHandler 0023  
                             ??i2_EUSART2_Write 0001            __end_of_INT2_DefaultInterruptHandler 0DFE  
         __size_of_INT2_DefaultInterruptHandler 0002                    _INT2_DefaultInterruptHandler 0DFC  
                               ??_INT1_CallBack 0002   update_PIC18F_software_version_number@numTimes 000F  
                                        tblptru 000FF8                                 ??_INT2_CallBack 0002  
                       __end_of_TMR2_StartTimer 0DF6                                 ??_EUSART2_Write 000B  
      INT2_SetInterruptHandler@InterruptHandler 000B        INT1_SetInterruptHandler@InterruptHandler 000B  
     IOCB5_SetInterruptHandler@InterruptHandler 000B                                ?_PIN_MANAGER_IOC 0001  
                          ??_setAmnioticPumpPWM 0007      __end_ofi2_set_INTERRUPT_STEPPER_BREAK_FLAG 0DE2  
   __size_ofi2_set_INTERRUPT_STEPPER_BREAK_FLAG 0008        __end_of_get_INTERRUPT_STEPPER_BREAK_FLAG 0DF2  
     __size_of_get_INTERRUPT_STEPPER_BREAK_FLAG 0004        __end_of_set_INTERRUPT_STEPPER_BREAK_FLAG 0DCA  
     __size_of_set_INTERRUPT_STEPPER_BREAK_FLAG 0008              ??_get_INTERRUPT_STEPPER_BREAK_FLAG 000B  
            ??_set_INTERRUPT_STEPPER_BREAK_FLAG 000B            ??i2_set_INTERRUPT_STEPPER_BREAK_FLAG 0001  
           ?i2_set_INTERRUPT_STEPPER_BREAK_FLAG 0001               ?_get_INTERRUPT_STEPPER_BREAK_FLAG 0001  
             ?_set_INTERRUPT_STEPPER_BREAK_FLAG 0001              i2_set_INTERRUPT_STEPPER_BREAK_FLAG 0DDA  
              _get_INTERRUPT_STEPPER_BREAK_FLAG 0DEE                _set_INTERRUPT_STEPPER_BREAK_FLAG 0DC2  
                 __size_of_INTERRUPT_Initialize 0010                    __size_of_EUSART2_is_rx_ready 0014  
                             _SYSTEM_Initialize 0C24                                      __accesstop 0060  
                       __end_of__initialization 0C8A                                       ?_INT1_ISR 0001  
                                     ?_INT2_ISR 0001                                  moveUntilZ@size 000E  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                __size_of_reset_interruptAction 0006                                  __pcstackCOMRAM 0001  
                 __end_of_reset_interruptAction 0DE8                             ??_SYSTEM_Initialize 000D  
                              ?_setBloodPumpPWM 0005                                ?_PWM4_Initialize 0001  
                              ?_TMR2_Initialize 0001                     PWM4_LoadDutyValue@dutyValue 0001  
                          __end_of_EUSART2_Read 0BFE                                   ?_setDirection 0001  
                   __size_of_EXT_INT_Initialize 0026                        ?_EUSART2_SetErrorHandler 000B  
              __end_of_INT2_SetInterruptHandler 0D9A                 fp__INT2_DefaultInterruptHandler 0000  
                 ?_INT2_DefaultInterruptHandler 0001                               ??_stepperIsAsleep 0001  
                     __end_of_SYSTEM_Initialize 0C46                                ?_PWM5_Initialize 0001  
                      ?i2_reset_interruptAction 0001                                      ??_INT1_ISR 0002  
                                    ??_INT2_ISR 0002                ??_EUSART2_SetFramingErrorHandler 000D  
               ?_EUSART2_SetFramingErrorHandler 000B                                      __pnvCOMRAM 001F  
                            __size_of_initPumps 001A                                         _CCP4CON 000F57  
                                       _CCP5CON 000F54              __size_of_IOCB5_SetInterruptHandler 000A  
                    ?_IOCB5_SetInterruptHandler 000B                                  ??_setDirection 000B  
                    ??_INT1_SetInterruptHandler 000D                              _PWM5_LoadDutyValue 0B1A  
                               setStepSize@size 000D                                         _OSCCON2 000FD2  
                                       i2u24_40 0D44                                         i2u24_41 0D3E  
                                       i2u24_46 0D46                                         i2u25_40 0BE4  
                                       i2u25_41 0BE0                                         i2u26_40 0BF6  
                                       i2u26_41 0BF2                                         i2u62_40 0D06  
                                       i2u70_40 0B62                                         i2u62_41 0D02  
                                       i2u70_41 0B5E                                         _OSCTUNE 000F9B  
                                       i2u63_40 07F0                                         i2u63_41 07EC  
                                       i2u72_40 0A98                                         i2u64_40 0802  
                                       i2u71_48 0B68                                         i2u80_40 0CEE  
                                       i2u72_41 0A94                                         i2u64_41 07FE  
                                       i2u71_49 0B7C                                         i2u80_41 0CEA  
                                       i2u65_40 0812                                         i2u65_41 080E  
                                       i2u73_48 0A9E                                         i2u74_40 0A60  
                                       i2u66_40 0822                                         i2u90_40 0124  
                                       i2u82_40 0020                                         i2u73_49 0AB2  
                                       i2u74_41 0A5C                                         i2u66_41 081E  
                                       i2u90_41 0120                                         i2u82_41 001C  
                                       i2u67_40 083C                                         i2u91_40 0140  
                                       i2u83_40 002E                                         i2u67_41 0838  
                                       i2u91_41 013C                                         i2u83_41 002A  
                                       _SPBRGH2 000F76                                         i2u75_48 0A66  
                                       i2u68_40 086C                                         i2u76_40 095E  
                                       i2u92_40 0166                                         i2u84_40 004E  
                                       i2u75_49 0A7A                                         i2u68_41 0868  
                                       i2u76_41 095A                                         i2u92_41 0162  
                                       i2u84_41 004A                                         i2u69_40 087E  
                                       i2u77_40 0974                                         i2u93_40 0182  
                                       i2u85_40 005C                                         i2u69_41 087A  
                                       i2u77_41 0970                                         i2u93_41 017E  
                                       i2u85_41 0058                                         i2u78_40 09A8  
                                       i2u94_40 01A8                                         i2u86_40 007E  
                                       i2u78_41 09A4                                         i2u94_41 01A4  
                                       i2u86_41 007A                                         i2u79_40 09BC  
                                       i2u95_40 01C4                                         i2u87_40 00BC  
                                       i2u79_41 09B8                                         i2u95_41 01C0  
                                       i2u87_41 00B8                                         i2u96_40 01EA  
                                       i2u88_40 00E2                                         i2u96_41 01E6  
                                       i2u88_41 00DE                                         i2u97_40 0206  
                                       i2u89_40 00FE                                         i2u97_41 0202  
                                       i2u89_41 00FA                                         i2u98_40 022C  
                                       i2u98_41 0228                                         i2u99_40 0248  
                                       i2u99_41 0244                                ?_TMR2_StartTimer 0001  
                           ?_PWM5_LoadDutyValue 0001                               _WAS_LOW_LAST_TIME 001E  
                          __size_of_send_number 002E                            __size_of_setStepSize 008A  
                  _INTERRUPT_STEPPER_BREAK_FLAG 001C                                         __Hparam 0000  
                                       __Lparam 0000                            ??_PWM5_LoadDutyValue 0003  
                                       __pcinit 0C7E                 __end_of_EUSART2_SetErrorHandler 0DC2  
                                       __ramtop 0200                                         __ptext0 0646  
                                       __ptext1 0BAC                                         __ptext2 0B7E  
                                       __ptext3 0CCA                                         __ptext4 0DC2  
                                       __ptext5 0DE2                                         __ptext6 0AB4  
                                       __ptext7 0C46                                         __ptext8 08AE  
                                       __ptext9 0C62               __end_of_IOCB5_SetInterruptHandler 0D90  
                                     _IOCB5_ISR 0B4C              _EUSART2_DefaultOverrunErrorHandler 000000  
                             __end_of_initPumps 0CB2                           _OSCILLATOR_Initialize 0D78  
                                     _T2CONbits 000FBA                        ??_PIN_MANAGER_Initialize 000D  
               __end_ofi2_reset_interruptAction 0DEE                      __size_of_SYSTEM_Initialize 0022  
                         i2EUSART2_Write@txData 0001                            end_of_initialization 0C8A  
                      _INT2_SetInterruptHandler 0D90                  ??_INT2_DefaultInterruptHandler 0001  
                                 __Lmediumconst 0000                                      _moveUntilZ 0AB4  
                            _EUSART2_Initialize 0A06                                 i2_EUSART2_Write 0CF6  
               ??_IOCB5_DefaultInterruptHandler 0001                                         postinc0 000FEE  
                         __size_of_EUSART2_Read 0028                     __size_of_PWM4_LoadDutyValue 0032  
                           ?_EUSART2_Initialize 0001                             _EUSART2_is_rx_ready 0D34  
                                    _uart_write 0016                           _INT1_InterruptHandler 0027  
                                     _PORTBbits 000F81                                      ?_IOCB5_ISR 0001  
 __end_of_update_PIC18F_software_version_number 0BD6  __size_of_update_PIC18F_software_version_number 002A  
       ??_update_PIC18F_software_version_number 000D          ?_update_PIC18F_software_version_number 0001  
         _update_PIC18F_software_version_number 0BAC                            ??_EUSART2_Initialize 000D  
                          ?_EUSART2_is_rx_ready 0001                                   ??_encoder_IOC 0002  
                          __end_of_setDirection 0C7E                                    _EUSART2_Read 0BD6  
                             __size_of_INT1_ISR 0008                               __size_of_INT2_ISR 0008  
                   __end_of_get_interruptAction 0DFA                    __end_of_INTERRUPT_Initialize 0D68  
                               _stepperIsAsleep 0CB2                          ?_OSCILLATOR_Initialize 0001  
                           start_initialization 0C7E                 __size_of_PIN_MANAGER_Initialize 003E  
                         __end_of_INT1_CallBack 0AB4                     __size_of_setAmnioticPumpPWM 0046  
                         ??_EUSART2_is_rx_ready 0001                           __end_of_INT2_CallBack 0A7C  
                         __end_of_EUSART2_Write 0CE0                         __end_ofi2_EUSART2_Write 0D0C  
              __size_of_EUSART2_SetErrorHandler 000A                                     ?_moveUntilZ 000E  
                      __size_of_PIN_MANAGER_IOC 0016          __end_of_EUSART2_SetOverrunErrorHandler 0DAE  
       __size_of_EUSART2_SetOverrunErrorHandler 000A                  _EUSART2_SetOverrunErrorHandler 0DA4  
                                 ?_stepperSleep 0001                             __end_of_encoder_IOC 08AE  
              __size_ofi2_reset_interruptAction 0006                           _reset_interruptAction 0DE2  
                    __end_of_EXT_INT_Initialize 0C24           __end_of_IOCB5_DefaultInterruptHandler 0DFC  
        __size_of_IOCB5_DefaultInterruptHandler 0002                   _IOCB5_DefaultInterruptHandler 0DFA  
                   ??_IOCB5_SetInterruptHandler 000D                                     ??_IOCB5_ISR 0004  
                                 moveUntilZ@dir 000F                     PWM5_LoadDutyValue@dutyValue 0001  
                      __size_of_setBloodPumpPWM 004A                                     __pbssCOMRAM 0012  
                      __size_of_PWM4_Initialize 0014                        __size_of_TMR2_Initialize 0010  
                           EUSART2_Write@txData 000B                           _INT2_InterruptHandler 0025  
                        _PIN_MANAGER_Initialize 09C8                         __end_of_stepperIsAsleep 0CCA  
                             _resetEncoderTicks 0D68                                  ??_stepperSleep 000B  
                      __size_of_PWM5_Initialize 0014                                       __pintcode 0008  
                            ?_resetEncoderTicks 0001                    ??_INTERRUPT_InterruptManager 0007  
                           ??_resetEncoderTicks 0002                      ??_INT2_SetInterruptHandler 000D  
                                      _BAUDCON2 000F70                             __size_of_moveUntilZ 0034  
                                     _initPumps 0C98                           __size_of_setDirection 001C  
                                 ??_send_number 000C                            _INTERRUPT_Initialize 0D58  
                                 ??_setStepSize 000B                       _IOCB5_SetInterruptHandler 0D86  
                                      _INT1_ISR 0DD2                                        _INT2_ISR 0DCA  
                                      _IOCBbits 000F62                                        _LATAbits 000F89  
                              ?i2_EUSART2_Write 0001         EUSART2_SetErrorHandler@interruptHandler 000B  
                                      _LATBbits 000F8A                                        _LATCbits 000F8B  
             __size_of_INT1_SetInterruptHandler 000A                                     _encoder_IOC 07DC  
                     ?_INT1_SetInterruptHandler 000B                       __end_of_resetEncoderTicks 0D78  
                                      _PIE3bits 000FA3                        __size_of_TMR2_StartTimer 0004  
                                      i2u100_40 026E                                        i2u100_41 026A  
                                      i2u101_40 028A                                        i2u101_41 0286  
                                      i2u110_40 062E                                        i2u102_40 02B0  
                                      i2u110_41 062A                                        i2u102_41 02AC  
                                      i2u103_40 02CC                                        i2u103_41 02C8  
                                      i2u104_40 02F2                                        i2u104_41 02EE  
                                      i2u105_40 030E                                        i2u105_41 030A  
                                      i2u106_40 0334                                        i2u106_41 0330  
                                      i2u107_40 0350                                        i2u107_41 034C  
                                      i2u108_40 0376                                        i2u108_41 0372  
                                      i2u109_40 0620                                        i2u109_41 061C  
           __size_of_INTERRUPT_InterruptManager 063A                                        _PIR1bits 000F9E  
                                      _PIR3bits 000FA4                                        _RCONbits 000FD0  
                        ?_reset_interruptAction 0001                               ??_PIN_MANAGER_IOC 0004  
                   __size_of_PWM5_LoadDutyValue 0032                                    _setDirection 0C62  
                                    ?_initPumps 0001                                     _INTCON2bits 000FF1  
                                   _INTCON3bits 000FF0                           ?_INTERRUPT_Initialize 0001  
                             ??_setBloodPumpPWM 0007                         _EUSART2_SetErrorHandler 0DB8  
                             ??_PWM4_Initialize 000B                               ??_TMR2_Initialize 000B  
                   _EUSART2_OverrunErrorHandler 0021                             __end_of_send_number 0BAC  
                                      __Hrparam 0000                             __end_of_setStepSize 0938  
                    __end_of_PWM4_LoadDutyValue 0B1A                                ?_stepperIsAsleep 0001  
                                      __Lrparam 0000                         i2_reset_interruptAction 0DE8  
                       ??_OSCILLATOR_Initialize 000B                               ??_PWM5_Initialize 000B  
                          _EUSART2_ErrorHandler 001F                            __end_of_stepperSleep 0C62  
                                      __ptext10 0DEE                                        __ptext11 0C98  
                                      __ptext20 0D78                                        __ptext12 0DF2  
                                      __ptext21 0D58                                        __ptext13 0DF6  
                                      __ptext30 0938                                        __ptext22 0BFE  
                                      __ptext14 0C24                                        __ptext31 0AE8  
                                      __ptext23 0D90                                        __ptext15 0D48  
                                      __ptext40 0DFA                                        __ptext32 0982  
                                      __ptext24 0D9A                                        __ptext16 0D0C  
                                      __ptext41 0DCA                                        __ptext33 0B1A  
                                      __ptext25 0A06                                        __ptext17 0D20  
                                      __ptext50 0BD6                                        __ptext42 0A44  
                                      __ptext34 0D68                                        __ptext26 0DA4  
                                      __ptext18 09C8                                        __ptext51 0000  
                                      __ptext43 0DFC                                        __ptext35 0CE0  
                                      __ptext27 0DAE                                        __ptext19 0D86  
                                      __ptext44 0DD2                                        __ptext36 0B4C  
                                      __ptext28 0DB8                                        __ptext45 0A7C  
                                      __ptext37 07DC                                        __ptext46 0DDA  
                                      __ptext38 0CF6                                        __ptext47 0DE8  
                                      __ptext39 0CB2                                        __ptext48 0DFE  
                                      __ptext49 0D34                     __size_of_EUSART2_Initialize 003E  
                                 __size_of_main 0196              _EUSART2_DefaultFramingErrorHandler 000000  
                    __size_of_resetEncoderTicks 0010                                    ??_moveUntilZ 000F  
EUSART2_SetOverrunErrorHandler@interruptHandler 000B                                        int$flags 002B  
                             ??_TMR2_StartTimer 000B              __end_of_INTERRUPT_InterruptManager 0642  
                    _INTERRUPT_InterruptManager 0008            __end_of_INT1_DefaultInterruptHandler 0E00  
         __size_of_INT1_DefaultInterruptHandler 0002                    _INT1_DefaultInterruptHandler 0DFE  
                  __size_of_get_interruptAction 0004                ??_EUSART2_SetOverrunErrorHandler 000D  
               ?_EUSART2_SetOverrunErrorHandler 000B                                      _INTCONbits 000FF2  
                   __end_of_EUSART2_is_rx_ready 0D48                      __end_of_setAmnioticPumpPWM 09C8  
                            __end_of_moveUntilZ 0AE8                          ??_INTERRUPT_Initialize 000B  
                                   ??_initPumps 000B                       ??_EUSART2_SetErrorHandler 000D  
                            _EXT_INT_Initialize 0BFE                                 _interruptAction 001B  
                                 _encoder_ticks 0018                                        intlevel2 0000  
                                   _send_number 0B7E                                     _setStepSize 08AE  
                       ?_PIN_MANAGER_Initialize 0001                             ?_EXT_INT_Initialize 0001  
                                    _RCSTA2bits 000F71                       ??i2_reset_interruptAction 0001  
                        __size_of_INT1_CallBack 0038  EUSART2_SetFramingErrorHandler@interruptHandler 000B  
                        __size_of_INT2_CallBack 0038                          __size_of_EUSART2_Write 0016  
                          ??_EXT_INT_Initialize 000D                 fp__INT1_DefaultInterruptHandler 0000  
                 ?_INT1_DefaultInterruptHandler 0001                                      _UART_RX_in 001D  
              __end_of_INT1_SetInterruptHandler 0DA4                  __end_of_PIN_MANAGER_Initialize 0A06  
                            _eusart2RxLastError 001A                          _IOCB5_InterruptHandler 0029  
                               _PIN_MANAGER_IOC 0CE0                                    ?_encoder_IOC 0001  
                       ??_reset_interruptAction 000B  
