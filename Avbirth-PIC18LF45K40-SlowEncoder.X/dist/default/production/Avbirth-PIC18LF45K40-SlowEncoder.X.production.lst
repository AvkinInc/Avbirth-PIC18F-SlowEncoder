

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue Nov 05 12:50:04 2024

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F47K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	text40,global,reloc=2,class=CODE,delta=1
    50                           	psect	text41,global,reloc=2,class=CODE,delta=1
    51                           	psect	text42,global,reloc=2,class=CODE,delta=1
    52                           	psect	text43,global,reloc=2,class=CODE,delta=1
    53                           	psect	text44,global,reloc=2,class=CODE,delta=1
    54                           	psect	text45,global,reloc=2,class=CODE,delta=1
    55                           	psect	text46,global,reloc=2,class=CODE,delta=1
    56                           	psect	text47,global,reloc=2,class=CODE,delta=1
    57                           	psect	text48,global,reloc=2,class=CODE,delta=1
    58                           	psect	text49,global,reloc=2,class=CODE,delta=1
    59                           	psect	text50,global,reloc=2,class=CODE,delta=1
    60                           	psect	text51,global,reloc=2,class=CODE,delta=1
    61                           	psect	text52,global,reloc=2,class=CODE,delta=1
    62                           	psect	text53,global,reloc=2,class=CODE,delta=1
    63                           	psect	text54,global,reloc=2,class=CODE,delta=1
    64                           	psect	text55,global,reloc=2,class=CODE,delta=1
    65                           	psect	text56,global,reloc=2,class=CODE,delta=1
    66                           	psect	text57,global,reloc=2,class=CODE,delta=1
    67                           	psect	text58,global,reloc=2,class=CODE,delta=1
    68                           	psect	text59,global,reloc=2,class=CODE,delta=1
    69                           	psect	text60,global,reloc=2,class=CODE,delta=1
    70                           	psect	text61,global,reloc=2,class=CODE,delta=1
    71                           	psect	text62,global,reloc=2,class=CODE,delta=1
    72                           	psect	text63,global,reloc=2,class=CODE,delta=1
    73                           	psect	text64,global,reloc=2,class=CODE,delta=1
    74                           	psect	text65,global,reloc=2,class=CODE,delta=1
    75                           	psect	text66,global,reloc=2,class=CODE,delta=1
    76                           	psect	text67,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	text68,global,reloc=2,class=CODE,delta=1
    79                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    80                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    81                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    83  0000                     
    84                           ; Version 2.35
    85                           ; Generated 05/05/2021 GMT
    86                           ; 
    87                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution. Publication is not required when
   101                           ;        this file is used in an embedded application.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18F47K40 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119  0000                     
   120 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   121  0000                     
   122 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   123  0000                     
   124 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   125  0000                     _OSCTUNE	set	3805
   126  0000                     _OSCFRQ	set	3806
   127  0000                     _T2CON	set	4029
   128  0000                     _INT1PPS	set	3746
   129  0000                     _INT2PPS	set	3747
   130  0000                     _INLVLD	set	3874
   131  0000                     _SLRCOND	set	3875
   132  0000                     _ODCOND	set	3876
   133  0000                     _WPUD	set	3877
   134  0000                     _TRISD	set	3979
   135  0000                     _TRISC	set	3978
   136  0000                     _TRISB	set	3977
   137  0000                     _TRISA	set	3976
   138  0000                     _TRISE	set	3980
   139  0000                     _LATE	set	3975
   140  0000                     _PWM4DCL	set	4000
   141  0000                     _PWM4DCH	set	4001
   142  0000                     _PWM4CON	set	4002
   143  0000                     _PWM3DCL	set	4003
   144  0000                     _PWM3DCH	set	4004
   145  0000                     _PWM3CON	set	4005
   146  0000                     _INTCONbits	set	4082
   147  0000                     _TX1REG	set	3994
   148  0000                     _SP1BRGH	set	3996
   149  0000                     _TX1STA	set	3998
   150  0000                     _PORTAbits	set	3981
   151                           
   152                           	psect	nvCOMRAM
   153  000001                     __pnvCOMRAM:
   154                           	callstack 0
   155  000001                     _INT2_InterruptHandler:
   156                           	callstack 0
   157  000001                     	ds	3
   158  000004                     _INT1_InterruptHandler:
   159                           	callstack 0
   160  000004                     	ds	3
   161  000007                     _INT0_InterruptHandler:
   162                           	callstack 0
   163  000007                     	ds	3
   164  00000A                     _EUSART1_ErrorHandler:
   165                           	callstack 0
   166  00000A                     	ds	3
   167  00000D                     _EUSART1_OverrunErrorHandler:
   168                           	callstack 0
   169  00000D                     	ds	3
   170  000010                     _EUSART1_FramingErrorHandler:
   171                           	callstack 0
   172  000010                     	ds	3
   173  0000                     _PR2	set	4028
   174  0000                     _TMR2	set	4027
   175  0000                     _T2CONbits	set	4029
   176  0000                     _T2RSTbits	set	4032
   177  0000                     _T2HLTbits	set	4030
   178  0000                     _LATC	set	3973
   179  0000                     _LATB	set	3972
   180  0000                     _LATD	set	3974
   181  0000                     _RC1STAbits	set	3997
   182  0000                     _TX1STAbits	set	3998
   183  0000                     _INT0PPS	set	3745
   184  0000                     _RX1PPS	set	3765
   185  0000                     _PIE0bits	set	3778
   186  0000                     _PIE3bits	set	3781
   187  0000                     _LATDbits	set	3974
   188  0000                     _PIR0bits	set	3786
   189  0000                     _PIR3bits	set	3789
   190  0000                     _OSCCON1	set	3800
   191  0000                     _PIR4bits	set	3790
   192  0000                     _RA3PPS	set	3818
   193  0000                     _RC0PPS	set	3831
   194  0000                     _INLVLA	set	3853
   195  0000                     _SLRCONA	set	3854
   196  0000                     _ODCONA	set	3855
   197  0000                     _WPUA	set	3856
   198  0000                     _ANSELA	set	3857
   199  0000                     _ANSELB	set	3865
   200  0000                     _ANSELC	set	3873
   201  0000                     _ANSELD	set	3878
   202  0000                     _LATA	set	3971
   203  0000                     _LATBbits	set	3972
   204  0000                     _LATCbits	set	3973
   205  0000                     _RC1REG	set	3993
   206  0000                     _SP1BRGL	set	3995
   207  0000                     _RC1STA	set	3997
   208  0000                     _BAUD1CON	set	3999
   209  0000                     _CCPTMRSbits	set	4014
   210  0000                     _T2TMR	set	4027
   211  0000                     _T2PR	set	4028
   212  0000                     _T2HLT	set	4030
   213  0000                     _T2CLKCON	set	4031
   214  0000                     _INLVLE	set	3882
   215  0000                     _SLRCONE	set	3883
   216  0000                     _ODCONE	set	3884
   217  0000                     _WPUE	set	3885
   218  0000                     _ANSELE	set	3886
   219  0000                     _INLVLC	set	3869
   220  0000                     _SLRCONC	set	3870
   221  0000                     _ODCONC	set	3871
   222  0000                     _WPUC	set	3872
   223  0000                     _INLVLB	set	3861
   224  0000                     _SLRCONB	set	3862
   225  0000                     _ODCONB	set	3863
   226  0000                     _WPUB	set	3864
   227  0000                     _RD4PPS	set	3843
   228  0000                     _T2RST	set	4032
   229  0000                     _OSCCON3	set	3802
   230  0000                     _OSCEN	set	3804
   231  0000                     _PMD0	set	3809
   232  0000                     _PMD5	set	3814
   233  0000                     _PMD4	set	3813
   234  0000                     _PMD3	set	3812
   235  0000                     _PMD2	set	3811
   236  0000                     _PMD1	set	3810
   237                           
   238                           ; #config settings
   239                           
   240                           	psect	cinit
   241  000E4C                     __pcinit:
   242                           	callstack 0
   243  000E4C                     start_initialization:
   244                           	callstack 0
   245  000E4C                     __initialization:
   246                           	callstack 0
   247                           
   248                           ; Clear objects allocated to COMRAM (15 bytes)
   249  000E4C  EE00  F025         	lfsr	0,__pbssCOMRAM
   250  000E50  0E0F               	movlw	15
   251  000E52                     clear_0:
   252  000E52  6AEE               	clrf	postinc0,c
   253  000E54  06E8               	decf	wreg,f,c
   254  000E56  E1FD               	bnz	clear_0
   255  000E58                     end_of_initialization:
   256                           	callstack 0
   257  000E58                     __end_of__initialization:
   258                           	callstack 0
   259  000E58  9034               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   260  000E5A  9234               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   261  000E5C  0100               	movlb	0
   262  000E5E  EF6B  F003         	goto	_main	;jump to C main() function
   263                           
   264                           	psect	bssCOMRAM
   265  000025                     __pbssCOMRAM:
   266                           	callstack 0
   267  000025                     _Pumps:
   268                           	callstack 0
   269  000025                     	ds	6
   270  00002B                     _uart_write:
   271                           	callstack 0
   272  00002B                     	ds	3
   273  00002E                     _encoder_ticks:
   274                           	callstack 0
   275  00002E                     	ds	2
   276  000030                     _eusart1RxLastError:
   277                           	callstack 0
   278  000030                     	ds	1
   279  000031                     _interruptAction:
   280                           	callstack 0
   281  000031                     	ds	1
   282  000032                     _INTERRUPT_STEPPER_BREAK_FLAG:
   283                           	callstack 0
   284  000032                     	ds	1
   285  000033                     _UART_RX_in:
   286                           	callstack 0
   287  000033                     	ds	1
   288                           
   289                           	psect	cstackCOMRAM
   290  000013                     __pcstackCOMRAM:
   291                           	callstack 0
   292  000013                     i2set_INTERRUPT_STEPPER_BREAK_FLAG@in:
   293                           	callstack 0
   294  000013                     i2setBloodOn@in:
   295                           	callstack 0
   296  000013                     i2setAmnioticOn@in:
   297                           	callstack 0
   298  000013                     i2EUSART1_Write@txData:
   299                           	callstack 0
   300  000013                     i2PWM3_LoadDutyValue@dutyValue:
   301                           	callstack 0
   302  000013                     i2PWM4_LoadDutyValue@dutyValue:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x0
   306  000013                     	ds	1
   307  000014                     
   308                           ; 1 bytes @ 0x1
   309  000014                     	ds	1
   310  000015                     ??i2_PWM3_LoadDutyValue:
   311  000015                     ??i2_PWM4_LoadDutyValue:
   312                           
   313                           ; 1 bytes @ 0x2
   314  000015                     	ds	2
   315  000017                     i2setBloodPumpPWM@pwm:
   316                           	callstack 0
   317  000017                     i2setAmnioticPumpPWM@pwm:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x4
   321  000017                     	ds	2
   322  000019                     ??_readUART:
   323  000019                     
   324                           ; 1 bytes @ 0x6
   325  000019                     	ds	2
   326  00001B                     ??_INTERRUPT_InterruptManager:
   327                           
   328                           ; 1 bytes @ 0x8
   329  00001B                     	ds	2
   330  00001D                     ??_setStepSize:
   331  00001D                     set_INTERRUPT_STEPPER_BREAK_FLAG@in:
   332                           	callstack 0
   333  00001D                     setBloodOn@in:
   334                           	callstack 0
   335  00001D                     setAmnioticOn@in:
   336                           	callstack 0
   337  00001D                     EUSART1_Write@txData:
   338                           	callstack 0
   339  00001D                     stepperSleep@in:
   340                           	callstack 0
   341  00001D                     setDirection@dir:
   342                           	callstack 0
   343  00001D                     PWM3_LoadDutyValue@dutyValue:
   344                           	callstack 0
   345  00001D                     PWM4_LoadDutyValue@dutyValue:
   346                           	callstack 0
   347  00001D                     EUSART1_SetFramingErrorHandler@interruptHandler:
   348                           	callstack 0
   349  00001D                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   350                           	callstack 0
   351  00001D                     EUSART1_SetErrorHandler@interruptHandler:
   352                           	callstack 0
   353  00001D                     INT0_SetInterruptHandler@InterruptHandler:
   354                           	callstack 0
   355  00001D                     INT1_SetInterruptHandler@InterruptHandler:
   356                           	callstack 0
   357  00001D                     INT2_SetInterruptHandler@InterruptHandler:
   358                           	callstack 0
   359                           
   360                           ; 3 bytes @ 0xA
   361  00001D                     	ds	1
   362  00001E                     ??_send_number:
   363                           
   364                           ; 1 bytes @ 0xB
   365  00001E                     	ds	1
   366  00001F                     ??_PWM3_LoadDutyValue:
   367  00001F                     ??_PWM4_LoadDutyValue:
   368  00001F                     ??_update_PIC18F_software_version_number:
   369  00001F                     setStepSize@size:
   370                           	callstack 0
   371                           
   372                           ; 1 bytes @ 0xC
   373  00001F                     	ds	1
   374  000020                     moveUntilZ@size:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0xD
   378  000020                     	ds	1
   379  000021                     update_PIC18F_software_version_number@numTimes:
   380                           	callstack 0
   381  000021                     moveUntilZ@dir:
   382                           	callstack 0
   383  000021                     setBloodPumpPWM@pwm:
   384                           	callstack 0
   385  000021                     setAmnioticPumpPWM@pwm:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0xE
   389  000021                     	ds	2
   390  000023                     ??_main:
   391                           
   392                           ; 1 bytes @ 0x10
   393  000023                     	ds	2
   394                           
   395 ;;
   396 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   397 ;;
   398 ;; *************** function _main *****************
   399 ;; Defined at:
   400 ;;		line 56 in file "main.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;		None
   403 ;; Auto vars:     Size  Location     Type
   404 ;;		None
   405 ;; Return value:  Size  Location     Type
   406 ;;                  1    wreg      void 
   407 ;; Registers used:
   408 ;;		wreg, status,2, status,0, cstack
   409 ;; Tracked objects:
   410 ;;		On entry : 0/0
   411 ;;		On exit  : 0/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   416 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   417 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   418 ;;Total ram usage:        2 bytes
   419 ;; Hardware stack levels required when called: 9
   420 ;; This function calls:
   421 ;;		_SYSTEM_Initialize
   422 ;;		_get_interruptAction
   423 ;;		_initPumps
   424 ;;		_moveUntilZ
   425 ;;		_reset_interruptAction
   426 ;;		_set_INTERRUPT_STEPPER_BREAK_FLAG
   427 ;;		_stepperSleep
   428 ;;		_update_PIC18F_software_version_number
   429 ;; This function is called by:
   430 ;;		Startup code after reset
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434                           	psect	text0
   435  0006D6                     __ptext0:
   436                           	callstack 0
   437  0006D6                     _main:
   438                           	callstack 22
   439  0006D6                     
   440                           ;main.c: 59:     SYSTEM_Initialize();
   441  0006D6  EC99  F006         	call	_SYSTEM_Initialize	;wreg free
   442  0006DA                     
   443                           ;main.c: 69:     (INTCONbits.GIE = 0);
   444  0006DA  9EF2               	bcf	242,7,c	;volatile
   445  0006DC                     
   446                           ;main.c: 75:     (INTCONbits.PEIE = 0);
   447  0006DC  9CF2               	bcf	242,6,c	;volatile
   448                           
   449                           ;main.c: 80:     initPumps();
   450  0006DE  EC0F  F006         	call	_initPumps	;wreg free
   451  0006E2                     
   452                           ;main.c: 81:     stepperSleep(1);
   453  0006E2  0E01               	movlw	1
   454  0006E4  ECCC  F006         	call	_stepperSleep
   455  0006E8                     
   456                           ;main.c: 83:     _delay((unsigned long)((100)*(8000000/4000.0)));
   457  0006E8  0E02               	movlw	2
   458  0006EA  6E24               	movwf	(??_main+1)^0,c
   459  0006EC  0E04               	movlw	4
   460  0006EE  6E23               	movwf	??_main^0,c
   461  0006F0  0EBA               	movlw	186
   462  0006F2                     u1117:
   463  0006F2  2EE8               	decfsz	wreg,f,c
   464  0006F4  D7FE               	bra	u1117
   465  0006F6  2E23               	decfsz	??_main^0,f,c
   466  0006F8  D7FC               	bra	u1117
   467  0006FA  2E24               	decfsz	(??_main+1)^0,f,c
   468  0006FC  D7FA               	bra	u1117
   469  0006FE  D000               	nop2	
   470  000700                     
   471                           ;main.c: 84:     update_PIC18F_software_version_number();
   472  000700  EC6F  F006         	call	_update_PIC18F_software_version_number	;wreg free
   473  000704                     
   474                           ;main.c: 87:     (INTCONbits.GIE = 1);
   475  000704  8EF2               	bsf	242,7,c	;volatile
   476  000706                     
   477                           ;main.c: 88:     (INTCONbits.PEIE = 1);
   478  000706  8CF2               	bsf	242,6,c	;volatile
   479  000708  EFFE  F003         	goto	l2795
   480  00070C                     l2733:
   481                           
   482                           ;main.c: 96:                 reset_interruptAction();
   483  00070C  EC00  F008         	call	_reset_interruptAction	;wreg free
   484  000710                     
   485                           ;main.c: 97:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   486  000710  0E00               	movlw	0
   487  000712  ECF4  F007         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   488  000716                     
   489                           ;main.c: 98:                 moveUntilZ(FORWARDS, Full);
   490  000716  0E01               	movlw	1
   491  000718  6E20               	movwf	moveUntilZ@size^0,c
   492  00071A  0E00               	movlw	0
   493  00071C  EC3F  F005         	call	_moveUntilZ
   494                           
   495                           ;main.c: 99:                 break;
   496  000720  EFFE  F003         	goto	l2795
   497  000724                     l2739:
   498                           
   499                           ;main.c: 101:                 reset_interruptAction();
   500  000724  EC00  F008         	call	_reset_interruptAction	;wreg free
   501  000728                     
   502                           ;main.c: 102:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   503  000728  0E00               	movlw	0
   504  00072A  ECF4  F007         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   505  00072E                     
   506                           ;main.c: 103:                 moveUntilZ(BACKWARDS, Full);
   507  00072E  0E01               	movlw	1
   508  000730  6E20               	movwf	moveUntilZ@size^0,c
   509  000732  0E01               	movlw	1
   510  000734  EC3F  F005         	call	_moveUntilZ
   511                           
   512                           ;main.c: 104:                 break;
   513  000738  EFFE  F003         	goto	l2795
   514  00073C                     l2745:
   515                           
   516                           ;main.c: 106:                 reset_interruptAction();
   517  00073C  EC00  F008         	call	_reset_interruptAction	;wreg free
   518  000740                     
   519                           ;main.c: 107:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   520  000740  0E00               	movlw	0
   521  000742  ECF4  F007         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   522  000746                     
   523                           ;main.c: 108:                 moveUntilZ(FORWARDS, Half);
   524  000746  0E02               	movlw	2
   525  000748  6E20               	movwf	moveUntilZ@size^0,c
   526  00074A  0E00               	movlw	0
   527  00074C  EC3F  F005         	call	_moveUntilZ
   528                           
   529                           ;main.c: 109:                 break;
   530  000750  EFFE  F003         	goto	l2795
   531  000754                     l2751:
   532                           
   533                           ;main.c: 111:                 reset_interruptAction();
   534  000754  EC00  F008         	call	_reset_interruptAction	;wreg free
   535  000758                     
   536                           ;main.c: 112:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   537  000758  0E00               	movlw	0
   538  00075A  ECF4  F007         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   539  00075E                     
   540                           ;main.c: 113:                 moveUntilZ(BACKWARDS, Half);
   541  00075E  0E02               	movlw	2
   542  000760  6E20               	movwf	moveUntilZ@size^0,c
   543  000762  0E01               	movlw	1
   544  000764  EC3F  F005         	call	_moveUntilZ
   545                           
   546                           ;main.c: 114:                 break;
   547  000768  EFFE  F003         	goto	l2795
   548  00076C                     l2757:
   549                           
   550                           ;main.c: 116:                 reset_interruptAction();
   551  00076C  EC00  F008         	call	_reset_interruptAction	;wreg free
   552  000770                     
   553                           ;main.c: 117:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   554  000770  0E00               	movlw	0
   555  000772  ECF4  F007         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   556  000776                     
   557                           ;main.c: 118:                 moveUntilZ(FORWARDS, Quarter);
   558  000776  0E04               	movlw	4
   559  000778  6E20               	movwf	moveUntilZ@size^0,c
   560  00077A  0E00               	movlw	0
   561  00077C  EC3F  F005         	call	_moveUntilZ
   562                           
   563                           ;main.c: 119:                 break;
   564  000780  EFFE  F003         	goto	l2795
   565  000784                     l2763:
   566                           
   567                           ;main.c: 121:                 reset_interruptAction();
   568  000784  EC00  F008         	call	_reset_interruptAction	;wreg free
   569  000788                     
   570                           ;main.c: 122:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   571  000788  0E00               	movlw	0
   572  00078A  ECF4  F007         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   573  00078E                     
   574                           ;main.c: 123:                 moveUntilZ(BACKWARDS, Quarter);
   575  00078E  0E04               	movlw	4
   576  000790  6E20               	movwf	moveUntilZ@size^0,c
   577  000792  0E01               	movlw	1
   578  000794  EC3F  F005         	call	_moveUntilZ
   579                           
   580                           ;main.c: 124:                 break;
   581  000798  EFFE  F003         	goto	l2795
   582  00079C                     l2769:
   583                           
   584                           ;main.c: 126:                 reset_interruptAction();
   585  00079C  EC00  F008         	call	_reset_interruptAction	;wreg free
   586  0007A0                     
   587                           ;main.c: 127:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   588  0007A0  0E00               	movlw	0
   589  0007A2  ECF4  F007         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   590  0007A6                     
   591                           ;main.c: 128:                 moveUntilZ(FORWARDS, Eighth);
   592  0007A6  0E08               	movlw	8
   593  0007A8  6E20               	movwf	moveUntilZ@size^0,c
   594  0007AA  0E00               	movlw	0
   595  0007AC  EC3F  F005         	call	_moveUntilZ
   596                           
   597                           ;main.c: 129:                 break;
   598  0007B0  EFFE  F003         	goto	l2795
   599  0007B4                     l2775:
   600                           
   601                           ;main.c: 131:                 reset_interruptAction();
   602  0007B4  EC00  F008         	call	_reset_interruptAction	;wreg free
   603  0007B8                     
   604                           ;main.c: 132:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   605  0007B8  0E00               	movlw	0
   606  0007BA  ECF4  F007         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   607  0007BE                     
   608                           ;main.c: 133:                 moveUntilZ(BACKWARDS, Eighth);
   609  0007BE  0E08               	movlw	8
   610  0007C0  6E20               	movwf	moveUntilZ@size^0,c
   611  0007C2  0E01               	movlw	1
   612  0007C4  EC3F  F005         	call	_moveUntilZ
   613                           
   614                           ;main.c: 134:                 break;
   615  0007C8  EFFE  F003         	goto	l2795
   616  0007CC                     l2781:
   617                           
   618                           ;main.c: 136:                 reset_interruptAction();
   619  0007CC  EC00  F008         	call	_reset_interruptAction	;wreg free
   620  0007D0                     
   621                           ;main.c: 137:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   622  0007D0  0E00               	movlw	0
   623  0007D2  ECF4  F007         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   624  0007D6                     
   625                           ;main.c: 138:                 moveUntilZ(FORWARDS, Sixteenth);
   626  0007D6  0E10               	movlw	16
   627  0007D8  6E20               	movwf	moveUntilZ@size^0,c
   628  0007DA  0E00               	movlw	0
   629  0007DC  EC3F  F005         	call	_moveUntilZ
   630                           
   631                           ;main.c: 139:                 break;
   632  0007E0  EFFE  F003         	goto	l2795
   633  0007E4                     l2787:
   634                           
   635                           ;main.c: 141:                 reset_interruptAction();
   636  0007E4  EC00  F008         	call	_reset_interruptAction	;wreg free
   637  0007E8                     
   638                           ;main.c: 142:                 set_INTERRUPT_STEPPER_BREAK_FLAG(0);
   639  0007E8  0E00               	movlw	0
   640  0007EA  ECF4  F007         	call	_set_INTERRUPT_STEPPER_BREAK_FLAG
   641  0007EE                     
   642                           ;main.c: 143:                 moveUntilZ(BACKWARDS, Sixteenth);
   643  0007EE  0E10               	movlw	16
   644  0007F0  6E20               	movwf	moveUntilZ@size^0,c
   645  0007F2  0E01               	movlw	1
   646  0007F4  EC3F  F005         	call	_moveUntilZ
   647                           
   648                           ;main.c: 144:                 break;
   649  0007F8  EFFE  F003         	goto	l2795
   650  0007FC                     l719:
   651  0007FC                     l2795:
   652  0007FC  EC0D  F008         	call	_get_interruptAction	;wreg free
   653  000800  6E23               	movwf	??_main^0,c
   654  000802  6A24               	clrf	(??_main+1)^0,c
   655                           
   656                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   657                           ; Switch size 1, requested type "simple"
   658                           ; Number of cases is 1, Range of values is 0 to 0
   659                           ; switch strategies available:
   660                           ; Name         Instructions Cycles
   661                           ; simple_byte            4     3 (average)
   662                           ;	Chosen strategy is simple_byte
   663  000804  5024               	movf	(??_main+1)^0,w,c
   664  000806  0A00               	xorlw	0	; case 0
   665  000808  B4D8               	btfsc	status,2,c
   666  00080A  EF09  F004         	goto	l2861
   667  00080E  EFFE  F003         	goto	l719
   668  000812                     l2861:
   669                           
   670                           ; Switch size 1, requested type "simple"
   671                           ; Number of cases is 10, Range of values is 2 to 11
   672                           ; switch strategies available:
   673                           ; Name         Instructions Cycles
   674                           ; simple_byte           31    16 (average)
   675                           ;	Chosen strategy is simple_byte
   676  000812  5023               	movf	??_main^0,w,c
   677  000814  0A02               	xorlw	2	; case 2
   678  000816  B4D8               	btfsc	status,2,c
   679  000818  EF86  F003         	goto	l2733
   680  00081C  0A01               	xorlw	1	; case 3
   681  00081E  B4D8               	btfsc	status,2,c
   682  000820  EF92  F003         	goto	l2739
   683  000824  0A07               	xorlw	7	; case 4
   684  000826  B4D8               	btfsc	status,2,c
   685  000828  EF9E  F003         	goto	l2745
   686  00082C  0A01               	xorlw	1	; case 5
   687  00082E  B4D8               	btfsc	status,2,c
   688  000830  EFAA  F003         	goto	l2751
   689  000834  0A03               	xorlw	3	; case 6
   690  000836  B4D8               	btfsc	status,2,c
   691  000838  EFB6  F003         	goto	l2757
   692  00083C  0A01               	xorlw	1	; case 7
   693  00083E  B4D8               	btfsc	status,2,c
   694  000840  EFC2  F003         	goto	l2763
   695  000844  0A0F               	xorlw	15	; case 8
   696  000846  B4D8               	btfsc	status,2,c
   697  000848  EFCE  F003         	goto	l2769
   698  00084C  0A01               	xorlw	1	; case 9
   699  00084E  B4D8               	btfsc	status,2,c
   700  000850  EFDA  F003         	goto	l2775
   701  000854  0A03               	xorlw	3	; case 10
   702  000856  B4D8               	btfsc	status,2,c
   703  000858  EFE6  F003         	goto	l2781
   704  00085C  0A01               	xorlw	1	; case 11
   705  00085E  B4D8               	btfsc	status,2,c
   706  000860  EFF2  F003         	goto	l2787
   707  000864  EFFE  F003         	goto	l719
   708  000868  EF54  F000         	goto	start
   709  00086C                     __end_of_main:
   710                           	callstack 0
   711                           
   712 ;; *************** function _update_PIC18F_software_version_number *****************
   713 ;; Defined at:
   714 ;;		line 152 in file "main.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;		None
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  numTimes        1   14[COMRAM] unsigned char 
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		wreg, status,2, cstack
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   729 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   730 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   731 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   732 ;;Total ram usage:        3 bytes
   733 ;; Hardware stack levels used: 1
   734 ;; Hardware stack levels required when called: 8
   735 ;; This function calls:
   736 ;;		_send_number
   737 ;; This function is called by:
   738 ;;		_main
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text1
   743  000CDE                     __ptext1:
   744                           	callstack 0
   745  000CDE                     _update_PIC18F_software_version_number:
   746                           	callstack 22
   747  000CDE                     
   748                           ;main.c: 153:     (INTCONbits.GIE = 0);
   749  000CDE  9EF2               	bcf	242,7,c	;volatile
   750  000CE0                     
   751                           ;main.c: 154:     char numTimes = 4;
   752  000CE0  0E04               	movlw	4
   753  000CE2  6E21               	movwf	update_PIC18F_software_version_number@numTimes^0,c
   754  000CE4                     l2021:
   755                           
   756                           ;main.c: 157:     send_number();
   757  000CE4  EC58  F006         	call	_send_number	;wreg free
   758  000CE8                     
   759                           ;main.c: 158:     _delay((unsigned long)((300)*(8000000/4000.0)));
   760  000CE8  0E04               	movlw	4
   761  000CEA  6E20               	movwf	(??_update_PIC18F_software_version_number+1)^0,c
   762  000CEC  0E0C               	movlw	12
   763  000CEE  6E1F               	movwf	??_update_PIC18F_software_version_number^0,c
   764  000CF0  0E34               	movlw	52
   765  000CF2                     u1127:
   766  000CF2  2EE8               	decfsz	wreg,f,c
   767  000CF4  D7FE               	bra	u1127
   768  000CF6  2E1F               	decfsz	??_update_PIC18F_software_version_number^0,f,c
   769  000CF8  D7FC               	bra	u1127
   770  000CFA  2E20               	decfsz	(??_update_PIC18F_software_version_number+1)^0,f,c
   771  000CFC  D7FA               	bra	u1127
   772  000CFE                     
   773                           ;main.c: 159:     if(--numTimes == 0){
   774  000CFE  2E21               	decfsz	update_PIC18F_software_version_number@numTimes^0,f,c
   775  000D00  EF72  F006         	goto	l2021
   776  000D04                     
   777                           ;main.c: 162:         (INTCONbits.GIE = 1);
   778  000D04  8EF2               	bsf	242,7,c	;volatile
   779  000D06  0012               	return		;funcret
   780  000D08                     __end_of_update_PIC18F_software_version_number:
   781                           	callstack 0
   782                           
   783 ;; *************** function _send_number *****************
   784 ;; Defined at:
   785 ;;		line 169 in file "main.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;		None
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      void 
   792 ;; Registers used:
   793 ;;		wreg, cstack
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   801 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   802 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   803 ;;Total ram usage:        1 bytes
   804 ;; Hardware stack levels used: 1
   805 ;; Hardware stack levels required when called: 7
   806 ;; This function calls:
   807 ;;		_EUSART1_Write
   808 ;; This function is called by:
   809 ;;		_update_PIC18F_software_version_number
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           	psect	text2
   814  000CB0                     __ptext2:
   815                           	callstack 0
   816  000CB0                     _send_number:
   817                           	callstack 22
   818  000CB0                     
   819                           ;main.c: 170:     EUSART1_Write(0xEB);
   820  000CB0  0EEB               	movlw	235
   821  000CB2  ECF6  F006         	call	_EUSART1_Write
   822  000CB6                     
   823                           ;main.c: 171:     _delay((unsigned long)((10)*(8000000/4000.0)));
   824  000CB6  0E1A               	movlw	26
   825  000CB8  6E1E               	movwf	??_send_number^0,c
   826  000CBA  0EF8               	movlw	248
   827  000CBC                     u1137:
   828  000CBC  2EE8               	decfsz	wreg,f,c
   829  000CBE  D7FE               	bra	u1137
   830  000CC0  2E1E               	decfsz	??_send_number^0,f,c
   831  000CC2  D7FC               	bra	u1137
   832  000CC4  D000               	nop2	
   833  000CC6                     
   834                           ;main.c: 172:     EUSART1_Write(15);
   835  000CC6  0E0F               	movlw	15
   836  000CC8  ECF6  F006         	call	_EUSART1_Write
   837                           
   838                           ;main.c: 173:     _delay((unsigned long)((10)*(8000000/4000.0)));
   839  000CCC  0E1A               	movlw	26
   840  000CCE  6E1E               	movwf	??_send_number^0,c
   841  000CD0  0EF8               	movlw	248
   842  000CD2                     u1147:
   843  000CD2  2EE8               	decfsz	wreg,f,c
   844  000CD4  D7FE               	bra	u1147
   845  000CD6  2E1E               	decfsz	??_send_number^0,f,c
   846  000CD8  D7FC               	bra	u1147
   847  000CDA  D000               	nop2	
   848  000CDC  0012               	return		;funcret
   849  000CDE                     __end_of_send_number:
   850                           	callstack 0
   851                           
   852 ;; *************** function _EUSART1_Write *****************
   853 ;; Defined at:
   854 ;;		line 132 in file "mcc_generated_files/eusart1.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;  txData          1    wreg     unsigned char 
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  txData          1   10[COMRAM] unsigned char 
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      void 
   861 ;; Registers used:
   862 ;;		wreg
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   869 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   871 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   872 ;;Total ram usage:        1 bytes
   873 ;; Hardware stack levels used: 1
   874 ;; Hardware stack levels required when called: 6
   875 ;; This function calls:
   876 ;;		Nothing
   877 ;; This function is called by:
   878 ;;		_send_number
   879 ;;		_sendEncoderValueToBGM
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           	psect	text3
   884  000DEC                     __ptext3:
   885                           	callstack 0
   886  000DEC                     _EUSART1_Write:
   887                           	callstack 22
   888                           
   889                           ;incstack = 0
   890                           ;EUSART1_Write@txData stored from wreg
   891  000DEC  6E1D               	movwf	EUSART1_Write@txData^0,c
   892  000DEE                     l334:
   893                           
   894                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR3bits.TX1IF)
   895  000DEE  010E               	movlb	14	; () banked
   896  000DF0  A9CD               	btfss	205,4,b	;volatile
   897  000DF2  EFFD  F006         	goto	u41
   898  000DF6  EFFF  F006         	goto	u40
   899  000DFA                     u41:
   900  000DFA  EFF7  F006         	goto	l334
   901  000DFE                     u40:
   902  000DFE                     
   903                           ; BSR set to: 14
   904                           ;mcc_generated_files/eusart1.c: 138:     TX1REG = txData;
   905  000DFE  C01D  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
   906  000E02                     
   907                           ; BSR set to: 14
   908  000E02  0012               	return		;funcret
   909  000E04                     __end_of_EUSART1_Write:
   910                           	callstack 0
   911                           
   912 ;; *************** function _set_INTERRUPT_STEPPER_BREAK_FLAG *****************
   913 ;; Defined at:
   914 ;;		line 35 in file "interrupt_additions/interrupt_additions.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;  in              1    wreg     _Bool 
   917 ;; Auto vars:     Size  Location     Type
   918 ;;  in              1   10[COMRAM] _Bool 
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      void 
   921 ;; Registers used:
   922 ;;		wreg
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   929 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   931 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   932 ;;Total ram usage:        1 bytes
   933 ;; Hardware stack levels used: 1
   934 ;; Hardware stack levels required when called: 6
   935 ;; This function calls:
   936 ;;		Nothing
   937 ;; This function is called by:
   938 ;;		_main
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           	psect	text4
   943  000FE8                     __ptext4:
   944                           	callstack 0
   945  000FE8                     _set_INTERRUPT_STEPPER_BREAK_FLAG:
   946                           	callstack 24
   947                           
   948                           ; BSR set to: 14
   949                           ;incstack = 0
   950                           ;set_INTERRUPT_STEPPER_BREAK_FLAG@in stored from wreg
   951  000FE8  6E1D               	movwf	set_INTERRUPT_STEPPER_BREAK_FLAG@in^0,c
   952  000FEA                     
   953                           ;interrupt_additions/interrupt_additions.c: 36:     INTERRUPT_STEPPER_BREAK_FLAG = in;
   954  000FEA  C01D  F032         	movff	set_INTERRUPT_STEPPER_BREAK_FLAG@in,_INTERRUPT_STEPPER_BREAK_FLAG	;volatile
   955  000FEE  0012               	return		;funcret
   956  000FF0                     __end_of_set_INTERRUPT_STEPPER_BREAK_FLAG:
   957                           	callstack 0
   958                           
   959 ;; *************** function _reset_interruptAction *****************
   960 ;; Defined at:
   961 ;;		line 43 in file "interrupt_additions/interrupt_additions.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;		None
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, status,2
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   979 ;;Total ram usage:        0 bytes
   980 ;; Hardware stack levels used: 1
   981 ;; Hardware stack levels required when called: 6
   982 ;; This function calls:
   983 ;;		Nothing
   984 ;; This function is called by:
   985 ;;		_main
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           	psect	text5
   990  001000                     __ptext5:
   991                           	callstack 0
   992  001000                     _reset_interruptAction:
   993                           	callstack 24
   994  001000                     
   995                           ;interrupt_additions/interrupt_additions.c: 44:     interruptAction = NULL_ACTION;
   996  001000  0E00               	movlw	0
   997  001002  6E31               	movwf	_interruptAction^0,c	;volatile
   998  001004  0012               	return		;funcret
   999  001006                     __end_of_reset_interruptAction:
  1000                           	callstack 0
  1001                           
  1002 ;; *************** function _moveUntilZ *****************
  1003 ;; Defined at:
  1004 ;;		line 3 in file "step/step.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;  dir             1    wreg     enum E10553
  1007 ;;  size            1   13[COMRAM] enum E10557
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;  dir             1   14[COMRAM] enum E10553
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg, status,2, status,0, cstack
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1019 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1020 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1022 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1023 ;;Total ram usage:        2 bytes
  1024 ;; Hardware stack levels used: 1
  1025 ;; Hardware stack levels required when called: 7
  1026 ;; This function calls:
  1027 ;;		_get_INTERRUPT_STEPPER_BREAK_FLAG
  1028 ;;		_setDirection
  1029 ;;		_setStepSize
  1030 ;;		_stepperSleep
  1031 ;; This function is called by:
  1032 ;;		_main
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           	psect	text6
  1037  000A7E                     __ptext6:
  1038                           	callstack 0
  1039  000A7E                     _moveUntilZ:
  1040                           	callstack 23
  1041                           
  1042                           ;incstack = 0
  1043                           ;moveUntilZ@dir stored from wreg
  1044  000A7E  6E21               	movwf	moveUntilZ@dir^0,c
  1045  000A80                     
  1046                           ;step/step.c: 4:     setDirection(dir);
  1047  000A80  5021               	movf	moveUntilZ@dir^0,w,c
  1048  000A82  ECDA  F006         	call	_setDirection
  1049  000A86                     
  1050                           ;step/step.c: 5:     setStepSize(size);
  1051  000A86  5020               	movf	moveUntilZ@size^0,w,c
  1052  000A88  EC87  F004         	call	_setStepSize
  1053  000A8C                     
  1054                           ;step/step.c: 6:     stepperSleep(0);
  1055  000A8C  0E00               	movlw	0
  1056  000A8E  ECCC  F006         	call	_stepperSleep
  1057  000A92  8E85               	bsf	133,7,c	;volatile
  1058  000A94                     l2695:
  1059  000A94  EC09  F008         	call	_get_INTERRUPT_STEPPER_BREAK_FLAG	;wreg free
  1060  000A98  0900               	iorlw	0
  1061  000A9A  B4D8               	btfsc	status,2,c
  1062  000A9C  EF52  F005         	goto	u1031
  1063  000AA0  EF54  F005         	goto	u1030
  1064  000AA4                     u1031:
  1065  000AA4  EF4A  F005         	goto	l2695
  1066  000AA8                     u1030:
  1067  000AA8  9E85               	bcf	133,7,c	;volatile
  1068  000AAA                     
  1069                           ;step/step.c: 17:     stepperSleep(1);
  1070  000AAA  0E01               	movlw	1
  1071  000AAC  ECCC  F006         	call	_stepperSleep
  1072  000AB0  0012               	return		;funcret
  1073  000AB2                     __end_of_moveUntilZ:
  1074                           	callstack 0
  1075                           
  1076 ;; *************** function _stepperSleep *****************
  1077 ;; Defined at:
  1078 ;;		line 20 in file "step/step.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;  in              1    wreg     _Bool 
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;  in              1   10[COMRAM] _Bool 
  1083 ;; Return value:  Size  Location     Type
  1084 ;;                  1    wreg      void 
  1085 ;; Registers used:
  1086 ;;		wreg, status,2
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1093 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1095 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1096 ;;Total ram usage:        1 bytes
  1097 ;; Hardware stack levels used: 1
  1098 ;; Hardware stack levels required when called: 6
  1099 ;; This function calls:
  1100 ;;		Nothing
  1101 ;; This function is called by:
  1102 ;;		_main
  1103 ;;		_moveUntilZ
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text7
  1108  000D98                     __ptext7:
  1109                           	callstack 0
  1110  000D98                     _stepperSleep:
  1111                           	callstack 24
  1112                           
  1113                           ;incstack = 0
  1114                           ;stepperSleep@in stored from wreg
  1115  000D98  6E1D               	movwf	stepperSleep@in^0,c
  1116  000D9A                     
  1117                           ;step/step.c: 21:     if (in) {
  1118  000D9A  501D               	movf	stepperSleep@in^0,w,c
  1119  000D9C  B4D8               	btfsc	status,2,c
  1120  000D9E  EFD3  F006         	goto	u241
  1121  000DA2  EFD5  F006         	goto	u240
  1122  000DA6                     u241:
  1123  000DA6  EFD8  F006         	goto	l772
  1124  000DAA                     u240:
  1125  000DAA  9686               	bcf	134,3,c	;volatile
  1126  000DAC  EFD9  F006         	goto	l774
  1127  000DB0                     l772:
  1128  000DB0  8686               	bsf	134,3,c	;volatile
  1129  000DB2                     l774:
  1130  000DB2  0012               	return		;funcret
  1131  000DB4                     __end_of_stepperSleep:
  1132                           	callstack 0
  1133                           
  1134 ;; *************** function _setStepSize *****************
  1135 ;; Defined at:
  1136 ;;		line 38 in file "step/step.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;  size            1    wreg     enum E10557
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;  size            1   12[COMRAM] enum E10557
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		wreg, status,2, status,0
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1151 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1152 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1153 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1154 ;;Total ram usage:        3 bytes
  1155 ;; Hardware stack levels used: 1
  1156 ;; Hardware stack levels required when called: 6
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_moveUntilZ
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           	psect	text8
  1165  00090E                     __ptext8:
  1166                           	callstack 0
  1167  00090E                     _setStepSize:
  1168                           	callstack 23
  1169                           
  1170                           ;incstack = 0
  1171                           ;setStepSize@size stored from wreg
  1172  00090E  6E1F               	movwf	setStepSize@size^0,c
  1173  000910                     
  1174                           ;step/step.c: 39:     switch (size) {
  1175  000910  EFA6  F004         	goto	l1729
  1176  000914                     l784:
  1177  000914  9C85               	bcf	133,6,c	;volatile
  1178  000916  9A85               	bcf	133,5,c	;volatile
  1179  000918  9885               	bcf	133,4,c	;volatile
  1180  00091A  EFC7  F004         	goto	l822
  1181  00091E                     l792:
  1182  00091E  8C85               	bsf	133,6,c	;volatile
  1183  000920  9A85               	bcf	133,5,c	;volatile
  1184  000922  9885               	bcf	133,4,c	;volatile
  1185  000924  EFC7  F004         	goto	l822
  1186  000928                     l799:
  1187  000928  9C85               	bcf	133,6,c	;volatile
  1188  00092A  8A85               	bsf	133,5,c	;volatile
  1189  00092C  9885               	bcf	133,4,c	;volatile
  1190  00092E  EFC7  F004         	goto	l822
  1191  000932                     l806:
  1192  000932  8C85               	bsf	133,6,c	;volatile
  1193  000934  8A85               	bsf	133,5,c	;volatile
  1194  000936  9885               	bcf	133,4,c	;volatile
  1195  000938  EFC7  F004         	goto	l822
  1196  00093C                     l813:
  1197  00093C  8C85               	bsf	133,6,c	;volatile
  1198  00093E  8A85               	bsf	133,5,c	;volatile
  1199  000940  8885               	bsf	133,4,c	;volatile
  1200  000942  EFC7  F004         	goto	l822
  1201  000946                     l820:
  1202  000946  9686               	bcf	134,3,c	;volatile
  1203  000948  EFC7  F004         	goto	l822
  1204  00094C                     l1729:
  1205  00094C  501F               	movf	setStepSize@size^0,w,c
  1206  00094E  6E1D               	movwf	??_setStepSize^0,c
  1207  000950  6A1E               	clrf	(??_setStepSize+1)^0,c
  1208                           
  1209                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1210                           ; Switch size 1, requested type "simple"
  1211                           ; Number of cases is 1, Range of values is 0 to 0
  1212                           ; switch strategies available:
  1213                           ; Name         Instructions Cycles
  1214                           ; simple_byte            4     3 (average)
  1215                           ;	Chosen strategy is simple_byte
  1216  000952  501E               	movf	(??_setStepSize+1)^0,w,c
  1217  000954  0A00               	xorlw	0	; case 0
  1218  000956  B4D8               	btfsc	status,2,c
  1219  000958  EFB0  F004         	goto	l2863
  1220  00095C  EFA3  F004         	goto	l820
  1221  000960                     l2863:
  1222                           
  1223                           ; Switch size 1, requested type "simple"
  1224                           ; Number of cases is 5, Range of values is 1 to 16
  1225                           ; switch strategies available:
  1226                           ; Name         Instructions Cycles
  1227                           ; simple_byte           16     9 (average)
  1228                           ;	Chosen strategy is simple_byte
  1229  000960  501D               	movf	??_setStepSize^0,w,c
  1230  000962  0A01               	xorlw	1	; case 1
  1231  000964  B4D8               	btfsc	status,2,c
  1232  000966  EF8A  F004         	goto	l784
  1233  00096A  0A03               	xorlw	3	; case 2
  1234  00096C  B4D8               	btfsc	status,2,c
  1235  00096E  EF8F  F004         	goto	l792
  1236  000972  0A06               	xorlw	6	; case 4
  1237  000974  B4D8               	btfsc	status,2,c
  1238  000976  EF94  F004         	goto	l799
  1239  00097A  0A0C               	xorlw	12	; case 8
  1240  00097C  B4D8               	btfsc	status,2,c
  1241  00097E  EF99  F004         	goto	l806
  1242  000982  0A18               	xorlw	24	; case 16
  1243  000984  B4D8               	btfsc	status,2,c
  1244  000986  EF9E  F004         	goto	l813
  1245  00098A  EFA3  F004         	goto	l820
  1246  00098E                     l822:
  1247  00098E  0012               	return		;funcret
  1248  000990                     __end_of_setStepSize:
  1249                           	callstack 0
  1250                           
  1251 ;; *************** function _setDirection *****************
  1252 ;; Defined at:
  1253 ;;		line 88 in file "step/step.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  dir             1    wreg     enum E10553
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  dir             1   10[COMRAM] enum E10553
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg, status,2
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1270 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1271 ;;Total ram usage:        1 bytes
  1272 ;; Hardware stack levels used: 1
  1273 ;; Hardware stack levels required when called: 6
  1274 ;; This function calls:
  1275 ;;		Nothing
  1276 ;; This function is called by:
  1277 ;;		_moveUntilZ
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           	psect	text9
  1282  000DB4                     __ptext9:
  1283                           	callstack 0
  1284  000DB4                     _setDirection:
  1285                           	callstack 23
  1286                           
  1287                           ;incstack = 0
  1288                           ;setDirection@dir stored from wreg
  1289  000DB4  6E1D               	movwf	setDirection@dir^0,c
  1290  000DB6                     
  1291                           ;step/step.c: 90:     if (dir == FORWARDS) {
  1292  000DB6  501D               	movf	setDirection@dir^0,w,c
  1293  000DB8  A4D8               	btfss	status,2,c
  1294  000DBA  EFE1  F006         	goto	u251
  1295  000DBE  EFE3  F006         	goto	u250
  1296  000DC2                     u251:
  1297  000DC2  EFE6  F006         	goto	l829
  1298  000DC6                     u250:
  1299  000DC6  8486               	bsf	134,2,c	;volatile
  1300  000DC8  EFE7  F006         	goto	l831
  1301  000DCC                     l829:
  1302  000DCC  9486               	bcf	134,2,c	;volatile
  1303  000DCE                     l831:
  1304  000DCE  0012               	return		;funcret
  1305  000DD0                     __end_of_setDirection:
  1306                           	callstack 0
  1307                           
  1308 ;; *************** function _get_INTERRUPT_STEPPER_BREAK_FLAG *****************
  1309 ;; Defined at:
  1310 ;;		line 31 in file "interrupt_additions/interrupt_additions.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      _Bool 
  1317 ;; Registers used:
  1318 ;;		wreg, status,2
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1328 ;;Total ram usage:        0 bytes
  1329 ;; Hardware stack levels used: 1
  1330 ;; Hardware stack levels required when called: 6
  1331 ;; This function calls:
  1332 ;;		Nothing
  1333 ;; This function is called by:
  1334 ;;		_moveUntilZ
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           	psect	text10
  1339  001012                     __ptext10:
  1340                           	callstack 0
  1341  001012                     _get_INTERRUPT_STEPPER_BREAK_FLAG:
  1342                           	callstack 23
  1343  001012                     
  1344                           ;interrupt_additions/interrupt_additions.c: 32:     return INTERRUPT_STEPPER_BREAK_FLAG;
  1345  001012  5032               	movf	_INTERRUPT_STEPPER_BREAK_FLAG^0,w,c	;volatile
  1346  001014  0012               	return		;funcret
  1347  001016                     __end_of_get_INTERRUPT_STEPPER_BREAK_FLAG:
  1348                           	callstack 0
  1349                           
  1350 ;; *************** function _initPumps *****************
  1351 ;; Defined at:
  1352 ;;		line 17 in file "pumps/pumps.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;		None
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		wreg, status,2, status,0, cstack
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1370 ;;Total ram usage:        0 bytes
  1371 ;; Hardware stack levels used: 1
  1372 ;; Hardware stack levels required when called: 8
  1373 ;; This function calls:
  1374 ;;		_TMR2_StartTimer
  1375 ;;		_setAmnioticOn
  1376 ;;		_setAmnioticPumpPWM
  1377 ;;		_setBloodOn
  1378 ;;		_setBloodPumpPWM
  1379 ;; This function is called by:
  1380 ;;		_main
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text11
  1385  000C1E                     __ptext11:
  1386                           	callstack 0
  1387  000C1E                     _initPumps:
  1388                           	callstack 22
  1389  000C1E                     
  1390                           ;pumps/pumps.c: 18:     TMR2_StartTimer();
  1391  000C1E  EC03  F008         	call	_TMR2_StartTimer	;wreg free
  1392  000C22                     
  1393                           ;pumps/pumps.c: 23:     Pumps.Blood_On = 0;
  1394  000C22  0E00               	movlw	0
  1395  000C24  6E29               	movwf	(_Pumps+4)^0,c	;volatile
  1396  000C26                     
  1397                           ;pumps/pumps.c: 24:     Pumps.Amniotic_On = 0;
  1398  000C26  0E00               	movlw	0
  1399  000C28  6E2A               	movwf	(_Pumps+5)^0,c	;volatile
  1400  000C2A                     
  1401                           ;pumps/pumps.c: 25:     setBloodPumpPWM(50);
  1402  000C2A  0E00               	movlw	0
  1403  000C2C  6E22               	movwf	(setBloodPumpPWM@pwm+1)^0,c
  1404  000C2E  0E32               	movlw	50
  1405  000C30  6E21               	movwf	setBloodPumpPWM@pwm^0,c
  1406  000C32  EC31  F007         	call	_setBloodPumpPWM	;wreg free
  1407  000C36                     
  1408                           ;pumps/pumps.c: 26:     setAmnioticPumpPWM(50);
  1409  000C36  0E00               	movlw	0
  1410  000C38  6E22               	movwf	(setAmnioticPumpPWM@pwm+1)^0,c
  1411  000C3A  0E32               	movlw	50
  1412  000C3C  6E21               	movwf	setAmnioticPumpPWM@pwm^0,c
  1413  000C3E  EC3C  F007         	call	_setAmnioticPumpPWM	;wreg free
  1414  000C42                     
  1415                           ;pumps/pumps.c: 27:     setBloodOn(0);
  1416  000C42  0E00               	movlw	0
  1417  000C44  ECCD  F007         	call	_setBloodOn
  1418  000C48                     
  1419                           ;pumps/pumps.c: 28:     setAmnioticOn(0);
  1420  000C48  0E00               	movlw	0
  1421  000C4A  ECD3  F007         	call	_setAmnioticOn
  1422  000C4E  0012               	return		;funcret
  1423  000C50                     __end_of_initPumps:
  1424                           	callstack 0
  1425                           
  1426 ;; *************** function _setBloodPumpPWM *****************
  1427 ;; Defined at:
  1428 ;;		line 56 in file "pumps/pumps.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  pwm             2   14[COMRAM] unsigned short 
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;		None
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2, status,0, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1442 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1445 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1446 ;;Total ram usage:        2 bytes
  1447 ;; Hardware stack levels used: 1
  1448 ;; Hardware stack levels required when called: 7
  1449 ;; This function calls:
  1450 ;;		_PWM3_LoadDutyValue
  1451 ;; This function is called by:
  1452 ;;		_initPumps
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text12
  1457  000E62                     __ptext12:
  1458                           	callstack 0
  1459  000E62                     _setBloodPumpPWM:
  1460                           	callstack 22
  1461  000E62                     
  1462                           ;pumps/pumps.c: 57:     PWM3_LoadDutyValue(pwm);
  1463  000E62  C021  F01D         	movff	setBloodPumpPWM@pwm,PWM3_LoadDutyValue@dutyValue
  1464  000E66  C022  F01E         	movff	setBloodPumpPWM@pwm+1,PWM3_LoadDutyValue@dutyValue+1
  1465  000E6A  EC59  F005         	call	_PWM3_LoadDutyValue	;wreg free
  1466  000E6E                     
  1467                           ;pumps/pumps.c: 58:     Pumps.Blood_Pump_PWM = pwm;
  1468  000E6E  C021  F025         	movff	setBloodPumpPWM@pwm,_Pumps	;volatile
  1469  000E72  C022  F026         	movff	setBloodPumpPWM@pwm+1,_Pumps+1	;volatile
  1470  000E76  0012               	return		;funcret
  1471  000E78                     __end_of_setBloodPumpPWM:
  1472                           	callstack 0
  1473                           
  1474 ;; *************** function _PWM3_LoadDutyValue *****************
  1475 ;; Defined at:
  1476 ;;		line 74 in file "mcc_generated_files/pwm3.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  dutyValue       2   10[COMRAM] unsigned short 
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, status,0
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1490 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1492 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1493 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1494 ;;Total ram usage:        4 bytes
  1495 ;; Hardware stack levels used: 1
  1496 ;; Hardware stack levels required when called: 6
  1497 ;; This function calls:
  1498 ;;		Nothing
  1499 ;; This function is called by:
  1500 ;;		_setBloodPumpPWM
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text13
  1505  000AB2                     __ptext13:
  1506                           	callstack 0
  1507  000AB2                     _PWM3_LoadDutyValue:
  1508                           	callstack 22
  1509  000AB2                     
  1510                           ;mcc_generated_files/pwm3.c: 74:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 75:  {;mcc_generated_files/pwm3.c: 77:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  1511  000AB2  C01D  F01F         	movff	PWM3_LoadDutyValue@dutyValue,??_PWM3_LoadDutyValue
  1512  000AB6  C01E  F020         	movff	PWM3_LoadDutyValue@dutyValue+1,??_PWM3_LoadDutyValue+1
  1513  000ABA  90D8               	bcf	status,0,c
  1514  000ABC  3220               	rrcf	(??_PWM3_LoadDutyValue+1)^0,f,c
  1515  000ABE  321F               	rrcf	??_PWM3_LoadDutyValue^0,f,c
  1516  000AC0  90D8               	bcf	status,0,c
  1517  000AC2  3220               	rrcf	(??_PWM3_LoadDutyValue+1)^0,f,c
  1518  000AC4  321F               	rrcf	??_PWM3_LoadDutyValue^0,f,c
  1519  000AC6  501F               	movf	??_PWM3_LoadDutyValue^0,w,c
  1520  000AC8  6EA4               	movwf	164,c	;volatile
  1521                           
  1522                           ;mcc_generated_files/pwm3.c: 80:      PWM3DCL = (dutyValue & 0x0003)<<6;
  1523  000ACA  C01D  F01F         	movff	PWM3_LoadDutyValue@dutyValue,??_PWM3_LoadDutyValue
  1524  000ACE  0E03               	movlw	3
  1525  000AD0  161F               	andwf	??_PWM3_LoadDutyValue^0,f,c
  1526  000AD2  0E06               	movlw	6
  1527  000AD4  6E20               	movwf	(??_PWM3_LoadDutyValue+1)^0,c
  1528  000AD6                     u695:
  1529  000AD6  90D8               	bcf	status,0,c
  1530  000AD8  361F               	rlcf	??_PWM3_LoadDutyValue^0,f,c
  1531  000ADA  2E20               	decfsz	(??_PWM3_LoadDutyValue+1)^0,f,c
  1532  000ADC  EF6B  F005         	goto	u695
  1533  000AE0  501F               	movf	??_PWM3_LoadDutyValue^0,w,c
  1534  000AE2  6EA3               	movwf	163,c	;volatile
  1535  000AE4  0012               	return		;funcret
  1536  000AE6                     __end_of_PWM3_LoadDutyValue:
  1537                           	callstack 0
  1538                           
  1539 ;; *************** function _setBloodOn *****************
  1540 ;; Defined at:
  1541 ;;		line 46 in file "pumps/pumps.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  in              1    wreg     _Bool 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  in              1   10[COMRAM] _Bool 
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, status,2, status,0, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1556 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1558 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1559 ;;Total ram usage:        1 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; Hardware stack levels required when called: 7
  1562 ;; This function calls:
  1563 ;;		_resetPumps
  1564 ;; This function is called by:
  1565 ;;		_initPumps
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text14
  1570  000F9A                     __ptext14:
  1571                           	callstack 0
  1572  000F9A                     _setBloodOn:
  1573                           	callstack 22
  1574                           
  1575                           ;incstack = 0
  1576                           ;setBloodOn@in stored from wreg
  1577  000F9A  6E1D               	movwf	setBloodOn@in^0,c
  1578  000F9C                     
  1579                           ;pumps/pumps.c: 47:     Pumps.Blood_On = in;
  1580  000F9C  C01D  F029         	movff	setBloodOn@in,_Pumps+4	;volatile
  1581  000FA0                     
  1582                           ;pumps/pumps.c: 48:     resetPumps();
  1583  000FA0  EC28  F006         	call	_resetPumps	;wreg free
  1584  000FA4  0012               	return		;funcret
  1585  000FA6                     __end_of_setBloodOn:
  1586                           	callstack 0
  1587                           
  1588 ;; *************** function _setAmnioticPumpPWM *****************
  1589 ;; Defined at:
  1590 ;;		line 61 in file "pumps/pumps.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  pwm             2   14[COMRAM] unsigned short 
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;		None
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  1    wreg      void 
  1597 ;; Registers used:
  1598 ;;		wreg, status,2, status,0, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1607 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1608 ;;Total ram usage:        2 bytes
  1609 ;; Hardware stack levels used: 1
  1610 ;; Hardware stack levels required when called: 7
  1611 ;; This function calls:
  1612 ;;		_PWM4_LoadDutyValue
  1613 ;; This function is called by:
  1614 ;;		_initPumps
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text15
  1619  000E78                     __ptext15:
  1620                           	callstack 0
  1621  000E78                     _setAmnioticPumpPWM:
  1622                           	callstack 22
  1623  000E78                     
  1624                           ;pumps/pumps.c: 62:     PWM4_LoadDutyValue(pwm);
  1625  000E78  C021  F01D         	movff	setAmnioticPumpPWM@pwm,PWM4_LoadDutyValue@dutyValue
  1626  000E7C  C022  F01E         	movff	setAmnioticPumpPWM@pwm+1,PWM4_LoadDutyValue@dutyValue+1
  1627  000E80  EC73  F005         	call	_PWM4_LoadDutyValue	;wreg free
  1628  000E84                     
  1629                           ;pumps/pumps.c: 63:     Pumps.Amniotic_Pump_PWM = pwm;
  1630  000E84  C021  F027         	movff	setAmnioticPumpPWM@pwm,_Pumps+2	;volatile
  1631  000E88  C022  F028         	movff	setAmnioticPumpPWM@pwm+1,_Pumps+3	;volatile
  1632  000E8C  0012               	return		;funcret
  1633  000E8E                     __end_of_setAmnioticPumpPWM:
  1634                           	callstack 0
  1635                           
  1636 ;; *************** function _PWM4_LoadDutyValue *****************
  1637 ;; Defined at:
  1638 ;;		line 74 in file "mcc_generated_files/pwm4.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;  dutyValue       2   10[COMRAM] unsigned short 
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;		None
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg, status,2, status,0
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1652 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1654 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1655 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1656 ;;Total ram usage:        4 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; Hardware stack levels required when called: 6
  1659 ;; This function calls:
  1660 ;;		Nothing
  1661 ;; This function is called by:
  1662 ;;		_setAmnioticPumpPWM
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           	psect	text16
  1667  000AE6                     __ptext16:
  1668                           	callstack 0
  1669  000AE6                     _PWM4_LoadDutyValue:
  1670                           	callstack 22
  1671  000AE6                     
  1672                           ;mcc_generated_files/pwm4.c: 74:  void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm4.c: 75:  {;mcc_generated_files/pwm4.c: 77:      PWM4DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  1673  000AE6  C01D  F01F         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  1674  000AEA  C01E  F020         	movff	PWM4_LoadDutyValue@dutyValue+1,??_PWM4_LoadDutyValue+1
  1675  000AEE  90D8               	bcf	status,0,c
  1676  000AF0  3220               	rrcf	(??_PWM4_LoadDutyValue+1)^0,f,c
  1677  000AF2  321F               	rrcf	??_PWM4_LoadDutyValue^0,f,c
  1678  000AF4  90D8               	bcf	status,0,c
  1679  000AF6  3220               	rrcf	(??_PWM4_LoadDutyValue+1)^0,f,c
  1680  000AF8  321F               	rrcf	??_PWM4_LoadDutyValue^0,f,c
  1681  000AFA  501F               	movf	??_PWM4_LoadDutyValue^0,w,c
  1682  000AFC  6EA1               	movwf	161,c	;volatile
  1683                           
  1684                           ;mcc_generated_files/pwm4.c: 80:      PWM4DCL = (dutyValue & 0x0003)<<6;
  1685  000AFE  C01D  F01F         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
  1686  000B02  0E03               	movlw	3
  1687  000B04  161F               	andwf	??_PWM4_LoadDutyValue^0,f,c
  1688  000B06  0E06               	movlw	6
  1689  000B08  6E20               	movwf	(??_PWM4_LoadDutyValue+1)^0,c
  1690  000B0A                     u705:
  1691  000B0A  90D8               	bcf	status,0,c
  1692  000B0C  361F               	rlcf	??_PWM4_LoadDutyValue^0,f,c
  1693  000B0E  2E20               	decfsz	(??_PWM4_LoadDutyValue+1)^0,f,c
  1694  000B10  EF85  F005         	goto	u705
  1695  000B14  501F               	movf	??_PWM4_LoadDutyValue^0,w,c
  1696  000B16  6EA0               	movwf	160,c	;volatile
  1697  000B18  0012               	return		;funcret
  1698  000B1A                     __end_of_PWM4_LoadDutyValue:
  1699                           	callstack 0
  1700                           
  1701 ;; *************** function _setAmnioticOn *****************
  1702 ;; Defined at:
  1703 ;;		line 51 in file "pumps/pumps.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;  in              1    wreg     _Bool 
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  in              1   10[COMRAM] _Bool 
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      void 
  1710 ;; Registers used:
  1711 ;;		wreg, status,2, status,0, cstack
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1718 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1720 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1721 ;;Total ram usage:        1 bytes
  1722 ;; Hardware stack levels used: 1
  1723 ;; Hardware stack levels required when called: 7
  1724 ;; This function calls:
  1725 ;;		_resetPumps
  1726 ;; This function is called by:
  1727 ;;		_initPumps
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text17
  1732  000FA6                     __ptext17:
  1733                           	callstack 0
  1734  000FA6                     _setAmnioticOn:
  1735                           	callstack 22
  1736                           
  1737                           ;incstack = 0
  1738                           ;setAmnioticOn@in stored from wreg
  1739  000FA6  6E1D               	movwf	setAmnioticOn@in^0,c
  1740  000FA8                     
  1741                           ;pumps/pumps.c: 52:     Pumps.Amniotic_On = in;
  1742  000FA8  C01D  F02A         	movff	setAmnioticOn@in,_Pumps+5	;volatile
  1743  000FAC                     
  1744                           ;pumps/pumps.c: 53:     resetPumps();
  1745  000FAC  EC28  F006         	call	_resetPumps	;wreg free
  1746  000FB0  0012               	return		;funcret
  1747  000FB2                     __end_of_setAmnioticOn:
  1748                           	callstack 0
  1749                           
  1750 ;; *************** function _resetPumps *****************
  1751 ;; Defined at:
  1752 ;;		line 31 in file "pumps/pumps.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;		None
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;		None
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      void 
  1759 ;; Registers used:
  1760 ;;		wreg, status,2, status,0
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1770 ;;Total ram usage:        0 bytes
  1771 ;; Hardware stack levels used: 1
  1772 ;; Hardware stack levels required when called: 6
  1773 ;; This function calls:
  1774 ;;		Nothing
  1775 ;; This function is called by:
  1776 ;;		_setBloodOn
  1777 ;;		_setAmnioticOn
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           	psect	text18
  1782  000C50                     __ptext18:
  1783                           	callstack 0
  1784  000C50                     _resetPumps:
  1785                           	callstack 22
  1786  000C50  9C86               	bcf	134,6,c	;volatile
  1787  000C52  9684               	bcf	132,3,c	;volatile
  1788  000C54  9A86               	bcf	134,5,c	;volatile
  1789  000C56                     
  1790                           ;pumps/pumps.c: 36:    if(Pumps.Blood_On == 1){
  1791  000C56  0429               	decf	(_Pumps+4)^0,w,c	;volatile
  1792  000C58  A4D8               	btfss	status,2,c
  1793  000C5A  EF31  F006         	goto	u81
  1794  000C5E  EF33  F006         	goto	u80
  1795  000C62                     u81:
  1796  000C62  EF35  F006         	goto	l1571
  1797  000C66                     u80:
  1798  000C66  8A86               	bsf	134,5,c	;volatile
  1799  000C68  8C86               	bsf	134,6,c	;volatile
  1800  000C6A                     l1571:
  1801                           
  1802                           ;pumps/pumps.c: 40:     if(Pumps.Amniotic_On == 1){
  1803  000C6A  042A               	decf	(_Pumps+5)^0,w,c	;volatile
  1804  000C6C  A4D8               	btfss	status,2,c
  1805  000C6E  EF3B  F006         	goto	u91
  1806  000C72  EF3D  F006         	goto	u90
  1807  000C76                     u91:
  1808  000C76  EF3F  F006         	goto	l255
  1809  000C7A                     u90:
  1810  000C7A  8684               	bsf	132,3,c	;volatile
  1811  000C7C  8C86               	bsf	134,6,c	;volatile
  1812  000C7E                     l255:
  1813  000C7E  0012               	return		;funcret
  1814  000C80                     __end_of_resetPumps:
  1815                           	callstack 0
  1816                           
  1817 ;; *************** function _TMR2_StartTimer *****************
  1818 ;; Defined at:
  1819 ;;		line 106 in file "mcc_generated_files/tmr2.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;		None
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;		None
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      void 
  1826 ;; Registers used:
  1827 ;;		cstack
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1837 ;;Total ram usage:        0 bytes
  1838 ;; Hardware stack levels used: 1
  1839 ;; Hardware stack levels required when called: 7
  1840 ;; This function calls:
  1841 ;;		_TMR2_Start
  1842 ;; This function is called by:
  1843 ;;		_initPumps
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text19
  1848  001006                     __ptext19:
  1849                           	callstack 0
  1850  001006                     _TMR2_StartTimer:
  1851                           	callstack 22
  1852  001006                     
  1853                           ;mcc_generated_files/tmr2.c: 108:     TMR2_Start();
  1854  001006  EC0B  F008         	call	_TMR2_Start	;wreg free
  1855  00100A  0012               	return		;funcret
  1856  00100C                     __end_of_TMR2_StartTimer:
  1857                           	callstack 0
  1858                           
  1859 ;; *************** function _TMR2_Start *****************
  1860 ;; Defined at:
  1861 ;;		line 100 in file "mcc_generated_files/tmr2.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;		None
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;		None
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      void 
  1868 ;; Registers used:
  1869 ;;		None
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1879 ;;Total ram usage:        0 bytes
  1880 ;; Hardware stack levels used: 1
  1881 ;; Hardware stack levels required when called: 6
  1882 ;; This function calls:
  1883 ;;		Nothing
  1884 ;; This function is called by:
  1885 ;;		_TMR2_StartTimer
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           	psect	text20
  1890  001016                     __ptext20:
  1891                           	callstack 0
  1892  001016                     _TMR2_Start:
  1893                           	callstack 22
  1894  001016                     
  1895                           ;mcc_generated_files/tmr2.c: 103:     T2CONbits.TMR2ON = 1;
  1896  001016  8EBD               	bsf	189,7,c	;volatile
  1897  001018  0012               	return		;funcret
  1898  00101A                     __end_of_TMR2_Start:
  1899                           	callstack 0
  1900                           
  1901 ;; *************** function _get_interruptAction *****************
  1902 ;; Defined at:
  1903 ;;		line 39 in file "interrupt_additions/interrupt_additions.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      unsigned char 
  1910 ;; Registers used:
  1911 ;;		wreg, status,2
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1921 ;;Total ram usage:        0 bytes
  1922 ;; Hardware stack levels used: 1
  1923 ;; Hardware stack levels required when called: 6
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_main
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text21
  1932  00101A                     __ptext21:
  1933                           	callstack 0
  1934  00101A                     _get_interruptAction:
  1935                           	callstack 24
  1936  00101A                     
  1937                           ;interrupt_additions/interrupt_additions.c: 40:     return interruptAction;
  1938  00101A  5031               	movf	_interruptAction^0,w,c	;volatile
  1939  00101C  0012               	return		;funcret
  1940  00101E                     __end_of_get_interruptAction:
  1941                           	callstack 0
  1942                           
  1943 ;; *************** function _SYSTEM_Initialize *****************
  1944 ;; Defined at:
  1945 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;		None
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;		None
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		wreg, status,2, status,0, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1963 ;;Total ram usage:        0 bytes
  1964 ;; Hardware stack levels used: 1
  1965 ;; Hardware stack levels required when called: 8
  1966 ;; This function calls:
  1967 ;;		_EUSART1_Initialize
  1968 ;;		_EXT_INT_Initialize
  1969 ;;		_INTERRUPT_Initialize
  1970 ;;		_OSCILLATOR_Initialize
  1971 ;;		_PIN_MANAGER_Initialize
  1972 ;;		_PMD_Initialize
  1973 ;;		_PWM3_Initialize
  1974 ;;		_PWM4_Initialize
  1975 ;;		_TMR2_Initialize
  1976 ;; This function is called by:
  1977 ;;		_main
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           	psect	text22
  1982  000D32                     __ptext22:
  1983                           	callstack 0
  1984  000D32                     _SYSTEM_Initialize:
  1985                           	callstack 22
  1986  000D32                     
  1987                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1988  000D32  ECF8  F007         	call	_INTERRUPT_Initialize	;wreg free
  1989                           
  1990                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1991  000D36  ECE8  F006         	call	_PMD_Initialize	;wreg free
  1992                           
  1993                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1994  000D3A  EC36  F004         	call	_PIN_MANAGER_Initialize	;wreg free
  1995                           
  1996                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1997  000D3E  EC02  F007         	call	_OSCILLATOR_Initialize	;wreg free
  1998                           
  1999                           ;mcc_generated_files/mcc.c: 56:     PWM4_Initialize();
  2000  000D42  EC47  F007         	call	_PWM4_Initialize	;wreg free
  2001                           
  2002                           ;mcc_generated_files/mcc.c: 57:     PWM3_Initialize();
  2003  000D46  EC52  F007         	call	_PWM3_Initialize	;wreg free
  2004                           
  2005                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  2006  000D4A  ECBD  F006         	call	_TMR2_Initialize	;wreg free
  2007  000D4E                     
  2008                           ;mcc_generated_files/mcc.c: 59:     EXT_INT_Initialize();
  2009  000D4E  ECF4  F004         	call	_EXT_INT_Initialize	;wreg free
  2010  000D52                     
  2011                           ;mcc_generated_files/mcc.c: 60:     EUSART1_Initialize();
  2012  000D52  EC1A  F005         	call	_EUSART1_Initialize	;wreg free
  2013  000D56  0012               	return		;funcret
  2014  000D58                     __end_of_SYSTEM_Initialize:
  2015                           	callstack 0
  2016                           
  2017 ;; *************** function _TMR2_Initialize *****************
  2018 ;; Defined at:
  2019 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;		None
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;		None
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      void 
  2026 ;; Registers used:
  2027 ;;		wreg, status,2
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2037 ;;Total ram usage:        0 bytes
  2038 ;; Hardware stack levels used: 1
  2039 ;; Hardware stack levels required when called: 6
  2040 ;; This function calls:
  2041 ;;		Nothing
  2042 ;; This function is called by:
  2043 ;;		_SYSTEM_Initialize
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text23
  2048  000D7A                     __ptext23:
  2049                           	callstack 0
  2050  000D7A                     _TMR2_Initialize:
  2051                           	callstack 23
  2052  000D7A                     
  2053                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  2054  000D7A  0E01               	movlw	1
  2055  000D7C  6EBF               	movwf	191,c	;volatile
  2056                           
  2057                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  2058  000D7E  0E00               	movlw	0
  2059  000D80  6EBE               	movwf	190,c	;volatile
  2060                           
  2061                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  2062  000D82  0E00               	movlw	0
  2063  000D84  6EC0               	movwf	192,c	;volatile
  2064                           
  2065                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x18;
  2066  000D86  0E18               	movlw	24
  2067  000D88  6EBC               	movwf	188,c	;volatile
  2068                           
  2069                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  2070  000D8A  0E00               	movlw	0
  2071  000D8C  6EBB               	movwf	187,c	;volatile
  2072  000D8E                     
  2073                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  2074  000D8E  010E               	movlb	14	; () banked
  2075  000D90  93CE               	bcf	206,1,b	;volatile
  2076                           
  2077                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x8F;
  2078  000D92  0E8F               	movlw	143
  2079  000D94  6EBD               	movwf	189,c	;volatile
  2080  000D96                     
  2081                           ; BSR set to: 14
  2082  000D96  0012               	return		;funcret
  2083  000D98                     __end_of_TMR2_Initialize:
  2084                           	callstack 0
  2085                           
  2086 ;; *************** function _PWM4_Initialize *****************
  2087 ;; Defined at:
  2088 ;;		line 58 in file "mcc_generated_files/pwm4.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;		None
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;		None
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg, status,2
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2106 ;;Total ram usage:        0 bytes
  2107 ;; Hardware stack levels used: 1
  2108 ;; Hardware stack levels required when called: 6
  2109 ;; This function calls:
  2110 ;;		Nothing
  2111 ;; This function is called by:
  2112 ;;		_SYSTEM_Initialize
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           	psect	text24
  2117  000E8E                     __ptext24:
  2118                           	callstack 0
  2119  000E8E                     _PWM4_Initialize:
  2120                           	callstack 23
  2121  000E8E                     
  2122                           ;mcc_generated_files/pwm4.c: 62:     PWM4CON = 0x80;
  2123  000E8E  0E80               	movlw	128
  2124  000E90  6EA2               	movwf	162,c	;volatile
  2125                           
  2126                           ;mcc_generated_files/pwm4.c: 65:     PWM4DCH = 0x18;
  2127  000E92  0E18               	movlw	24
  2128  000E94  6EA1               	movwf	161,c	;volatile
  2129                           
  2130                           ;mcc_generated_files/pwm4.c: 68:     PWM4DCL = 0xC0;
  2131  000E96  0EC0               	movlw	192
  2132  000E98  6EA0               	movwf	160,c	;volatile
  2133                           
  2134                           ;mcc_generated_files/pwm4.c: 71:     CCPTMRSbits.P4TSEL = 1;
  2135  000E9A  50AE               	movf	174,w,c	;volatile
  2136  000E9C  0B3F               	andlw	-193
  2137  000E9E  0940               	iorlw	64
  2138  000EA0  6EAE               	movwf	174,c	;volatile
  2139  000EA2  0012               	return		;funcret
  2140  000EA4                     __end_of_PWM4_Initialize:
  2141                           	callstack 0
  2142                           
  2143 ;; *************** function _PWM3_Initialize *****************
  2144 ;; Defined at:
  2145 ;;		line 58 in file "mcc_generated_files/pwm3.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;		None
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;		None
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		wreg, status,2
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2163 ;;Total ram usage:        0 bytes
  2164 ;; Hardware stack levels used: 1
  2165 ;; Hardware stack levels required when called: 6
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_SYSTEM_Initialize
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text25
  2174  000EA4                     __ptext25:
  2175                           	callstack 0
  2176  000EA4                     _PWM3_Initialize:
  2177                           	callstack 23
  2178  000EA4                     
  2179                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
  2180  000EA4  0E80               	movlw	128
  2181  000EA6  6EA5               	movwf	165,c	;volatile
  2182                           
  2183                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0x18;
  2184  000EA8  0E18               	movlw	24
  2185  000EAA  6EA4               	movwf	164,c	;volatile
  2186                           
  2187                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
  2188  000EAC  0EC0               	movlw	192
  2189  000EAE  6EA3               	movwf	163,c	;volatile
  2190                           
  2191                           ;mcc_generated_files/pwm3.c: 71:     CCPTMRSbits.P3TSEL = 1;
  2192  000EB0  50AE               	movf	174,w,c	;volatile
  2193  000EB2  0BCF               	andlw	-49
  2194  000EB4  0910               	iorlw	16
  2195  000EB6  6EAE               	movwf	174,c	;volatile
  2196  000EB8  0012               	return		;funcret
  2197  000EBA                     __end_of_PWM3_Initialize:
  2198                           	callstack 0
  2199                           
  2200 ;; *************** function _PMD_Initialize *****************
  2201 ;; Defined at:
  2202 ;;		line 77 in file "mcc_generated_files/mcc.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;		None
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;		None
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      void 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2220 ;;Total ram usage:        0 bytes
  2221 ;; Hardware stack levels used: 1
  2222 ;; Hardware stack levels required when called: 6
  2223 ;; This function calls:
  2224 ;;		Nothing
  2225 ;; This function is called by:
  2226 ;;		_SYSTEM_Initialize
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text26
  2231  000DD0                     __ptext26:
  2232                           	callstack 0
  2233  000DD0                     _PMD_Initialize:
  2234                           	callstack 23
  2235  000DD0                     
  2236                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
  2237  000DD0  0E00               	movlw	0
  2238  000DD2  010E               	movlb	14	; () banked
  2239  000DD4  6FE1               	movwf	225,b	;volatile
  2240                           
  2241                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
  2242  000DD6  0E00               	movlw	0
  2243  000DD8  6FE2               	movwf	226,b	;volatile
  2244                           
  2245                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
  2246  000DDA  0E00               	movlw	0
  2247  000DDC  6FE3               	movwf	227,b	;volatile
  2248                           
  2249                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
  2250  000DDE  0E00               	movlw	0
  2251  000DE0  6FE4               	movwf	228,b	;volatile
  2252                           
  2253                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
  2254  000DE2  0E00               	movlw	0
  2255  000DE4  6FE5               	movwf	229,b	;volatile
  2256                           
  2257                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
  2258  000DE6  0E00               	movlw	0
  2259  000DE8  6FE6               	movwf	230,b	;volatile
  2260  000DEA                     
  2261                           ; BSR set to: 14
  2262  000DEA  0012               	return		;funcret
  2263  000DEC                     __end_of_PMD_Initialize:
  2264                           	callstack 0
  2265                           
  2266 ;; *************** function _PIN_MANAGER_Initialize *****************
  2267 ;; Defined at:
  2268 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;		None
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;		None
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		wreg, status,2
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2286 ;;Total ram usage:        0 bytes
  2287 ;; Hardware stack levels used: 1
  2288 ;; Hardware stack levels required when called: 6
  2289 ;; This function calls:
  2290 ;;		Nothing
  2291 ;; This function is called by:
  2292 ;;		_SYSTEM_Initialize
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           	psect	text27
  2297  00086C                     __ptext27:
  2298                           	callstack 0
  2299  00086C                     _PIN_MANAGER_Initialize:
  2300                           	callstack 23
  2301  00086C                     
  2302                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2303  00086C  0E00               	movlw	0
  2304  00086E  6E87               	movwf	135,c	;volatile
  2305                           
  2306                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  2307  000870  0E00               	movlw	0
  2308  000872  6E86               	movwf	134,c	;volatile
  2309                           
  2310                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0xD0;
  2311  000874  0ED0               	movlw	208
  2312  000876  6E83               	movwf	131,c	;volatile
  2313                           
  2314                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  2315  000878  0E00               	movlw	0
  2316  00087A  6E84               	movwf	132,c	;volatile
  2317                           
  2318                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x04;
  2319  00087C  0E04               	movlw	4
  2320  00087E  6E85               	movwf	133,c	;volatile
  2321                           
  2322                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  2323  000880  0E07               	movlw	7
  2324  000882  6E8C               	movwf	140,c	;volatile
  2325                           
  2326                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xF7;
  2327  000884  0EF7               	movlw	247
  2328  000886  6E88               	movwf	136,c	;volatile
  2329                           
  2330                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xD7;
  2331  000888  0ED7               	movlw	215
  2332  00088A  6E89               	movwf	137,c	;volatile
  2333                           
  2334                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x0A;
  2335  00088C  0E0A               	movlw	10
  2336  00088E  6E8A               	movwf	138,c	;volatile
  2337                           
  2338                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0x83;
  2339  000890  0E83               	movlw	131
  2340  000892  6E8B               	movwf	139,c	;volatile
  2341                           
  2342                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0x83;
  2343  000894  0E83               	movlw	131
  2344  000896  010F               	movlb	15	; () banked
  2345  000898  6F26               	movwf	38,b	;volatile
  2346                           
  2347                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x08;
  2348  00089A  0E08               	movlw	8
  2349  00089C  6F21               	movwf	33,b	;volatile
  2350                           
  2351                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xC1;
  2352  00089E  0EC1               	movlw	193
  2353  0008A0  6F19               	movwf	25,b	;volatile
  2354                           
  2355                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x06;
  2356  0008A2  0E06               	movlw	6
  2357  0008A4  6F2E               	movwf	46,b	;volatile
  2358                           
  2359                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x00;
  2360  0008A6  0E00               	movlw	0
  2361  0008A8  6F11               	movwf	17,b	;volatile
  2362                           
  2363                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  2364  0008AA  0E00               	movlw	0
  2365  0008AC  6F25               	movwf	37,b	;volatile
  2366                           
  2367                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  2368  0008AE  0E00               	movlw	0
  2369  0008B0  6F2D               	movwf	45,b	;volatile
  2370                           
  2371                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  2372  0008B2  0E00               	movlw	0
  2373  0008B4  6F18               	movwf	24,b	;volatile
  2374                           
  2375                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x50;
  2376  0008B6  0E50               	movlw	80
  2377  0008B8  6F10               	movwf	16,b	;volatile
  2378                           
  2379                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  2380  0008BA  0E00               	movlw	0
  2381  0008BC  6F20               	movwf	32,b	;volatile
  2382                           
  2383                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  2384  0008BE  0E00               	movlw	0
  2385  0008C0  6F2C               	movwf	44,b	;volatile
  2386                           
  2387                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  2388  0008C2  0E00               	movlw	0
  2389  0008C4  6F0F               	movwf	15,b	;volatile
  2390                           
  2391                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  2392  0008C6  0E00               	movlw	0
  2393  0008C8  6F17               	movwf	23,b	;volatile
  2394                           
  2395                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  2396  0008CA  0E00               	movlw	0
  2397  0008CC  6F1F               	movwf	31,b	;volatile
  2398                           
  2399                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  2400  0008CE  0E00               	movlw	0
  2401  0008D0  6F24               	movwf	36,b	;volatile
  2402  0008D2                     
  2403                           ; BSR set to: 15
  2404                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  2405  0008D2  690E               	setf	14,b	;volatile
  2406  0008D4                     
  2407                           ; BSR set to: 15
  2408                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  2409  0008D4  6916               	setf	22,b	;volatile
  2410  0008D6                     
  2411                           ; BSR set to: 15
  2412                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  2413  0008D6  691E               	setf	30,b	;volatile
  2414  0008D8                     
  2415                           ; BSR set to: 15
  2416                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  2417  0008D8  6923               	setf	35,b	;volatile
  2418                           
  2419                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  2420  0008DA  0E07               	movlw	7
  2421  0008DC  6F2B               	movwf	43,b	;volatile
  2422  0008DE                     
  2423                           ; BSR set to: 15
  2424                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  2425  0008DE  690D               	setf	13,b	;volatile
  2426  0008E0                     
  2427                           ; BSR set to: 15
  2428                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  2429  0008E0  6915               	setf	21,b	;volatile
  2430  0008E2                     
  2431                           ; BSR set to: 15
  2432                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  2433  0008E2  691D               	setf	29,b	;volatile
  2434  0008E4                     
  2435                           ; BSR set to: 15
  2436                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  2437  0008E4  6922               	setf	34,b	;volatile
  2438                           
  2439                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  2440  0008E6  0E0F               	movlw	15
  2441  0008E8  6F2A               	movwf	42,b	;volatile
  2442                           
  2443                           ;mcc_generated_files/pin_manager.c: 127:     RC0PPS = 0x09;
  2444  0008EA  0E09               	movlw	9
  2445  0008EC  010E               	movlb	14	; () banked
  2446  0008EE  6FF7               	movwf	247,b	;volatile
  2447                           
  2448                           ;mcc_generated_files/pin_manager.c: 128:     RX1PPS = 0x11;
  2449  0008F0  0E11               	movlw	17
  2450  0008F2  6FB5               	movwf	181,b	;volatile
  2451                           
  2452                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x04;
  2453  0008F4  0E04               	movlw	4
  2454  0008F6  6FA1               	movwf	161,b	;volatile
  2455                           
  2456                           ;mcc_generated_files/pin_manager.c: 130:     RD4PPS = 0x07;
  2457  0008F8  0E07               	movlw	7
  2458  0008FA  010F               	movlb	15	; () banked
  2459  0008FC  6F03               	movwf	3,b	;volatile
  2460                           
  2461                           ;mcc_generated_files/pin_manager.c: 131:     RA3PPS = 0x08;
  2462  0008FE  0E08               	movlw	8
  2463  000900  010E               	movlb	14	; () banked
  2464  000902  6FEA               	movwf	234,b	;volatile
  2465                           
  2466                           ;mcc_generated_files/pin_manager.c: 132:     INT2PPS = 0x07;
  2467  000904  0E07               	movlw	7
  2468  000906  6FA3               	movwf	163,b	;volatile
  2469                           
  2470                           ;mcc_generated_files/pin_manager.c: 133:     INT1PPS = 0x06;
  2471  000908  0E06               	movlw	6
  2472  00090A  6FA2               	movwf	162,b	;volatile
  2473  00090C                     
  2474                           ; BSR set to: 14
  2475  00090C  0012               	return		;funcret
  2476  00090E                     __end_of_PIN_MANAGER_Initialize:
  2477                           	callstack 0
  2478                           
  2479 ;; *************** function _OSCILLATOR_Initialize *****************
  2480 ;; Defined at:
  2481 ;;		line 63 in file "mcc_generated_files/mcc.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;		None
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;		None
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		wreg, status,2
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2499 ;;Total ram usage:        0 bytes
  2500 ;; Hardware stack levels used: 1
  2501 ;; Hardware stack levels required when called: 6
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_SYSTEM_Initialize
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text28
  2510  000E04                     __ptext28:
  2511                           	callstack 0
  2512  000E04                     _OSCILLATOR_Initialize:
  2513                           	callstack 23
  2514  000E04                     
  2515                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x60;
  2516  000E04  0E60               	movlw	96
  2517  000E06  010E               	movlb	14	; () banked
  2518  000E08  6FD8               	movwf	216,b	;volatile
  2519                           
  2520                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
  2521  000E0A  0E00               	movlw	0
  2522  000E0C  6FDA               	movwf	218,b	;volatile
  2523                           
  2524                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
  2525  000E0E  0E00               	movlw	0
  2526  000E10  6FDC               	movwf	220,b	;volatile
  2527                           
  2528                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x03;
  2529  000E12  0E03               	movlw	3
  2530  000E14  6FDE               	movwf	222,b	;volatile
  2531                           
  2532                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  2533  000E16  0E00               	movlw	0
  2534  000E18  6FDD               	movwf	221,b	;volatile
  2535  000E1A                     
  2536                           ; BSR set to: 14
  2537  000E1A  0012               	return		;funcret
  2538  000E1C                     __end_of_OSCILLATOR_Initialize:
  2539                           	callstack 0
  2540                           
  2541 ;; *************** function _INTERRUPT_Initialize *****************
  2542 ;; Defined at:
  2543 ;;		line 53 in file "mcc_generated_files/interrupt_manager.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;		None
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;		None
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  1    wreg      void 
  2550 ;; Registers used:
  2551 ;;		wreg, status,2, cstack
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2561 ;;Total ram usage:        0 bytes
  2562 ;; Hardware stack levels used: 1
  2563 ;; Hardware stack levels required when called: 7
  2564 ;; This function calls:
  2565 ;;		_interruptAdditionsInit
  2566 ;; This function is called by:
  2567 ;;		_SYSTEM_Initialize
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           
  2571                           	psect	text29
  2572  000FF0                     __ptext29:
  2573                           	callstack 0
  2574  000FF0                     _INTERRUPT_Initialize:
  2575                           	callstack 22
  2576  000FF0                     
  2577                           ;mcc_generated_files/interrupt_manager.c: 56:     INTCONbits.IPEN = 0;
  2578  000FF0  9AF2               	bcf	242,5,c	;volatile
  2579  000FF2                     
  2580                           ;mcc_generated_files/interrupt_manager.c: 58:     interruptAdditionsInit();
  2581  000FF2  EC89  F007         	call	_interruptAdditionsInit	;wreg free
  2582  000FF6  0012               	return		;funcret
  2583  000FF8                     __end_of_INTERRUPT_Initialize:
  2584                           	callstack 0
  2585                           
  2586 ;; *************** function _interruptAdditionsInit *****************
  2587 ;; Defined at:
  2588 ;;		line 15 in file "interrupt_additions/interrupt_additions.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;		None
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;		None
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      void 
  2595 ;; Registers used:
  2596 ;;		wreg, status,2
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2606 ;;Total ram usage:        0 bytes
  2607 ;; Hardware stack levels used: 1
  2608 ;; Hardware stack levels required when called: 6
  2609 ;; This function calls:
  2610 ;;		Nothing
  2611 ;; This function is called by:
  2612 ;;		_INTERRUPT_Initialize
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text30
  2617  000F12                     __ptext30:
  2618                           	callstack 0
  2619  000F12                     _interruptAdditionsInit:
  2620                           	callstack 22
  2621  000F12                     
  2622                           ;interrupt_additions/interrupt_additions.c: 18:     PIE3bits.RC1IE = 1;
  2623  000F12  010E               	movlb	14	; () banked
  2624  000F14  8BC5               	bsf	197,5,b	;volatile
  2625                           
  2626                           ;interrupt_additions/interrupt_additions.c: 20:     PIR3bits.RC1IF = 0;
  2627  000F16  9BCD               	bcf	205,5,b	;volatile
  2628                           
  2629                           ;interrupt_additions/interrupt_additions.c: 23:     PIR0bits.INT0IF = 0;
  2630  000F18  91CA               	bcf	202,0,b	;volatile
  2631                           
  2632                           ;interrupt_additions/interrupt_additions.c: 24:     PIR0bits.INT1IF = 0;
  2633  000F1A  93CA               	bcf	202,1,b	;volatile
  2634                           
  2635                           ;interrupt_additions/interrupt_additions.c: 25:     PIR0bits.INT2IF = 0;
  2636  000F1C  95CA               	bcf	202,2,b	;volatile
  2637  000F1E                     
  2638                           ; BSR set to: 14
  2639                           ;interrupt_additions/interrupt_additions.c: 28:     interruptAction = NULL_ACTION;
  2640  000F1E  0E00               	movlw	0
  2641  000F20  6E31               	movwf	_interruptAction^0,c	;volatile
  2642  000F22                     
  2643                           ; BSR set to: 14
  2644  000F22  0012               	return		;funcret
  2645  000F24                     __end_of_interruptAdditionsInit:
  2646                           	callstack 0
  2647                           
  2648 ;; *************** function _EXT_INT_Initialize *****************
  2649 ;; Defined at:
  2650 ;;		line 120 in file "mcc_generated_files/ext_int.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;		None
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;		None
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      void 
  2657 ;; Registers used:
  2658 ;;		wreg, status,2, status,0, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2668 ;;Total ram usage:        0 bytes
  2669 ;; Hardware stack levels used: 1
  2670 ;; Hardware stack levels required when called: 7
  2671 ;; This function calls:
  2672 ;;		_INT0_SetInterruptHandler
  2673 ;;		_INT1_SetInterruptHandler
  2674 ;;		_INT2_SetInterruptHandler
  2675 ;; This function is called by:
  2676 ;;		_SYSTEM_Initialize
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           	psect	text31
  2681  0009E8                     __ptext31:
  2682                           	callstack 0
  2683  0009E8                     _EXT_INT_Initialize:
  2684                           	callstack 22
  2685  0009E8                     
  2686                           ;mcc_generated_files/ext_int.c: 125:     (PIR0bits.INT0IF = 0);
  2687  0009E8  010E               	movlb	14	; () banked
  2688  0009EA  91CA               	bcf	202,0,b	;volatile
  2689                           
  2690                           ;mcc_generated_files/ext_int.c: 126:     (INTCONbits.INT0EDG = 0);
  2691  0009EC  90F2               	bcf	242,0,c	;volatile
  2692  0009EE                     
  2693                           ; BSR set to: 14
  2694                           ;mcc_generated_files/ext_int.c: 128:     INT0_SetInterruptHandler(INT0_DefaultInterruptH
      +                          andler);
  2695  0009EE  0E22               	movlw	low _INT0_DefaultInterruptHandler
  2696  0009F0  6E1D               	movwf	INT0_SetInterruptHandler@InterruptHandler^0,c
  2697  0009F2  0E10               	movlw	high _INT0_DefaultInterruptHandler
  2698  0009F4  6E1E               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^0,c
  2699  0009F6  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
  2700  0009F8  6E1F               	movwf	(INT0_SetInterruptHandler@InterruptHandler+2)^0,c
  2701  0009FA  ECB1  F007         	call	_INT0_SetInterruptHandler	;wreg free
  2702  0009FE                     
  2703                           ;mcc_generated_files/ext_int.c: 129:     (PIE0bits.INT0IE = 1);
  2704  0009FE  010E               	movlb	14	; () banked
  2705  000A00  81C2               	bsf	194,0,b	;volatile
  2706  000A02                     
  2707                           ; BSR set to: 14
  2708                           ;mcc_generated_files/ext_int.c: 134:     (PIR0bits.INT1IF = 0);
  2709  000A02  93CA               	bcf	202,1,b	;volatile
  2710  000A04                     
  2711                           ; BSR set to: 14
  2712                           ;mcc_generated_files/ext_int.c: 135:     (INTCONbits.INT1EDG = 0);
  2713  000A04  92F2               	bcf	242,1,c	;volatile
  2714                           
  2715                           ;mcc_generated_files/ext_int.c: 137:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
  2716  000A06  0E20               	movlw	low _INT1_DefaultInterruptHandler
  2717  000A08  6E1D               	movwf	INT1_SetInterruptHandler@InterruptHandler^0,c
  2718  000A0A  0E10               	movlw	high _INT1_DefaultInterruptHandler
  2719  000A0C  6E1E               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^0,c
  2720  000A0E  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
  2721  000A10  6E1F               	movwf	(INT1_SetInterruptHandler@InterruptHandler+2)^0,c
  2722  000A12  ECAA  F007         	call	_INT1_SetInterruptHandler	;wreg free
  2723  000A16                     
  2724                           ;mcc_generated_files/ext_int.c: 138:     (PIE0bits.INT1IE = 1);
  2725  000A16  010E               	movlb	14	; () banked
  2726  000A18  83C2               	bsf	194,1,b	;volatile
  2727  000A1A                     
  2728                           ; BSR set to: 14
  2729                           ;mcc_generated_files/ext_int.c: 143:     (PIR0bits.INT2IF = 0);
  2730  000A1A  95CA               	bcf	202,2,b	;volatile
  2731  000A1C                     
  2732                           ; BSR set to: 14
  2733                           ;mcc_generated_files/ext_int.c: 144:     (INTCONbits.INT2EDG = 0);
  2734  000A1C  94F2               	bcf	242,2,c	;volatile
  2735                           
  2736                           ;mcc_generated_files/ext_int.c: 146:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
  2737  000A1E  0E1E               	movlw	low _INT2_DefaultInterruptHandler
  2738  000A20  6E1D               	movwf	INT2_SetInterruptHandler@InterruptHandler^0,c
  2739  000A22  0E10               	movlw	high _INT2_DefaultInterruptHandler
  2740  000A24  6E1E               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^0,c
  2741  000A26  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
  2742  000A28  6E1F               	movwf	(INT2_SetInterruptHandler@InterruptHandler+2)^0,c
  2743  000A2A  ECA3  F007         	call	_INT2_SetInterruptHandler	;wreg free
  2744  000A2E                     
  2745                           ;mcc_generated_files/ext_int.c: 147:     (PIE0bits.INT2IE = 1);
  2746  000A2E  010E               	movlb	14	; () banked
  2747  000A30  85C2               	bsf	194,2,b	;volatile
  2748  000A32                     
  2749                           ; BSR set to: 14
  2750  000A32  0012               	return		;funcret
  2751  000A34                     __end_of_EXT_INT_Initialize:
  2752                           	callstack 0
  2753                           
  2754 ;; *************** function _INT2_SetInterruptHandler *****************
  2755 ;; Defined at:
  2756 ;;		line 111 in file "mcc_generated_files/ext_int.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  InterruptHan    3   10[COMRAM] PTR FTN()void 
  2759 ;;		 -> INT2_DefaultInterruptHandler(1), 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;		None
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  1    wreg      void 
  2764 ;; Registers used:
  2765 ;;		wreg, status,2, status,0
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2771 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2774 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2775 ;;Total ram usage:        3 bytes
  2776 ;; Hardware stack levels used: 1
  2777 ;; Hardware stack levels required when called: 6
  2778 ;; This function calls:
  2779 ;;		Nothing
  2780 ;; This function is called by:
  2781 ;;		_EXT_INT_Initialize
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text32
  2786  000F46                     __ptext32:
  2787                           	callstack 0
  2788  000F46                     _INT2_SetInterruptHandler:
  2789                           	callstack 22
  2790  000F46                     
  2791                           ;mcc_generated_files/ext_int.c: 112:     INT2_InterruptHandler = InterruptHandler;
  2792  000F46  C01D  F001         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  2793  000F4A  C01E  F002         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  2794  000F4E  C01F  F003         	movff	INT2_SetInterruptHandler@InterruptHandler+2,_INT2_InterruptHandler+2
  2795  000F52  0012               	return		;funcret
  2796  000F54                     __end_of_INT2_SetInterruptHandler:
  2797                           	callstack 0
  2798                           
  2799 ;; *************** function _INT1_SetInterruptHandler *****************
  2800 ;; Defined at:
  2801 ;;		line 84 in file "mcc_generated_files/ext_int.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  InterruptHan    3   10[COMRAM] PTR FTN()void 
  2804 ;;		 -> INT1_DefaultInterruptHandler(1), 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;		None
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  1    wreg      void 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2816 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2819 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2820 ;;Total ram usage:        3 bytes
  2821 ;; Hardware stack levels used: 1
  2822 ;; Hardware stack levels required when called: 6
  2823 ;; This function calls:
  2824 ;;		Nothing
  2825 ;; This function is called by:
  2826 ;;		_EXT_INT_Initialize
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           	psect	text33
  2831  000F54                     __ptext33:
  2832                           	callstack 0
  2833  000F54                     _INT1_SetInterruptHandler:
  2834                           	callstack 22
  2835  000F54                     
  2836                           ;mcc_generated_files/ext_int.c: 85:     INT1_InterruptHandler = InterruptHandler;
  2837  000F54  C01D  F004         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  2838  000F58  C01E  F005         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  2839  000F5C  C01F  F006         	movff	INT1_SetInterruptHandler@InterruptHandler+2,_INT1_InterruptHandler+2
  2840  000F60  0012               	return		;funcret
  2841  000F62                     __end_of_INT1_SetInterruptHandler:
  2842                           	callstack 0
  2843                           
  2844 ;; *************** function _INT0_SetInterruptHandler *****************
  2845 ;; Defined at:
  2846 ;;		line 57 in file "mcc_generated_files/ext_int.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;  InterruptHan    3   10[COMRAM] PTR FTN()void 
  2849 ;;		 -> INT0_DefaultInterruptHandler(1), 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;		None
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  1    wreg      void 
  2854 ;; Registers used:
  2855 ;;		wreg, status,2, status,0
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2861 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2864 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2865 ;;Total ram usage:        3 bytes
  2866 ;; Hardware stack levels used: 1
  2867 ;; Hardware stack levels required when called: 6
  2868 ;; This function calls:
  2869 ;;		Nothing
  2870 ;; This function is called by:
  2871 ;;		_EXT_INT_Initialize
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           	psect	text34
  2876  000F62                     __ptext34:
  2877                           	callstack 0
  2878  000F62                     _INT0_SetInterruptHandler:
  2879                           	callstack 22
  2880  000F62                     
  2881                           ;mcc_generated_files/ext_int.c: 58:     INT0_InterruptHandler = InterruptHandler;
  2882  000F62  C01D  F007         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  2883  000F66  C01E  F008         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  2884  000F6A  C01F  F009         	movff	INT0_SetInterruptHandler@InterruptHandler+2,_INT0_InterruptHandler+2
  2885  000F6E  0012               	return		;funcret
  2886  000F70                     __end_of_INT0_SetInterruptHandler:
  2887                           	callstack 0
  2888                           
  2889 ;; *************** function _EUSART1_Initialize *****************
  2890 ;; Defined at:
  2891 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;		None
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;		None
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  1    wreg      void 
  2898 ;; Registers used:
  2899 ;;		wreg, status,2, status,0, cstack
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2909 ;;Total ram usage:        0 bytes
  2910 ;; Hardware stack levels used: 1
  2911 ;; Hardware stack levels required when called: 7
  2912 ;; This function calls:
  2913 ;;		_EUSART1_SetErrorHandler
  2914 ;;		_EUSART1_SetFramingErrorHandler
  2915 ;;		_EUSART1_SetOverrunErrorHandler
  2916 ;; This function is called by:
  2917 ;;		_SYSTEM_Initialize
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           	psect	text35
  2922  000A34                     __ptext35:
  2923                           	callstack 0
  2924  000A34                     _EUSART1_Initialize:
  2925                           	callstack 22
  2926  000A34                     
  2927                           ;mcc_generated_files/eusart1.c: 71:     BAUD1CON = 0x08;
  2928  000A34  0E08               	movlw	8
  2929  000A36  6E9F               	movwf	159,c	;volatile
  2930                           
  2931                           ;mcc_generated_files/eusart1.c: 74:     RC1STA = 0x90;
  2932  000A38  0E90               	movlw	144
  2933  000A3A  6E9D               	movwf	157,c	;volatile
  2934                           
  2935                           ;mcc_generated_files/eusart1.c: 77:     TX1STA = 0x24;
  2936  000A3C  0E24               	movlw	36
  2937  000A3E  6E9E               	movwf	158,c	;volatile
  2938                           
  2939                           ;mcc_generated_files/eusart1.c: 80:     SP1BRGL = 0xCF;
  2940  000A40  0ECF               	movlw	207
  2941  000A42  6E9B               	movwf	155,c	;volatile
  2942                           
  2943                           ;mcc_generated_files/eusart1.c: 83:     SP1BRGH = 0x00;
  2944  000A44  0E00               	movlw	0
  2945  000A46  6E9C               	movwf	156,c	;volatile
  2946  000A48                     
  2947                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  2948  000A48  0E00               	movlw	0
  2949  000A4A  6E1D               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  2950  000A4C  0E00               	movlw	0
  2951  000A4E  6E1E               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  2952  000A50  0E00               	movlw	0
  2953  000A52  6E1F               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+2)^0,c
  2954  000A54  ECBF  F007         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2955  000A58                     
  2956                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  2957  000A58  0E00               	movlw	0
  2958  000A5A  6E1D               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  2959  000A5C  0E00               	movlw	0
  2960  000A5E  6E1E               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2961  000A60  0E00               	movlw	0
  2962  000A62  6E1F               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+2)^0,c
  2963  000A64  ECB8  F007         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2964  000A68                     
  2965                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  2966  000A68  0E00               	movlw	0
  2967  000A6A  6E1D               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  2968  000A6C  0E00               	movlw	0
  2969  000A6E  6E1E               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  2970  000A70  0E00               	movlw	0
  2971  000A72  6E1F               	movwf	(EUSART1_SetErrorHandler@interruptHandler+2)^0,c
  2972  000A74  ECC6  F007         	call	_EUSART1_SetErrorHandler	;wreg free
  2973  000A78                     
  2974                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  2975  000A78  0E00               	movlw	0
  2976  000A7A  6E30               	movwf	_eusart1RxLastError^0,c	;volatile
  2977  000A7C  0012               	return		;funcret
  2978  000A7E                     __end_of_EUSART1_Initialize:
  2979                           	callstack 0
  2980                           
  2981 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2982 ;; Defined at:
  2983 ;;		line 161 in file "mcc_generated_files/eusart1.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  interruptHan    3   10[COMRAM] PTR FTN()void 
  2986 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;		None
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  1    wreg      void 
  2991 ;; Registers used:
  2992 ;;		wreg, status,2, status,0
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2998 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3001 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3002 ;;Total ram usage:        3 bytes
  3003 ;; Hardware stack levels used: 1
  3004 ;; Hardware stack levels required when called: 6
  3005 ;; This function calls:
  3006 ;;		Nothing
  3007 ;; This function is called by:
  3008 ;;		_EUSART1_Initialize
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           	psect	text36
  3013  000F70                     __ptext36:
  3014                           	callstack 0
  3015  000F70                     _EUSART1_SetOverrunErrorHandler:
  3016                           	callstack 22
  3017  000F70                     
  3018                           ;mcc_generated_files/eusart1.c: 162:     EUSART1_OverrunErrorHandler = interruptHandler;
  3019  000F70  C01D  F00D         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  3020  000F74  C01E  F00E         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  3021  000F78  C01F  F00F         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+2,_EUSART1_OverrunErrorHandler+2
  3022  000F7C  0012               	return		;funcret
  3023  000F7E                     __end_of_EUSART1_SetOverrunErrorHandler:
  3024                           	callstack 0
  3025                           
  3026 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  3027 ;; Defined at:
  3028 ;;		line 157 in file "mcc_generated_files/eusart1.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  interruptHan    3   10[COMRAM] PTR FTN()void 
  3031 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;		None
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2, status,0
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3043 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3046 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3047 ;;Total ram usage:        3 bytes
  3048 ;; Hardware stack levels used: 1
  3049 ;; Hardware stack levels required when called: 6
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_EUSART1_Initialize
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text37
  3058  000F7E                     __ptext37:
  3059                           	callstack 0
  3060  000F7E                     _EUSART1_SetFramingErrorHandler:
  3061                           	callstack 22
  3062  000F7E                     
  3063                           ;mcc_generated_files/eusart1.c: 158:     EUSART1_FramingErrorHandler = interruptHandler;
  3064  000F7E  C01D  F010         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3065  000F82  C01E  F011         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3066  000F86  C01F  F012         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+2,_EUSART1_FramingErrorHandler+2
  3067  000F8A  0012               	return		;funcret
  3068  000F8C                     __end_of_EUSART1_SetFramingErrorHandler:
  3069                           	callstack 0
  3070                           
  3071 ;; *************** function _EUSART1_SetErrorHandler *****************
  3072 ;; Defined at:
  3073 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;  interruptHan    3   10[COMRAM] PTR FTN()void 
  3076 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;		None
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		wreg, status,2, status,0
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3088 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3091 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3092 ;;Total ram usage:        3 bytes
  3093 ;; Hardware stack levels used: 1
  3094 ;; Hardware stack levels required when called: 6
  3095 ;; This function calls:
  3096 ;;		Nothing
  3097 ;; This function is called by:
  3098 ;;		_EUSART1_Initialize
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           	psect	text38
  3103  000F8C                     __ptext38:
  3104                           	callstack 0
  3105  000F8C                     _EUSART1_SetErrorHandler:
  3106                           	callstack 22
  3107  000F8C                     
  3108                           ;mcc_generated_files/eusart1.c: 166:     EUSART1_ErrorHandler = interruptHandler;
  3109  000F8C  C01D  F00A         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3110  000F90  C01E  F00B         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3111  000F94  C01F  F00C         	movff	EUSART1_SetErrorHandler@interruptHandler+2,_EUSART1_ErrorHandler+2
  3112  000F98  0012               	return		;funcret
  3113  000F9A                     __end_of_EUSART1_SetErrorHandler:
  3114                           	callstack 0
  3115                           
  3116 ;; *************** function _INTERRUPT_InterruptManager *****************
  3117 ;; Defined at:
  3118 ;;		line 61 in file "mcc_generated_files/interrupt_manager.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;		None
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;		None
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  1    wreg      void 
  3125 ;; Registers used:
  3126 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3134 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3135 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3136 ;;Total ram usage:        2 bytes
  3137 ;; Hardware stack levels used: 1
  3138 ;; Hardware stack levels required when called: 5
  3139 ;; This function calls:
  3140 ;;		_EUSART1_is_rx_ready
  3141 ;;		_INT0_ISR
  3142 ;;		_INT1_ISR
  3143 ;;		_INT2_ISR
  3144 ;;		_readUART
  3145 ;; This function is called by:
  3146 ;;		Interrupt level 2
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	intcode
  3151  000008                     __pintcode:
  3152                           	callstack 0
  3153  000008                     _INTERRUPT_InterruptManager:
  3154                           	callstack 22
  3155                           
  3156                           ;incstack = 0
  3157  000008  8234               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3158  00000A  CFFA F01B          	movff	pclath,??_INTERRUPT_InterruptManager
  3159  00000E  CFFB F01C          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3160  000012                     
  3161                           ;mcc_generated_files/interrupt_manager.c: 64:     if(PIE0bits.INT0IE == 1 && PIR0bits.IN
      +                          T0IF == 1)
  3162  000012  010E               	movlb	14	; () banked
  3163  000014  A1C2               	btfss	194,0,b	;volatile
  3164  000016  EF0F  F000         	goto	i2u104_41
  3165  00001A  EF11  F000         	goto	i2u104_40
  3166  00001E                     i2u104_41:
  3167  00001E  EF1C  F000         	goto	i2l447
  3168  000022                     i2u104_40:
  3169  000022                     
  3170                           ; BSR set to: 14
  3171  000022  A1CA               	btfss	202,0,b	;volatile
  3172  000024  EF16  F000         	goto	i2u105_41
  3173  000028  EF18  F000         	goto	i2u105_40
  3174  00002C                     i2u105_41:
  3175  00002C  EF1C  F000         	goto	i2l447
  3176  000030                     i2u105_40:
  3177  000030                     
  3178                           ; BSR set to: 14
  3179                           ;mcc_generated_files/interrupt_manager.c: 65:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 66:         INT0_ISR();
  3180  000030  ECEF  F007         	call	_INT0_ISR	;wreg free
  3181                           
  3182                           ;mcc_generated_files/interrupt_manager.c: 67:     }
  3183  000034  EF4E  F000         	goto	i2l455
  3184  000038                     i2l447:
  3185                           
  3186                           ; BSR set to: 14
  3187  000038  A3C2               	btfss	194,1,b	;volatile
  3188  00003A  EF21  F000         	goto	i2u106_41
  3189  00003E  EF23  F000         	goto	i2u106_40
  3190  000042                     i2u106_41:
  3191  000042  EF2E  F000         	goto	i2l449
  3192  000046                     i2u106_40:
  3193  000046                     
  3194                           ; BSR set to: 14
  3195  000046  A3CA               	btfss	202,1,b	;volatile
  3196  000048  EF28  F000         	goto	i2u107_41
  3197  00004C  EF2A  F000         	goto	i2u107_40
  3198  000050                     i2u107_41:
  3199  000050  EF2E  F000         	goto	i2l449
  3200  000054                     i2u107_40:
  3201  000054                     
  3202                           ; BSR set to: 14
  3203                           ;mcc_generated_files/interrupt_manager.c: 69:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 70:         INT1_ISR();
  3204  000054  ECEA  F007         	call	_INT1_ISR	;wreg free
  3205                           
  3206                           ;mcc_generated_files/interrupt_manager.c: 71:     }
  3207  000058  EF4E  F000         	goto	i2l455
  3208  00005C                     i2l449:
  3209                           
  3210                           ; BSR set to: 14
  3211  00005C  A5C2               	btfss	194,2,b	;volatile
  3212  00005E  EF33  F000         	goto	i2u108_41
  3213  000062  EF35  F000         	goto	i2u108_40
  3214  000066                     i2u108_41:
  3215  000066  EF40  F000         	goto	i2l2713
  3216  00006A                     i2u108_40:
  3217  00006A                     
  3218                           ; BSR set to: 14
  3219  00006A  A5CA               	btfss	202,2,b	;volatile
  3220  00006C  EF3A  F000         	goto	i2u109_41
  3221  000070  EF3C  F000         	goto	i2u109_40
  3222  000074                     i2u109_41:
  3223  000074  EF40  F000         	goto	i2l2713
  3224  000078                     i2u109_40:
  3225  000078                     
  3226                           ; BSR set to: 14
  3227                           ;mcc_generated_files/interrupt_manager.c: 73:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 74:         INT2_ISR();
  3228  000078  ECE5  F007         	call	_INT2_ISR	;wreg free
  3229                           
  3230                           ;mcc_generated_files/interrupt_manager.c: 75:     }
  3231  00007C  EF4E  F000         	goto	i2l455
  3232  000080                     i2l2713:
  3233                           
  3234                           ; BSR set to: 14
  3235  000080  EC7E  F007         	call	_EUSART1_is_rx_ready	;wreg free
  3236  000084  0900               	iorlw	0
  3237  000086  B4D8               	btfsc	status,2,c
  3238  000088  EF48  F000         	goto	i2u110_41
  3239  00008C  EF4A  F000         	goto	i2u110_40
  3240  000090                     i2u110_41:
  3241  000090  EF4E  F000         	goto	i2l450
  3242  000094                     i2u110_40:
  3243  000094                     
  3244                           ;mcc_generated_files/interrupt_manager.c: 77:         readUART();
  3245  000094  EC56  F000         	call	_readUART	;wreg free
  3246                           
  3247                           ;mcc_generated_files/interrupt_manager.c: 78:     }
  3248  000098  EF4E  F000         	goto	i2l455
  3249  00009C                     i2l450:
  3250  00009C                     i2l455:
  3251  00009C  C01C  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3252  0000A0  C01B  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3253  0000A4  9234               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3254  0000A6  0011               	retfie		f
  3255  0000A8                     __end_of_INTERRUPT_InterruptManager:
  3256                           	callstack 0
  3257                           
  3258 ;; *************** function _readUART *****************
  3259 ;; Defined at:
  3260 ;;		line 47 in file "interrupt_additions/interrupt_additions.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;		None
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;		None
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  1    wreg      void 
  3267 ;; Registers used:
  3268 ;;		wreg, status,2, status,0, cstack
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3276 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3277 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3278 ;;Total ram usage:        2 bytes
  3279 ;; Hardware stack levels used: 1
  3280 ;; Hardware stack levels required when called: 2
  3281 ;; This function calls:
  3282 ;;		_EUSART1_Read
  3283 ;;		_stepperIsAsleep
  3284 ;;		i2_EUSART1_Write
  3285 ;;		i2_setAmnioticOn
  3286 ;;		i2_setAmnioticPumpPWM
  3287 ;;		i2_setBloodOn
  3288 ;;		i2_setBloodPumpPWM
  3289 ;; This function is called by:
  3290 ;;		_INTERRUPT_InterruptManager
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text40
  3295  0000AC                     __ptext40:
  3296                           	callstack 0
  3297  0000AC                     _readUART:
  3298                           	callstack 24
  3299  0000AC                     
  3300                           ;interrupt_additions/interrupt_additions.c: 50:     UART_RX_in = EUSART1_Read();
  3301  0000AC  EC84  F006         	call	_EUSART1_Read	;wreg free
  3302  0000B0  6E33               	movwf	_UART_RX_in^0,c	;volatile
  3303                           
  3304                           ;interrupt_additions/interrupt_additions.c: 51:     switch (UART_RX_in) {
  3305  0000B2  EFD1  F002         	goto	i2l2649
  3306  0000B6                     i2l136:
  3307  0000B6  8485               	bsf	133,2,c	;volatile
  3308  0000B8                     
  3309                           ;interrupt_additions/interrupt_additions.c: 58:             setAmnioticOn(0);
  3310  0000B8  0E00               	movlw	0
  3311  0000BA  ECDF  F007         	call	i2_setAmnioticOn
  3312                           
  3313                           ;interrupt_additions/interrupt_additions.c: 59:             setBloodOn(0);
  3314  0000BE  0E00               	movlw	0
  3315  0000C0  ECD9  F007         	call	i2_setBloodOn
  3316                           
  3317                           ;interrupt_additions/interrupt_additions.c: 60:             setBloodPumpPWM(50);
  3318  0000C4  0E00               	movlw	0
  3319  0000C6  6E18               	movwf	(i2setBloodPumpPWM@pwm+1)^0,c
  3320  0000C8  0E32               	movlw	50
  3321  0000CA  6E17               	movwf	i2setBloodPumpPWM@pwm^0,c
  3322  0000CC  EC5D  F007         	call	i2_setBloodPumpPWM	;wreg free
  3323                           
  3324                           ;interrupt_additions/interrupt_additions.c: 61:             setAmnioticPumpPWM(50);
  3325  0000D0  0E00               	movlw	0
  3326  0000D2  6E18               	movwf	(i2setAmnioticPumpPWM@pwm+1)^0,c
  3327  0000D4  0E32               	movlw	50
  3328  0000D6  6E17               	movwf	i2setAmnioticPumpPWM@pwm^0,c
  3329  0000D8  EC68  F007         	call	i2_setAmnioticPumpPWM	;wreg free
  3330  0000DC                     
  3331                           ;interrupt_additions/interrupt_additions.c: 63:             INTERRUPT_STEPPER_BREAK_FLAG
      +                           = 1;
  3332  0000DC  0E01               	movlw	1
  3333  0000DE  6E32               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  3334  0000E0                     
  3335                           ;interrupt_additions/interrupt_additions.c: 64:             interruptAction = NULL_ACTIO
      +                          N;
  3336  0000E0  0E00               	movlw	0
  3337  0000E2  6E31               	movwf	_interruptAction^0,c	;volatile
  3338  0000E4                     
  3339                           ;interrupt_additions/interrupt_additions.c: 65:             if(!stepperIsAsleep()){
  3340  0000E4  EC0E  F007         	call	_stepperIsAsleep	;wreg free
  3341  0000E8  0900               	iorlw	0
  3342  0000EA  A4D8               	btfss	status,2,c
  3343  0000EC  EF7A  F000         	goto	i2u81_41
  3344  0000F0  EF7C  F000         	goto	i2u81_40
  3345  0000F4                     i2u81_41:
  3346  0000F4  EF6A  F003         	goto	i2l207
  3347  0000F8                     i2u81_40:
  3348  0000F8                     
  3349                           ;interrupt_additions/interrupt_additions.c: 67:                 EUSART1_Write(0x0C);
  3350  0000F8  0E0C               	movlw	12
  3351  0000FA  EC1A  F007         	call	i2_EUSART1_Write
  3352  0000FE  EF6A  F003         	goto	i2l207
  3353  000102                     i2l141:
  3354  000102  8485               	bsf	133,2,c	;volatile
  3355  000104                     
  3356                           ;interrupt_additions/interrupt_additions.c: 75:             INTERRUPT_STEPPER_BREAK_FLAG
      +                           = 1;
  3357  000104  0E01               	movlw	1
  3358  000106  6E32               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  3359                           
  3360                           ;interrupt_additions/interrupt_additions.c: 76:             interruptAction = NULL_ACTIO
      +                          N;
  3361  000108  0E00               	movlw	0
  3362  00010A  6E31               	movwf	_interruptAction^0,c	;volatile
  3363  00010C                     
  3364                           ;interrupt_additions/interrupt_additions.c: 77:             if(!stepperIsAsleep()){
  3365  00010C  EC0E  F007         	call	_stepperIsAsleep	;wreg free
  3366  000110  0900               	iorlw	0
  3367  000112  A4D8               	btfss	status,2,c
  3368  000114  EF8E  F000         	goto	i2u82_41
  3369  000118  EF90  F000         	goto	i2u82_40
  3370  00011C                     i2u82_41:
  3371  00011C  EF6A  F003         	goto	i2l207
  3372  000120                     i2u82_40:
  3373  000120                     
  3374                           ;interrupt_additions/interrupt_additions.c: 79:                 EUSART1_Write(0x0C);
  3375  000120  0E0C               	movlw	12
  3376  000122  EC1A  F007         	call	i2_EUSART1_Write
  3377  000126  EF6A  F003         	goto	i2l207
  3378  00012A                     i2l2463:
  3379                           
  3380                           ;interrupt_additions/interrupt_additions.c: 85:             INTERRUPT_STEPPER_BREAK_FLAG
      +                           = 1;
  3381  00012A  0E01               	movlw	1
  3382  00012C  6E32               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  3383  00012E                     
  3384                           ;interrupt_additions/interrupt_additions.c: 87:             if (!PORTAbits.RA6) {
  3385  00012E  BC8D               	btfsc	141,6,c	;volatile
  3386  000130  EF9C  F000         	goto	i2u83_41
  3387  000134  EF9E  F000         	goto	i2u83_40
  3388  000138                     i2u83_41:
  3389  000138  EFA5  F000         	goto	i2l2471
  3390  00013C                     i2u83_40:
  3391  00013C                     
  3392                           ;interrupt_additions/interrupt_additions.c: 88:                 interruptAction = NULL_A
      +                          CTION;
  3393  00013C  0E00               	movlw	0
  3394  00013E  6E31               	movwf	_interruptAction^0,c	;volatile
  3395  000140                     
  3396                           ;interrupt_additions/interrupt_additions.c: 89:                 EUSART1_Write(0x0F);
  3397  000140  0E0F               	movlw	15
  3398  000142  EC1A  F007         	call	i2_EUSART1_Write
  3399                           
  3400                           ;interrupt_additions/interrupt_additions.c: 90:             } else {
  3401  000146  EF6A  F003         	goto	i2l207
  3402  00014A                     i2l2471:
  3403                           
  3404                           ;interrupt_additions/interrupt_additions.c: 91:                 interruptAction = STEPPE
      +                          R_FORWARD_UNTIL_STOP_FULL;
  3405  00014A  0E02               	movlw	2
  3406  00014C  6E31               	movwf	_interruptAction^0,c	;volatile
  3407  00014E                     
  3408                           ;interrupt_additions/interrupt_additions.c: 92:                 if(!stepperIsAsleep()){
  3409  00014E  EC0E  F007         	call	_stepperIsAsleep	;wreg free
  3410  000152  0900               	iorlw	0
  3411  000154  A4D8               	btfss	status,2,c
  3412  000156  EFAF  F000         	goto	i2u84_41
  3413  00015A  EFB1  F000         	goto	i2u84_40
  3414  00015E                     i2u84_41:
  3415  00015E  EF6A  F003         	goto	i2l207
  3416  000162                     i2u84_40:
  3417  000162                     
  3418                           ;interrupt_additions/interrupt_additions.c: 94:                     EUSART1_Write(0x0E);
  3419  000162  0E0E               	movlw	14
  3420  000164  EC1A  F007         	call	i2_EUSART1_Write
  3421  000168  EF6A  F003         	goto	i2l207
  3422  00016C                     i2l2477:
  3423                           
  3424                           ;interrupt_additions/interrupt_additions.c: 101:             INTERRUPT_STEPPER_BREAK_FLA
      +                          G = 1;
  3425  00016C  0E01               	movlw	1
  3426  00016E  6E32               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  3427  000170                     
  3428                           ;interrupt_additions/interrupt_additions.c: 103:             if (!PORTAbits.RA4) {
  3429  000170  B88D               	btfsc	141,4,c	;volatile
  3430  000172  EFBD  F000         	goto	i2u85_41
  3431  000176  EFBF  F000         	goto	i2u85_40
  3432  00017A                     i2u85_41:
  3433  00017A  EFC6  F000         	goto	i2l2485
  3434  00017E                     i2u85_40:
  3435  00017E                     
  3436                           ;interrupt_additions/interrupt_additions.c: 104:                 interruptAction = NULL_
      +                          ACTION;
  3437  00017E  0E00               	movlw	0
  3438  000180  6E31               	movwf	_interruptAction^0,c	;volatile
  3439  000182                     
  3440                           ;interrupt_additions/interrupt_additions.c: 105:                 EUSART1_Write(0x10);
  3441  000182  0E10               	movlw	16
  3442  000184  EC1A  F007         	call	i2_EUSART1_Write
  3443                           
  3444                           ;interrupt_additions/interrupt_additions.c: 106:             } else {
  3445  000188  EF6A  F003         	goto	i2l207
  3446  00018C                     i2l2485:
  3447                           
  3448                           ;interrupt_additions/interrupt_additions.c: 107:                 interruptAction = STEPP
      +                          ER_BACKWARD_UNTIL_STOP_FULL;
  3449  00018C  0E03               	movlw	3
  3450  00018E  6E31               	movwf	_interruptAction^0,c	;volatile
  3451  000190                     
  3452                           ;interrupt_additions/interrupt_additions.c: 108:                 if(!stepperIsAsleep()){
  3453  000190  EC0E  F007         	call	_stepperIsAsleep	;wreg free
  3454  000194  0900               	iorlw	0
  3455  000196  A4D8               	btfss	status,2,c
  3456  000198  EFD0  F000         	goto	i2u86_41
  3457  00019C  EFD2  F000         	goto	i2u86_40
  3458  0001A0                     i2u86_41:
  3459  0001A0  EF6A  F003         	goto	i2l207
  3460  0001A4                     i2u86_40:
  3461  0001A4                     
  3462                           ;interrupt_additions/interrupt_additions.c: 110:                     EUSART1_Write(0x0E)
      +                          ;
  3463  0001A4  0E0E               	movlw	14
  3464  0001A6  EC1A  F007         	call	i2_EUSART1_Write
  3465  0001AA  EF6A  F003         	goto	i2l207
  3466  0001AE                     i2l2491:
  3467                           
  3468                           ;interrupt_additions/interrupt_additions.c: 117:             INTERRUPT_STEPPER_BREAK_FLA
      +                          G = 1;
  3469  0001AE  0E01               	movlw	1
  3470  0001B0  6E32               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  3471  0001B2                     
  3472                           ;interrupt_additions/interrupt_additions.c: 119:             if (!PORTAbits.RA6) {
  3473  0001B2  BC8D               	btfsc	141,6,c	;volatile
  3474  0001B4  EFDE  F000         	goto	i2u87_41
  3475  0001B8  EFE0  F000         	goto	i2u87_40
  3476  0001BC                     i2u87_41:
  3477  0001BC  EFE7  F000         	goto	i2l2499
  3478  0001C0                     i2u87_40:
  3479  0001C0                     
  3480                           ;interrupt_additions/interrupt_additions.c: 120:                 interruptAction = NULL_
      +                          ACTION;
  3481  0001C0  0E00               	movlw	0
  3482  0001C2  6E31               	movwf	_interruptAction^0,c	;volatile
  3483  0001C4                     
  3484                           ;interrupt_additions/interrupt_additions.c: 121:                 EUSART1_Write(0x0F);
  3485  0001C4  0E0F               	movlw	15
  3486  0001C6  EC1A  F007         	call	i2_EUSART1_Write
  3487                           
  3488                           ;interrupt_additions/interrupt_additions.c: 122:             } else {
  3489  0001CA  EF6A  F003         	goto	i2l207
  3490  0001CE                     i2l2499:
  3491                           
  3492                           ;interrupt_additions/interrupt_additions.c: 123:                 interruptAction = STEPP
      +                          ER_FORWARD_UNTIL_STOP_HALF;
  3493  0001CE  0E04               	movlw	4
  3494  0001D0  6E31               	movwf	_interruptAction^0,c	;volatile
  3495  0001D2                     
  3496                           ;interrupt_additions/interrupt_additions.c: 124:                 if(!stepperIsAsleep()){
  3497  0001D2  EC0E  F007         	call	_stepperIsAsleep	;wreg free
  3498  0001D6  0900               	iorlw	0
  3499  0001D8  A4D8               	btfss	status,2,c
  3500  0001DA  EFF1  F000         	goto	i2u88_41
  3501  0001DE  EFF3  F000         	goto	i2u88_40
  3502  0001E2                     i2u88_41:
  3503  0001E2  EF6A  F003         	goto	i2l207
  3504  0001E6                     i2u88_40:
  3505  0001E6                     
  3506                           ;interrupt_additions/interrupt_additions.c: 126:                     EUSART1_Write(0x0E)
      +                          ;
  3507  0001E6  0E0E               	movlw	14
  3508  0001E8  EC1A  F007         	call	i2_EUSART1_Write
  3509  0001EC  EF6A  F003         	goto	i2l207
  3510  0001F0                     i2l2505:
  3511                           
  3512                           ;interrupt_additions/interrupt_additions.c: 133:             INTERRUPT_STEPPER_BREAK_FLA
      +                          G = 1;
  3513  0001F0  0E01               	movlw	1
  3514  0001F2  6E32               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  3515  0001F4                     
  3516                           ;interrupt_additions/interrupt_additions.c: 135:             if (!PORTAbits.RA4) {
  3517  0001F4  B88D               	btfsc	141,4,c	;volatile
  3518  0001F6  EFFF  F000         	goto	i2u89_41
  3519  0001FA  EF01  F001         	goto	i2u89_40
  3520  0001FE                     i2u89_41:
  3521  0001FE  EF08  F001         	goto	i2l2513
  3522  000202                     i2u89_40:
  3523  000202                     
  3524                           ;interrupt_additions/interrupt_additions.c: 136:                 interruptAction = NULL_
      +                          ACTION;
  3525  000202  0E00               	movlw	0
  3526  000204  6E31               	movwf	_interruptAction^0,c	;volatile
  3527  000206                     
  3528                           ;interrupt_additions/interrupt_additions.c: 137:                 EUSART1_Write(0x10);
  3529  000206  0E10               	movlw	16
  3530  000208  EC1A  F007         	call	i2_EUSART1_Write
  3531                           
  3532                           ;interrupt_additions/interrupt_additions.c: 138:             } else {
  3533  00020C  EF6A  F003         	goto	i2l207
  3534  000210                     i2l2513:
  3535                           
  3536                           ;interrupt_additions/interrupt_additions.c: 139:                 interruptAction = STEPP
      +                          ER_BACKWARD_UNTIL_STOP_HALF;
  3537  000210  0E05               	movlw	5
  3538  000212  6E31               	movwf	_interruptAction^0,c	;volatile
  3539  000214                     
  3540                           ;interrupt_additions/interrupt_additions.c: 140:                 if(!stepperIsAsleep()){
  3541  000214  EC0E  F007         	call	_stepperIsAsleep	;wreg free
  3542  000218  0900               	iorlw	0
  3543  00021A  A4D8               	btfss	status,2,c
  3544  00021C  EF12  F001         	goto	i2u90_41
  3545  000220  EF14  F001         	goto	i2u90_40
  3546  000224                     i2u90_41:
  3547  000224  EF6A  F003         	goto	i2l207
  3548  000228                     i2u90_40:
  3549  000228                     
  3550                           ;interrupt_additions/interrupt_additions.c: 142:                     EUSART1_Write(0x0E)
      +                          ;
  3551  000228  0E0E               	movlw	14
  3552  00022A  EC1A  F007         	call	i2_EUSART1_Write
  3553  00022E  EF6A  F003         	goto	i2l207
  3554  000232                     i2l2519:
  3555                           
  3556                           ;interrupt_additions/interrupt_additions.c: 149:             INTERRUPT_STEPPER_BREAK_FLA
      +                          G = 1;
  3557  000232  0E01               	movlw	1
  3558  000234  6E32               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  3559  000236                     
  3560                           ;interrupt_additions/interrupt_additions.c: 151:             if (!PORTAbits.RA6) {
  3561  000236  BC8D               	btfsc	141,6,c	;volatile
  3562  000238  EF20  F001         	goto	i2u91_41
  3563  00023C  EF22  F001         	goto	i2u91_40
  3564  000240                     i2u91_41:
  3565  000240  EF29  F001         	goto	i2l2527
  3566  000244                     i2u91_40:
  3567  000244                     
  3568                           ;interrupt_additions/interrupt_additions.c: 152:                 interruptAction = NULL_
      +                          ACTION;
  3569  000244  0E00               	movlw	0
  3570  000246  6E31               	movwf	_interruptAction^0,c	;volatile
  3571  000248                     
  3572                           ;interrupt_additions/interrupt_additions.c: 153:                 EUSART1_Write(0x0F);
  3573  000248  0E0F               	movlw	15
  3574  00024A  EC1A  F007         	call	i2_EUSART1_Write
  3575                           
  3576                           ;interrupt_additions/interrupt_additions.c: 154:             } else {
  3577  00024E  EF6A  F003         	goto	i2l207
  3578  000252                     i2l2527:
  3579                           
  3580                           ;interrupt_additions/interrupt_additions.c: 155:                 interruptAction = STEPP
      +                          ER_FORWARD_UNTIL_STOP_QUARTER;
  3581  000252  0E06               	movlw	6
  3582  000254  6E31               	movwf	_interruptAction^0,c	;volatile
  3583  000256                     
  3584                           ;interrupt_additions/interrupt_additions.c: 156:                 if(!stepperIsAsleep()){
  3585  000256  EC0E  F007         	call	_stepperIsAsleep	;wreg free
  3586  00025A  0900               	iorlw	0
  3587  00025C  A4D8               	btfss	status,2,c
  3588  00025E  EF33  F001         	goto	i2u92_41
  3589  000262  EF35  F001         	goto	i2u92_40
  3590  000266                     i2u92_41:
  3591  000266  EF6A  F003         	goto	i2l207
  3592  00026A                     i2u92_40:
  3593  00026A                     
  3594                           ;interrupt_additions/interrupt_additions.c: 158:                     EUSART1_Write(0x0E)
      +                          ;
  3595  00026A  0E0E               	movlw	14
  3596  00026C  EC1A  F007         	call	i2_EUSART1_Write
  3597  000270  EF6A  F003         	goto	i2l207
  3598  000274                     i2l2533:
  3599                           
  3600                           ;interrupt_additions/interrupt_additions.c: 165:             INTERRUPT_STEPPER_BREAK_FLA
      +                          G = 1;
  3601  000274  0E01               	movlw	1
  3602  000276  6E32               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  3603  000278                     
  3604                           ;interrupt_additions/interrupt_additions.c: 167:             if (!PORTAbits.RA4) {
  3605  000278  B88D               	btfsc	141,4,c	;volatile
  3606  00027A  EF41  F001         	goto	i2u93_41
  3607  00027E  EF43  F001         	goto	i2u93_40
  3608  000282                     i2u93_41:
  3609  000282  EF4A  F001         	goto	i2l2541
  3610  000286                     i2u93_40:
  3611  000286                     
  3612                           ;interrupt_additions/interrupt_additions.c: 168:                 interruptAction = NULL_
      +                          ACTION;
  3613  000286  0E00               	movlw	0
  3614  000288  6E31               	movwf	_interruptAction^0,c	;volatile
  3615  00028A                     
  3616                           ;interrupt_additions/interrupt_additions.c: 169:                 EUSART1_Write(0x10);
  3617  00028A  0E10               	movlw	16
  3618  00028C  EC1A  F007         	call	i2_EUSART1_Write
  3619                           
  3620                           ;interrupt_additions/interrupt_additions.c: 170:             } else {
  3621  000290  EF6A  F003         	goto	i2l207
  3622  000294                     i2l2541:
  3623                           
  3624                           ;interrupt_additions/interrupt_additions.c: 171:                 interruptAction = STEPP
      +                          ER_BACKWARD_UNTIL_STOP_QUARTER;
  3625  000294  0E07               	movlw	7
  3626  000296  6E31               	movwf	_interruptAction^0,c	;volatile
  3627  000298                     
  3628                           ;interrupt_additions/interrupt_additions.c: 172:                 if(!stepperIsAsleep()){
  3629  000298  EC0E  F007         	call	_stepperIsAsleep	;wreg free
  3630  00029C  0900               	iorlw	0
  3631  00029E  A4D8               	btfss	status,2,c
  3632  0002A0  EF54  F001         	goto	i2u94_41
  3633  0002A4  EF56  F001         	goto	i2u94_40
  3634  0002A8                     i2u94_41:
  3635  0002A8  EF6A  F003         	goto	i2l207
  3636  0002AC                     i2u94_40:
  3637  0002AC                     
  3638                           ;interrupt_additions/interrupt_additions.c: 174:                     EUSART1_Write(0x0E)
      +                          ;
  3639  0002AC  0E0E               	movlw	14
  3640  0002AE  EC1A  F007         	call	i2_EUSART1_Write
  3641  0002B2  EF6A  F003         	goto	i2l207
  3642  0002B6                     i2l2547:
  3643                           
  3644                           ;interrupt_additions/interrupt_additions.c: 181:             INTERRUPT_STEPPER_BREAK_FLA
      +                          G = 1;
  3645  0002B6  0E01               	movlw	1
  3646  0002B8  6E32               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  3647  0002BA                     
  3648                           ;interrupt_additions/interrupt_additions.c: 183:             if (!PORTAbits.RA6) {
  3649  0002BA  BC8D               	btfsc	141,6,c	;volatile
  3650  0002BC  EF62  F001         	goto	i2u95_41
  3651  0002C0  EF64  F001         	goto	i2u95_40
  3652  0002C4                     i2u95_41:
  3653  0002C4  EF6B  F001         	goto	i2l2555
  3654  0002C8                     i2u95_40:
  3655  0002C8                     
  3656                           ;interrupt_additions/interrupt_additions.c: 184:                 interruptAction = NULL_
      +                          ACTION;
  3657  0002C8  0E00               	movlw	0
  3658  0002CA  6E31               	movwf	_interruptAction^0,c	;volatile
  3659  0002CC                     
  3660                           ;interrupt_additions/interrupt_additions.c: 185:                 EUSART1_Write(0x0F);
  3661  0002CC  0E0F               	movlw	15
  3662  0002CE  EC1A  F007         	call	i2_EUSART1_Write
  3663                           
  3664                           ;interrupt_additions/interrupt_additions.c: 186:             } else {
  3665  0002D2  EF6A  F003         	goto	i2l207
  3666  0002D6                     i2l2555:
  3667                           
  3668                           ;interrupt_additions/interrupt_additions.c: 187:                 interruptAction = STEPP
      +                          ER_FORWARD_UNTIL_STOP_EIGHTH;
  3669  0002D6  0E08               	movlw	8
  3670  0002D8  6E31               	movwf	_interruptAction^0,c	;volatile
  3671  0002DA                     
  3672                           ;interrupt_additions/interrupt_additions.c: 188:                 if(!stepperIsAsleep()){
  3673  0002DA  EC0E  F007         	call	_stepperIsAsleep	;wreg free
  3674  0002DE  0900               	iorlw	0
  3675  0002E0  A4D8               	btfss	status,2,c
  3676  0002E2  EF75  F001         	goto	i2u96_41
  3677  0002E6  EF77  F001         	goto	i2u96_40
  3678  0002EA                     i2u96_41:
  3679  0002EA  EF6A  F003         	goto	i2l207
  3680  0002EE                     i2u96_40:
  3681  0002EE                     
  3682                           ;interrupt_additions/interrupt_additions.c: 190:                     EUSART1_Write(0x0E)
      +                          ;
  3683  0002EE  0E0E               	movlw	14
  3684  0002F0  EC1A  F007         	call	i2_EUSART1_Write
  3685  0002F4  EF6A  F003         	goto	i2l207
  3686  0002F8                     i2l2561:
  3687                           
  3688                           ;interrupt_additions/interrupt_additions.c: 197:             INTERRUPT_STEPPER_BREAK_FLA
      +                          G = 1;
  3689  0002F8  0E01               	movlw	1
  3690  0002FA  6E32               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  3691  0002FC                     
  3692                           ;interrupt_additions/interrupt_additions.c: 199:             if (!PORTAbits.RA4) {
  3693  0002FC  B88D               	btfsc	141,4,c	;volatile
  3694  0002FE  EF83  F001         	goto	i2u97_41
  3695  000302  EF85  F001         	goto	i2u97_40
  3696  000306                     i2u97_41:
  3697  000306  EF8C  F001         	goto	i2l2569
  3698  00030A                     i2u97_40:
  3699  00030A                     
  3700                           ;interrupt_additions/interrupt_additions.c: 200:                 interruptAction = NULL_
      +                          ACTION;
  3701  00030A  0E00               	movlw	0
  3702  00030C  6E31               	movwf	_interruptAction^0,c	;volatile
  3703  00030E                     
  3704                           ;interrupt_additions/interrupt_additions.c: 201:                 EUSART1_Write(0x10);
  3705  00030E  0E10               	movlw	16
  3706  000310  EC1A  F007         	call	i2_EUSART1_Write
  3707                           
  3708                           ;interrupt_additions/interrupt_additions.c: 202:             } else {
  3709  000314  EF6A  F003         	goto	i2l207
  3710  000318                     i2l2569:
  3711                           
  3712                           ;interrupt_additions/interrupt_additions.c: 203:                 interruptAction = STEPP
      +                          ER_BACKWARD_UNTIL_STOP_EIGHTH;
  3713  000318  0E09               	movlw	9
  3714  00031A  6E31               	movwf	_interruptAction^0,c	;volatile
  3715  00031C                     
  3716                           ;interrupt_additions/interrupt_additions.c: 204:                 if(!stepperIsAsleep()){
  3717  00031C  EC0E  F007         	call	_stepperIsAsleep	;wreg free
  3718  000320  0900               	iorlw	0
  3719  000322  A4D8               	btfss	status,2,c
  3720  000324  EF96  F001         	goto	i2u98_41
  3721  000328  EF98  F001         	goto	i2u98_40
  3722  00032C                     i2u98_41:
  3723  00032C  EF6A  F003         	goto	i2l207
  3724  000330                     i2u98_40:
  3725  000330                     
  3726                           ;interrupt_additions/interrupt_additions.c: 206:                     EUSART1_Write(0x0E)
      +                          ;
  3727  000330  0E0E               	movlw	14
  3728  000332  EC1A  F007         	call	i2_EUSART1_Write
  3729  000336  EF6A  F003         	goto	i2l207
  3730  00033A                     i2l2575:
  3731                           
  3732                           ;interrupt_additions/interrupt_additions.c: 213:             INTERRUPT_STEPPER_BREAK_FLA
      +                          G = 1;
  3733  00033A  0E01               	movlw	1
  3734  00033C  6E32               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  3735  00033E                     
  3736                           ;interrupt_additions/interrupt_additions.c: 215:             if (!PORTAbits.RA6) {
  3737  00033E  BC8D               	btfsc	141,6,c	;volatile
  3738  000340  EFA4  F001         	goto	i2u99_41
  3739  000344  EFA6  F001         	goto	i2u99_40
  3740  000348                     i2u99_41:
  3741  000348  EFAD  F001         	goto	i2l2583
  3742  00034C                     i2u99_40:
  3743  00034C                     
  3744                           ;interrupt_additions/interrupt_additions.c: 216:                 interruptAction = NULL_
      +                          ACTION;
  3745  00034C  0E00               	movlw	0
  3746  00034E  6E31               	movwf	_interruptAction^0,c	;volatile
  3747  000350                     
  3748                           ;interrupt_additions/interrupt_additions.c: 217:                 EUSART1_Write(0x0F);
  3749  000350  0E0F               	movlw	15
  3750  000352  EC1A  F007         	call	i2_EUSART1_Write
  3751                           
  3752                           ;interrupt_additions/interrupt_additions.c: 218:             } else {
  3753  000356  EF6A  F003         	goto	i2l207
  3754  00035A                     i2l2583:
  3755                           
  3756                           ;interrupt_additions/interrupt_additions.c: 219:                 interruptAction = STEPP
      +                          ER_FORWARD_UNTIL_STOP_SIXTEENTH;
  3757  00035A  0E0A               	movlw	10
  3758  00035C  6E31               	movwf	_interruptAction^0,c	;volatile
  3759  00035E                     
  3760                           ;interrupt_additions/interrupt_additions.c: 220:                 if(!stepperIsAsleep()){
  3761  00035E  EC0E  F007         	call	_stepperIsAsleep	;wreg free
  3762  000362  0900               	iorlw	0
  3763  000364  A4D8               	btfss	status,2,c
  3764  000366  EFB7  F001         	goto	i2u100_41
  3765  00036A  EFB9  F001         	goto	i2u100_40
  3766  00036E                     i2u100_41:
  3767  00036E  EF6A  F003         	goto	i2l207
  3768  000372                     i2u100_40:
  3769  000372                     
  3770                           ;interrupt_additions/interrupt_additions.c: 222:                     EUSART1_Write(0x0E)
      +                          ;
  3771  000372  0E0E               	movlw	14
  3772  000374  EC1A  F007         	call	i2_EUSART1_Write
  3773  000378  EF6A  F003         	goto	i2l207
  3774  00037C                     i2l2589:
  3775                           
  3776                           ;interrupt_additions/interrupt_additions.c: 229:             INTERRUPT_STEPPER_BREAK_FLA
      +                          G = 1;
  3777  00037C  0E01               	movlw	1
  3778  00037E  6E32               	movwf	_INTERRUPT_STEPPER_BREAK_FLAG^0,c	;volatile
  3779  000380                     
  3780                           ;interrupt_additions/interrupt_additions.c: 231:             if (!PORTAbits.RA4) {
  3781  000380  B88D               	btfsc	141,4,c	;volatile
  3782  000382  EFC5  F001         	goto	i2u101_41
  3783  000386  EFC7  F001         	goto	i2u101_40
  3784  00038A                     i2u101_41:
  3785  00038A  EFCE  F001         	goto	i2l2597
  3786  00038E                     i2u101_40:
  3787  00038E                     
  3788                           ;interrupt_additions/interrupt_additions.c: 232:                 interruptAction = NULL_
      +                          ACTION;
  3789  00038E  0E00               	movlw	0
  3790  000390  6E31               	movwf	_interruptAction^0,c	;volatile
  3791  000392                     
  3792                           ;interrupt_additions/interrupt_additions.c: 233:                 EUSART1_Write(0x10);
  3793  000392  0E10               	movlw	16
  3794  000394  EC1A  F007         	call	i2_EUSART1_Write
  3795                           
  3796                           ;interrupt_additions/interrupt_additions.c: 234:             } else {
  3797  000398  EF6A  F003         	goto	i2l207
  3798  00039C                     i2l2597:
  3799                           
  3800                           ;interrupt_additions/interrupt_additions.c: 235:                 interruptAction = STEPP
      +                          ER_BACKWARD_UNTIL_STOP_SIXTEENTH;
  3801  00039C  0E0B               	movlw	11
  3802  00039E  6E31               	movwf	_interruptAction^0,c	;volatile
  3803  0003A0                     
  3804                           ;interrupt_additions/interrupt_additions.c: 236:                 if(!stepperIsAsleep()){
  3805  0003A0  EC0E  F007         	call	_stepperIsAsleep	;wreg free
  3806  0003A4  0900               	iorlw	0
  3807  0003A6  A4D8               	btfss	status,2,c
  3808  0003A8  EFD8  F001         	goto	i2u102_41
  3809  0003AC  EFDA  F001         	goto	i2u102_40
  3810  0003B0                     i2u102_41:
  3811  0003B0  EF6A  F003         	goto	i2l207
  3812  0003B4                     i2u102_40:
  3813  0003B4                     
  3814                           ;interrupt_additions/interrupt_additions.c: 238:                     EUSART1_Write(0x0E)
      +                          ;
  3815  0003B4  0E0E               	movlw	14
  3816  0003B6  EC1A  F007         	call	i2_EUSART1_Write
  3817  0003BA  EF6A  F003         	goto	i2l207
  3818  0003BE                     i2l2603:
  3819                           
  3820                           ;interrupt_additions/interrupt_additions.c: 244:             setBloodOn(0);
  3821  0003BE  0E00               	movlw	0
  3822  0003C0  ECD9  F007         	call	i2_setBloodOn
  3823                           
  3824                           ;interrupt_additions/interrupt_additions.c: 245:             setBloodPumpPWM(50);
  3825  0003C4  0E00               	movlw	0
  3826  0003C6  6E18               	movwf	(i2setBloodPumpPWM@pwm+1)^0,c
  3827  0003C8  0E32               	movlw	50
  3828  0003CA  6E17               	movwf	i2setBloodPumpPWM@pwm^0,c
  3829  0003CC  EC5D  F007         	call	i2_setBloodPumpPWM	;wreg free
  3830                           
  3831                           ;interrupt_additions/interrupt_additions.c: 246:             break;
  3832  0003D0  EF6A  F003         	goto	i2l207
  3833  0003D4                     i2l2605:
  3834                           
  3835                           ;interrupt_additions/interrupt_additions.c: 248:             setBloodOn(1);
  3836  0003D4  0E01               	movlw	1
  3837  0003D6  ECD9  F007         	call	i2_setBloodOn
  3838                           
  3839                           ;interrupt_additions/interrupt_additions.c: 249:             setBloodPumpPWM(25);
  3840  0003DA  0E00               	movlw	0
  3841  0003DC  6E18               	movwf	(i2setBloodPumpPWM@pwm+1)^0,c
  3842  0003DE  0E19               	movlw	25
  3843  0003E0  6E17               	movwf	i2setBloodPumpPWM@pwm^0,c
  3844  0003E2  EC5D  F007         	call	i2_setBloodPumpPWM	;wreg free
  3845                           
  3846                           ;interrupt_additions/interrupt_additions.c: 250:             break;
  3847  0003E6  EF6A  F003         	goto	i2l207
  3848  0003EA                     i2l2607:
  3849                           
  3850                           ;interrupt_additions/interrupt_additions.c: 252:             setBloodOn(1);
  3851  0003EA  0E01               	movlw	1
  3852  0003EC  ECD9  F007         	call	i2_setBloodOn
  3853                           
  3854                           ;interrupt_additions/interrupt_additions.c: 253:             setBloodPumpPWM(23);
  3855  0003F0  0E00               	movlw	0
  3856  0003F2  6E18               	movwf	(i2setBloodPumpPWM@pwm+1)^0,c
  3857  0003F4  0E17               	movlw	23
  3858  0003F6  6E17               	movwf	i2setBloodPumpPWM@pwm^0,c
  3859  0003F8  EC5D  F007         	call	i2_setBloodPumpPWM	;wreg free
  3860                           
  3861                           ;interrupt_additions/interrupt_additions.c: 254:             break;
  3862  0003FC  EF6A  F003         	goto	i2l207
  3863  000400                     i2l2609:
  3864                           
  3865                           ;interrupt_additions/interrupt_additions.c: 256:             setBloodOn(1);
  3866  000400  0E01               	movlw	1
  3867  000402  ECD9  F007         	call	i2_setBloodOn
  3868                           
  3869                           ;interrupt_additions/interrupt_additions.c: 257:             setBloodPumpPWM(20);
  3870  000406  0E00               	movlw	0
  3871  000408  6E18               	movwf	(i2setBloodPumpPWM@pwm+1)^0,c
  3872  00040A  0E14               	movlw	20
  3873  00040C  6E17               	movwf	i2setBloodPumpPWM@pwm^0,c
  3874  00040E  EC5D  F007         	call	i2_setBloodPumpPWM	;wreg free
  3875                           
  3876                           ;interrupt_additions/interrupt_additions.c: 258:             break;
  3877  000412  EF6A  F003         	goto	i2l207
  3878  000416                     i2l2611:
  3879                           
  3880                           ;interrupt_additions/interrupt_additions.c: 260:             setBloodOn(1);
  3881  000416  0E01               	movlw	1
  3882  000418  ECD9  F007         	call	i2_setBloodOn
  3883                           
  3884                           ;interrupt_additions/interrupt_additions.c: 261:             setBloodPumpPWM(17);
  3885  00041C  0E00               	movlw	0
  3886  00041E  6E18               	movwf	(i2setBloodPumpPWM@pwm+1)^0,c
  3887  000420  0E11               	movlw	17
  3888  000422  6E17               	movwf	i2setBloodPumpPWM@pwm^0,c
  3889  000424  EC5D  F007         	call	i2_setBloodPumpPWM	;wreg free
  3890                           
  3891                           ;interrupt_additions/interrupt_additions.c: 262:             break;
  3892  000428  EF6A  F003         	goto	i2l207
  3893  00042C                     i2l2613:
  3894                           
  3895                           ;interrupt_additions/interrupt_additions.c: 264:             setBloodOn(1);
  3896  00042C  0E01               	movlw	1
  3897  00042E  ECD9  F007         	call	i2_setBloodOn
  3898                           
  3899                           ;interrupt_additions/interrupt_additions.c: 265:             setBloodPumpPWM(14);
  3900  000432  0E00               	movlw	0
  3901  000434  6E18               	movwf	(i2setBloodPumpPWM@pwm+1)^0,c
  3902  000436  0E0E               	movlw	14
  3903  000438  6E17               	movwf	i2setBloodPumpPWM@pwm^0,c
  3904  00043A  EC5D  F007         	call	i2_setBloodPumpPWM	;wreg free
  3905                           
  3906                           ;interrupt_additions/interrupt_additions.c: 266:             break;
  3907  00043E  EF6A  F003         	goto	i2l207
  3908  000442                     i2l2615:
  3909                           
  3910                           ;interrupt_additions/interrupt_additions.c: 268:             setBloodOn(1);
  3911  000442  0E01               	movlw	1
  3912  000444  ECD9  F007         	call	i2_setBloodOn
  3913                           
  3914                           ;interrupt_additions/interrupt_additions.c: 269:             setBloodPumpPWM(12);
  3915  000448  0E00               	movlw	0
  3916  00044A  6E18               	movwf	(i2setBloodPumpPWM@pwm+1)^0,c
  3917  00044C  0E0C               	movlw	12
  3918  00044E  6E17               	movwf	i2setBloodPumpPWM@pwm^0,c
  3919  000450  EC5D  F007         	call	i2_setBloodPumpPWM	;wreg free
  3920                           
  3921                           ;interrupt_additions/interrupt_additions.c: 270:             break;
  3922  000454  EF6A  F003         	goto	i2l207
  3923  000458                     i2l2617:
  3924                           
  3925                           ;interrupt_additions/interrupt_additions.c: 272:             setBloodOn(1);
  3926  000458  0E01               	movlw	1
  3927  00045A  ECD9  F007         	call	i2_setBloodOn
  3928                           
  3929                           ;interrupt_additions/interrupt_additions.c: 273:             setBloodPumpPWM(9);
  3930  00045E  0E00               	movlw	0
  3931  000460  6E18               	movwf	(i2setBloodPumpPWM@pwm+1)^0,c
  3932  000462  0E09               	movlw	9
  3933  000464  6E17               	movwf	i2setBloodPumpPWM@pwm^0,c
  3934  000466  EC5D  F007         	call	i2_setBloodPumpPWM	;wreg free
  3935                           
  3936                           ;interrupt_additions/interrupt_additions.c: 274:             break;
  3937  00046A  EF6A  F003         	goto	i2l207
  3938  00046E                     i2l2619:
  3939                           
  3940                           ;interrupt_additions/interrupt_additions.c: 276:             setBloodOn(1);
  3941  00046E  0E01               	movlw	1
  3942  000470  ECD9  F007         	call	i2_setBloodOn
  3943                           
  3944                           ;interrupt_additions/interrupt_additions.c: 277:             setBloodPumpPWM(6);
  3945  000474  0E00               	movlw	0
  3946  000476  6E18               	movwf	(i2setBloodPumpPWM@pwm+1)^0,c
  3947  000478  0E06               	movlw	6
  3948  00047A  6E17               	movwf	i2setBloodPumpPWM@pwm^0,c
  3949  00047C  EC5D  F007         	call	i2_setBloodPumpPWM	;wreg free
  3950                           
  3951                           ;interrupt_additions/interrupt_additions.c: 278:             break;
  3952  000480  EF6A  F003         	goto	i2l207
  3953  000484                     i2l2621:
  3954                           
  3955                           ;interrupt_additions/interrupt_additions.c: 280:             setBloodOn(1);
  3956  000484  0E01               	movlw	1
  3957  000486  ECD9  F007         	call	i2_setBloodOn
  3958                           
  3959                           ;interrupt_additions/interrupt_additions.c: 281:             setBloodPumpPWM(3);
  3960  00048A  0E00               	movlw	0
  3961  00048C  6E18               	movwf	(i2setBloodPumpPWM@pwm+1)^0,c
  3962  00048E  0E03               	movlw	3
  3963  000490  6E17               	movwf	i2setBloodPumpPWM@pwm^0,c
  3964  000492  EC5D  F007         	call	i2_setBloodPumpPWM	;wreg free
  3965                           
  3966                           ;interrupt_additions/interrupt_additions.c: 282:             break;
  3967  000496  EF6A  F003         	goto	i2l207
  3968  00049A                     i2l2623:
  3969                           
  3970                           ;interrupt_additions/interrupt_additions.c: 284:             setBloodOn(1);
  3971  00049A  0E01               	movlw	1
  3972  00049C  ECD9  F007         	call	i2_setBloodOn
  3973                           
  3974                           ;interrupt_additions/interrupt_additions.c: 285:             setBloodPumpPWM(0);
  3975  0004A0  0E00               	movlw	0
  3976  0004A2  6E18               	movwf	(i2setBloodPumpPWM@pwm+1)^0,c
  3977  0004A4  0E00               	movlw	0
  3978  0004A6  6E17               	movwf	i2setBloodPumpPWM@pwm^0,c
  3979  0004A8  EC5D  F007         	call	i2_setBloodPumpPWM	;wreg free
  3980                           
  3981                           ;interrupt_additions/interrupt_additions.c: 286:             break;
  3982  0004AC  EF6A  F003         	goto	i2l207
  3983  0004B0                     i2l2625:
  3984                           
  3985                           ;interrupt_additions/interrupt_additions.c: 288:             setAmnioticOn(0);
  3986  0004B0  0E00               	movlw	0
  3987  0004B2  ECDF  F007         	call	i2_setAmnioticOn
  3988                           
  3989                           ;interrupt_additions/interrupt_additions.c: 289:             setAmnioticPumpPWM(50);
  3990  0004B6  0E00               	movlw	0
  3991  0004B8  6E18               	movwf	(i2setAmnioticPumpPWM@pwm+1)^0,c
  3992  0004BA  0E32               	movlw	50
  3993  0004BC  6E17               	movwf	i2setAmnioticPumpPWM@pwm^0,c
  3994  0004BE  EC68  F007         	call	i2_setAmnioticPumpPWM	;wreg free
  3995                           
  3996                           ;interrupt_additions/interrupt_additions.c: 290:             break;
  3997  0004C2  EF6A  F003         	goto	i2l207
  3998  0004C6                     i2l2627:
  3999                           
  4000                           ;interrupt_additions/interrupt_additions.c: 292:             setAmnioticOn(1);
  4001  0004C6  0E01               	movlw	1
  4002  0004C8  ECDF  F007         	call	i2_setAmnioticOn
  4003                           
  4004                           ;interrupt_additions/interrupt_additions.c: 293:             setAmnioticPumpPWM(25);
  4005  0004CC  0E00               	movlw	0
  4006  0004CE  6E18               	movwf	(i2setAmnioticPumpPWM@pwm+1)^0,c
  4007  0004D0  0E19               	movlw	25
  4008  0004D2  6E17               	movwf	i2setAmnioticPumpPWM@pwm^0,c
  4009  0004D4  EC68  F007         	call	i2_setAmnioticPumpPWM	;wreg free
  4010                           
  4011                           ;interrupt_additions/interrupt_additions.c: 294:             break;
  4012  0004D8  EF6A  F003         	goto	i2l207
  4013  0004DC                     i2l2629:
  4014                           
  4015                           ;interrupt_additions/interrupt_additions.c: 296:             setAmnioticOn(1);
  4016  0004DC  0E01               	movlw	1
  4017  0004DE  ECDF  F007         	call	i2_setAmnioticOn
  4018                           
  4019                           ;interrupt_additions/interrupt_additions.c: 297:             setAmnioticPumpPWM(23);
  4020  0004E2  0E00               	movlw	0
  4021  0004E4  6E18               	movwf	(i2setAmnioticPumpPWM@pwm+1)^0,c
  4022  0004E6  0E17               	movlw	23
  4023  0004E8  6E17               	movwf	i2setAmnioticPumpPWM@pwm^0,c
  4024  0004EA  EC68  F007         	call	i2_setAmnioticPumpPWM	;wreg free
  4025                           
  4026                           ;interrupt_additions/interrupt_additions.c: 298:             break;
  4027  0004EE  EF6A  F003         	goto	i2l207
  4028  0004F2                     i2l2631:
  4029                           
  4030                           ;interrupt_additions/interrupt_additions.c: 300:             setAmnioticOn(1);
  4031  0004F2  0E01               	movlw	1
  4032  0004F4  ECDF  F007         	call	i2_setAmnioticOn
  4033                           
  4034                           ;interrupt_additions/interrupt_additions.c: 301:             setAmnioticPumpPWM(20);
  4035  0004F8  0E00               	movlw	0
  4036  0004FA  6E18               	movwf	(i2setAmnioticPumpPWM@pwm+1)^0,c
  4037  0004FC  0E14               	movlw	20
  4038  0004FE  6E17               	movwf	i2setAmnioticPumpPWM@pwm^0,c
  4039  000500  EC68  F007         	call	i2_setAmnioticPumpPWM	;wreg free
  4040                           
  4041                           ;interrupt_additions/interrupt_additions.c: 302:             break;
  4042  000504  EF6A  F003         	goto	i2l207
  4043  000508                     i2l2633:
  4044                           
  4045                           ;interrupt_additions/interrupt_additions.c: 304:             setAmnioticOn(1);
  4046  000508  0E01               	movlw	1
  4047  00050A  ECDF  F007         	call	i2_setAmnioticOn
  4048                           
  4049                           ;interrupt_additions/interrupt_additions.c: 305:             setAmnioticPumpPWM(17);
  4050  00050E  0E00               	movlw	0
  4051  000510  6E18               	movwf	(i2setAmnioticPumpPWM@pwm+1)^0,c
  4052  000512  0E11               	movlw	17
  4053  000514  6E17               	movwf	i2setAmnioticPumpPWM@pwm^0,c
  4054  000516  EC68  F007         	call	i2_setAmnioticPumpPWM	;wreg free
  4055                           
  4056                           ;interrupt_additions/interrupt_additions.c: 306:             break;
  4057  00051A  EF6A  F003         	goto	i2l207
  4058  00051E                     i2l2635:
  4059                           
  4060                           ;interrupt_additions/interrupt_additions.c: 308:             setAmnioticOn(1);
  4061  00051E  0E01               	movlw	1
  4062  000520  ECDF  F007         	call	i2_setAmnioticOn
  4063                           
  4064                           ;interrupt_additions/interrupt_additions.c: 309:             setAmnioticPumpPWM(14);
  4065  000524  0E00               	movlw	0
  4066  000526  6E18               	movwf	(i2setAmnioticPumpPWM@pwm+1)^0,c
  4067  000528  0E0E               	movlw	14
  4068  00052A  6E17               	movwf	i2setAmnioticPumpPWM@pwm^0,c
  4069  00052C  EC68  F007         	call	i2_setAmnioticPumpPWM	;wreg free
  4070                           
  4071                           ;interrupt_additions/interrupt_additions.c: 310:             break;
  4072  000530  EF6A  F003         	goto	i2l207
  4073  000534                     i2l2637:
  4074                           
  4075                           ;interrupt_additions/interrupt_additions.c: 312:             setAmnioticOn(1);
  4076  000534  0E01               	movlw	1
  4077  000536  ECDF  F007         	call	i2_setAmnioticOn
  4078                           
  4079                           ;interrupt_additions/interrupt_additions.c: 313:             setAmnioticPumpPWM(12);
  4080  00053A  0E00               	movlw	0
  4081  00053C  6E18               	movwf	(i2setAmnioticPumpPWM@pwm+1)^0,c
  4082  00053E  0E0C               	movlw	12
  4083  000540  6E17               	movwf	i2setAmnioticPumpPWM@pwm^0,c
  4084  000542  EC68  F007         	call	i2_setAmnioticPumpPWM	;wreg free
  4085                           
  4086                           ;interrupt_additions/interrupt_additions.c: 314:             break;
  4087  000546  EF6A  F003         	goto	i2l207
  4088  00054A                     i2l2639:
  4089                           
  4090                           ;interrupt_additions/interrupt_additions.c: 316:             setAmnioticOn(1);
  4091  00054A  0E01               	movlw	1
  4092  00054C  ECDF  F007         	call	i2_setAmnioticOn
  4093                           
  4094                           ;interrupt_additions/interrupt_additions.c: 317:             setAmnioticPumpPWM(9);
  4095  000550  0E00               	movlw	0
  4096  000552  6E18               	movwf	(i2setAmnioticPumpPWM@pwm+1)^0,c
  4097  000554  0E09               	movlw	9
  4098  000556  6E17               	movwf	i2setAmnioticPumpPWM@pwm^0,c
  4099  000558  EC68  F007         	call	i2_setAmnioticPumpPWM	;wreg free
  4100                           
  4101                           ;interrupt_additions/interrupt_additions.c: 318:             break;
  4102  00055C  EF6A  F003         	goto	i2l207
  4103  000560                     i2l2641:
  4104                           
  4105                           ;interrupt_additions/interrupt_additions.c: 320:             setAmnioticOn(1);
  4106  000560  0E01               	movlw	1
  4107  000562  ECDF  F007         	call	i2_setAmnioticOn
  4108                           
  4109                           ;interrupt_additions/interrupt_additions.c: 321:             setAmnioticPumpPWM(6);
  4110  000566  0E00               	movlw	0
  4111  000568  6E18               	movwf	(i2setAmnioticPumpPWM@pwm+1)^0,c
  4112  00056A  0E06               	movlw	6
  4113  00056C  6E17               	movwf	i2setAmnioticPumpPWM@pwm^0,c
  4114  00056E  EC68  F007         	call	i2_setAmnioticPumpPWM	;wreg free
  4115                           
  4116                           ;interrupt_additions/interrupt_additions.c: 322:             break;
  4117  000572  EF6A  F003         	goto	i2l207
  4118  000576                     i2l2643:
  4119                           
  4120                           ;interrupt_additions/interrupt_additions.c: 324:             setAmnioticOn(1);
  4121  000576  0E01               	movlw	1
  4122  000578  ECDF  F007         	call	i2_setAmnioticOn
  4123                           
  4124                           ;interrupt_additions/interrupt_additions.c: 325:             setAmnioticPumpPWM(3);
  4125  00057C  0E00               	movlw	0
  4126  00057E  6E18               	movwf	(i2setAmnioticPumpPWM@pwm+1)^0,c
  4127  000580  0E03               	movlw	3
  4128  000582  6E17               	movwf	i2setAmnioticPumpPWM@pwm^0,c
  4129  000584  EC68  F007         	call	i2_setAmnioticPumpPWM	;wreg free
  4130                           
  4131                           ;interrupt_additions/interrupt_additions.c: 326:             break;
  4132  000588  EF6A  F003         	goto	i2l207
  4133  00058C                     i2l2645:
  4134                           
  4135                           ;interrupt_additions/interrupt_additions.c: 328:             setAmnioticOn(1);
  4136  00058C  0E01               	movlw	1
  4137  00058E  ECDF  F007         	call	i2_setAmnioticOn
  4138                           
  4139                           ;interrupt_additions/interrupt_additions.c: 329:             setAmnioticPumpPWM(0);
  4140  000592  0E00               	movlw	0
  4141  000594  6E18               	movwf	(i2setAmnioticPumpPWM@pwm+1)^0,c
  4142  000596  0E00               	movlw	0
  4143  000598  6E17               	movwf	i2setAmnioticPumpPWM@pwm^0,c
  4144  00059A  EC68  F007         	call	i2_setAmnioticPumpPWM	;wreg free
  4145                           
  4146                           ;interrupt_additions/interrupt_additions.c: 330:             break;
  4147  00059E  EF6A  F003         	goto	i2l207
  4148  0005A2                     i2l2649:
  4149  0005A2  5033               	movf	_UART_RX_in^0,w,c	;volatile
  4150  0005A4  6E19               	movwf	??_readUART^0,c
  4151  0005A6  6A1A               	clrf	(??_readUART+1)^0,c
  4152                           
  4153                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4154                           ; Switch size 1, requested type "simple"
  4155                           ; Number of cases is 1, Range of values is 0 to 0
  4156                           ; switch strategies available:
  4157                           ; Name         Instructions Cycles
  4158                           ; simple_byte            4     3 (average)
  4159                           ;	Chosen strategy is simple_byte
  4160  0005A8  501A               	movf	(??_readUART+1)^0,w,c
  4161  0005AA  0A00               	xorlw	0	; case 0
  4162  0005AC  B4D8               	btfsc	status,2,c
  4163  0005AE  EFDB  F002         	goto	i2l2865
  4164  0005B2  EF6A  F003         	goto	i2l207
  4165  0005B6                     i2l2865:
  4166                           
  4167                           ; Switch size 1, requested type "simple"
  4168                           ; Number of cases is 35, Range of values is 16 to 231
  4169                           ; switch strategies available:
  4170                           ; Name         Instructions Cycles
  4171                           ; simple_byte          106    54 (average)
  4172                           ;	Chosen strategy is simple_byte
  4173  0005B6  5019               	movf	??_readUART^0,w,c
  4174  0005B8  0A10               	xorlw	16	; case 16
  4175  0005BA  B4D8               	btfsc	status,2,c
  4176  0005BC  EFDF  F001         	goto	i2l2603
  4177  0005C0  0A01               	xorlw	1	; case 17
  4178  0005C2  B4D8               	btfsc	status,2,c
  4179  0005C4  EFEA  F001         	goto	i2l2605
  4180  0005C8  0A03               	xorlw	3	; case 18
  4181  0005CA  B4D8               	btfsc	status,2,c
  4182  0005CC  EFF5  F001         	goto	i2l2607
  4183  0005D0  0A01               	xorlw	1	; case 19
  4184  0005D2  B4D8               	btfsc	status,2,c
  4185  0005D4  EF00  F002         	goto	i2l2609
  4186  0005D8  0A07               	xorlw	7	; case 20
  4187  0005DA  B4D8               	btfsc	status,2,c
  4188  0005DC  EF0B  F002         	goto	i2l2611
  4189  0005E0  0A01               	xorlw	1	; case 21
  4190  0005E2  B4D8               	btfsc	status,2,c
  4191  0005E4  EF16  F002         	goto	i2l2613
  4192  0005E8  0A03               	xorlw	3	; case 22
  4193  0005EA  B4D8               	btfsc	status,2,c
  4194  0005EC  EF21  F002         	goto	i2l2615
  4195  0005F0  0A01               	xorlw	1	; case 23
  4196  0005F2  B4D8               	btfsc	status,2,c
  4197  0005F4  EF2C  F002         	goto	i2l2617
  4198  0005F8  0A0F               	xorlw	15	; case 24
  4199  0005FA  B4D8               	btfsc	status,2,c
  4200  0005FC  EF37  F002         	goto	i2l2619
  4201  000600  0A01               	xorlw	1	; case 25
  4202  000602  B4D8               	btfsc	status,2,c
  4203  000604  EF42  F002         	goto	i2l2621
  4204  000608  0A03               	xorlw	3	; case 26
  4205  00060A  B4D8               	btfsc	status,2,c
  4206  00060C  EF4D  F002         	goto	i2l2623
  4207  000610  0A01               	xorlw	1	; case 27
  4208  000612  B4D8               	btfsc	status,2,c
  4209  000614  EF58  F002         	goto	i2l2625
  4210  000618  0A07               	xorlw	7	; case 28
  4211  00061A  B4D8               	btfsc	status,2,c
  4212  00061C  EF63  F002         	goto	i2l2627
  4213  000620  0A01               	xorlw	1	; case 29
  4214  000622  B4D8               	btfsc	status,2,c
  4215  000624  EF6E  F002         	goto	i2l2629
  4216  000628  0A03               	xorlw	3	; case 30
  4217  00062A  B4D8               	btfsc	status,2,c
  4218  00062C  EF79  F002         	goto	i2l2631
  4219  000630  0A01               	xorlw	1	; case 31
  4220  000632  B4D8               	btfsc	status,2,c
  4221  000634  EF84  F002         	goto	i2l2633
  4222  000638  0A3F               	xorlw	63	; case 32
  4223  00063A  B4D8               	btfsc	status,2,c
  4224  00063C  EF8F  F002         	goto	i2l2635
  4225  000640  0A01               	xorlw	1	; case 33
  4226  000642  B4D8               	btfsc	status,2,c
  4227  000644  EF9A  F002         	goto	i2l2637
  4228  000648  0A03               	xorlw	3	; case 34
  4229  00064A  B4D8               	btfsc	status,2,c
  4230  00064C  EFA5  F002         	goto	i2l2639
  4231  000650  0A01               	xorlw	1	; case 35
  4232  000652  B4D8               	btfsc	status,2,c
  4233  000654  EFB0  F002         	goto	i2l2641
  4234  000658  0A07               	xorlw	7	; case 36
  4235  00065A  B4D8               	btfsc	status,2,c
  4236  00065C  EFBB  F002         	goto	i2l2643
  4237  000660  0A01               	xorlw	1	; case 37
  4238  000662  B4D8               	btfsc	status,2,c
  4239  000664  EFC6  F002         	goto	i2l2645
  4240  000668  0A64               	xorlw	100	; case 65
  4241  00066A  B4D8               	btfsc	status,2,c
  4242  00066C  EF5B  F000         	goto	i2l136
  4243  000670  0A3B               	xorlw	59	; case 122
  4244  000672  B4D8               	btfsc	status,2,c
  4245  000674  EF5B  F000         	goto	i2l136
  4246  000678  0AAB               	xorlw	171	; case 209
  4247  00067A  B4D8               	btfsc	status,2,c
  4248  00067C  EF95  F000         	goto	i2l2463
  4249  000680  0A03               	xorlw	3	; case 210
  4250  000682  B4D8               	btfsc	status,2,c
  4251  000684  EFB6  F000         	goto	i2l2477
  4252  000688  0A01               	xorlw	1	; case 211
  4253  00068A  B4D8               	btfsc	status,2,c
  4254  00068C  EFD7  F000         	goto	i2l2491
  4255  000690  0A07               	xorlw	7	; case 212
  4256  000692  B4D8               	btfsc	status,2,c
  4257  000694  EFF8  F000         	goto	i2l2505
  4258  000698  0A01               	xorlw	1	; case 213
  4259  00069A  B4D8               	btfsc	status,2,c
  4260  00069C  EF5B  F001         	goto	i2l2547
  4261  0006A0  0A03               	xorlw	3	; case 214
  4262  0006A2  B4D8               	btfsc	status,2,c
  4263  0006A4  EF7C  F001         	goto	i2l2561
  4264  0006A8  0A01               	xorlw	1	; case 215
  4265  0006AA  B4D8               	btfsc	status,2,c
  4266  0006AC  EF9D  F001         	goto	i2l2575
  4267  0006B0  0A0F               	xorlw	15	; case 216
  4268  0006B2  B4D8               	btfsc	status,2,c
  4269  0006B4  EFBE  F001         	goto	i2l2589
  4270  0006B8  0A3D               	xorlw	61	; case 229
  4271  0006BA  B4D8               	btfsc	status,2,c
  4272  0006BC  EF81  F000         	goto	i2l141
  4273  0006C0  0A03               	xorlw	3	; case 230
  4274  0006C2  B4D8               	btfsc	status,2,c
  4275  0006C4  EF19  F001         	goto	i2l2519
  4276  0006C8  0A01               	xorlw	1	; case 231
  4277  0006CA  B4D8               	btfsc	status,2,c
  4278  0006CC  EF3A  F001         	goto	i2l2533
  4279  0006D0  EF6A  F003         	goto	i2l207
  4280  0006D4                     i2l207:
  4281  0006D4  0012               	return		;funcret
  4282  0006D6                     __end_of_readUART:
  4283                           	callstack 0
  4284                           
  4285 ;; *************** function i2_setBloodPumpPWM *****************
  4286 ;; Defined at:
  4287 ;;		line 56 in file "pumps/pumps.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  pwm             2    4[COMRAM] unsigned short 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;		None
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  1    wreg      void 
  4294 ;; Registers used:
  4295 ;;		wreg, status,2, status,0, cstack
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4301 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4304 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4305 ;;Total ram usage:        2 bytes
  4306 ;; Hardware stack levels used: 1
  4307 ;; Hardware stack levels required when called: 1
  4308 ;; This function calls:
  4309 ;;		i2_PWM3_LoadDutyValue
  4310 ;; This function is called by:
  4311 ;;		_readUART
  4312 ;; This function uses a non-reentrant model
  4313 ;;
  4314                           
  4315                           	psect	text41
  4316  000EBA                     __ptext41:
  4317                           	callstack 0
  4318  000EBA                     i2_setBloodPumpPWM:
  4319                           	callstack 24
  4320  000EBA                     
  4321                           ;pumps/pumps.c: 57:     PWM3_LoadDutyValue(pwm);
  4322  000EBA  C017  F013         	movff	i2setBloodPumpPWM@pwm,i2PWM3_LoadDutyValue@dutyValue
  4323  000EBE  C018  F014         	movff	i2setBloodPumpPWM@pwm+1,i2PWM3_LoadDutyValue@dutyValue+1
  4324  000EC2  EC8D  F005         	call	i2_PWM3_LoadDutyValue	;wreg free
  4325  000EC6                     
  4326                           ;pumps/pumps.c: 58:     Pumps.Blood_Pump_PWM = pwm;
  4327  000EC6  C017  F025         	movff	i2setBloodPumpPWM@pwm,_Pumps	;volatile
  4328  000ECA  C018  F026         	movff	i2setBloodPumpPWM@pwm+1,_Pumps+1	;volatile
  4329  000ECE  0012               	return		;funcret
  4330  000ED0                     __end_ofi2_setBloodPumpPWM:
  4331                           	callstack 0
  4332                           
  4333 ;; *************** function i2_PWM3_LoadDutyValue *****************
  4334 ;; Defined at:
  4335 ;;		line 74 in file "mcc_generated_files/pwm3.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;  dutyValue       2    0[COMRAM] unsigned short 
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;		None
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  1    wreg      void 
  4342 ;; Registers used:
  4343 ;;		wreg, status,2, status,0
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4349 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4351 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4352 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4353 ;;Total ram usage:        4 bytes
  4354 ;; Hardware stack levels used: 1
  4355 ;; This function calls:
  4356 ;;		Nothing
  4357 ;; This function is called by:
  4358 ;;		i2_setBloodPumpPWM
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           	psect	text42
  4363  000B1A                     __ptext42:
  4364                           	callstack 0
  4365  000B1A                     i2_PWM3_LoadDutyValue:
  4366                           	callstack 24
  4367  000B1A                     
  4368                           ;mcc_generated_files/pwm3.c: 74:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 75:  {;mcc_generated_files/pwm3.c: 77:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4369  000B1A  C013  F015         	movff	i2PWM3_LoadDutyValue@dutyValue,??i2_PWM3_LoadDutyValue
  4370  000B1E  C014  F016         	movff	i2PWM3_LoadDutyValue@dutyValue+1,??i2_PWM3_LoadDutyValue+1
  4371  000B22  90D8               	bcf	status,0,c
  4372  000B24  3216               	rrcf	(??i2_PWM3_LoadDutyValue+1)^0,f,c
  4373  000B26  3215               	rrcf	??i2_PWM3_LoadDutyValue^0,f,c
  4374  000B28  90D8               	bcf	status,0,c
  4375  000B2A  3216               	rrcf	(??i2_PWM3_LoadDutyValue+1)^0,f,c
  4376  000B2C  3215               	rrcf	??i2_PWM3_LoadDutyValue^0,f,c
  4377  000B2E  5015               	movf	??i2_PWM3_LoadDutyValue^0,w,c
  4378  000B30  6EA4               	movwf	164,c	;volatile
  4379                           
  4380                           ;mcc_generated_files/pwm3.c: 80:      PWM3DCL = (dutyValue & 0x0003)<<6;
  4381  000B32  C013  F015         	movff	i2PWM3_LoadDutyValue@dutyValue,??i2_PWM3_LoadDutyValue
  4382  000B36  0E03               	movlw	3
  4383  000B38  1615               	andwf	??i2_PWM3_LoadDutyValue^0,f,c
  4384  000B3A  0E06               	movlw	6
  4385  000B3C  6E16               	movwf	(??i2_PWM3_LoadDutyValue+1)^0,c
  4386  000B3E                     i2u73_45:
  4387  000B3E  90D8               	bcf	status,0,c
  4388  000B40  3615               	rlcf	??i2_PWM3_LoadDutyValue^0,f,c
  4389  000B42  2E16               	decfsz	(??i2_PWM3_LoadDutyValue+1)^0,f,c
  4390  000B44  EF9F  F005         	goto	i2u73_45
  4391  000B48  5015               	movf	??i2_PWM3_LoadDutyValue^0,w,c
  4392  000B4A  6EA3               	movwf	163,c	;volatile
  4393  000B4C  0012               	return		;funcret
  4394  000B4E                     __end_ofi2_PWM3_LoadDutyValue:
  4395                           	callstack 0
  4396                           
  4397 ;; *************** function i2_setBloodOn *****************
  4398 ;; Defined at:
  4399 ;;		line 46 in file "pumps/pumps.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  in              1    wreg     _Bool 
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;  in              1    0[COMRAM] _Bool 
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      void 
  4406 ;; Registers used:
  4407 ;;		wreg, status,2, status,0, cstack
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4416 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4417 ;;Total ram usage:        1 bytes
  4418 ;; Hardware stack levels used: 1
  4419 ;; Hardware stack levels required when called: 1
  4420 ;; This function calls:
  4421 ;;		i2_resetPumps
  4422 ;; This function is called by:
  4423 ;;		_readUART
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           	psect	text43
  4428  000FB2                     __ptext43:
  4429                           	callstack 0
  4430  000FB2                     i2_setBloodOn:
  4431                           	callstack 24
  4432                           
  4433                           ;incstack = 0
  4434                           ;i2setBloodOn@in stored from wreg
  4435  000FB2  6E13               	movwf	i2setBloodOn@in^0,c
  4436  000FB4                     
  4437                           ;pumps/pumps.c: 47:     Pumps.Blood_On = in;
  4438  000FB4  C013  F029         	movff	i2setBloodOn@in,_Pumps+4	;volatile
  4439  000FB8                     
  4440                           ;pumps/pumps.c: 48:     resetPumps();
  4441  000FB8  EC40  F006         	call	i2_resetPumps	;wreg free
  4442  000FBC  0012               	return		;funcret
  4443  000FBE                     __end_ofi2_setBloodOn:
  4444                           	callstack 0
  4445                           
  4446 ;; *************** function i2_setAmnioticPumpPWM *****************
  4447 ;; Defined at:
  4448 ;;		line 61 in file "pumps/pumps.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;  pwm             2    4[COMRAM] unsigned short 
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;		None
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      void 
  4455 ;; Registers used:
  4456 ;;		wreg, status,2, status,0, cstack
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4462 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4465 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4466 ;;Total ram usage:        2 bytes
  4467 ;; Hardware stack levels used: 1
  4468 ;; Hardware stack levels required when called: 1
  4469 ;; This function calls:
  4470 ;;		i2_PWM4_LoadDutyValue
  4471 ;; This function is called by:
  4472 ;;		_readUART
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           	psect	text44
  4477  000ED0                     __ptext44:
  4478                           	callstack 0
  4479  000ED0                     i2_setAmnioticPumpPWM:
  4480                           	callstack 24
  4481  000ED0                     
  4482                           ;pumps/pumps.c: 62:     PWM4_LoadDutyValue(pwm);
  4483  000ED0  C017  F013         	movff	i2setAmnioticPumpPWM@pwm,i2PWM4_LoadDutyValue@dutyValue
  4484  000ED4  C018  F014         	movff	i2setAmnioticPumpPWM@pwm+1,i2PWM4_LoadDutyValue@dutyValue+1
  4485  000ED8  ECA7  F005         	call	i2_PWM4_LoadDutyValue	;wreg free
  4486  000EDC                     
  4487                           ;pumps/pumps.c: 63:     Pumps.Amniotic_Pump_PWM = pwm;
  4488  000EDC  C017  F027         	movff	i2setAmnioticPumpPWM@pwm,_Pumps+2	;volatile
  4489  000EE0  C018  F028         	movff	i2setAmnioticPumpPWM@pwm+1,_Pumps+3	;volatile
  4490  000EE4  0012               	return		;funcret
  4491  000EE6                     __end_ofi2_setAmnioticPumpPWM:
  4492                           	callstack 0
  4493                           
  4494 ;; *************** function i2_PWM4_LoadDutyValue *****************
  4495 ;; Defined at:
  4496 ;;		line 74 in file "mcc_generated_files/pwm4.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  dutyValue       2    0[COMRAM] unsigned short 
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;		None
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  1    wreg      void 
  4503 ;; Registers used:
  4504 ;;		wreg, status,2, status,0
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4510 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4512 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4513 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4514 ;;Total ram usage:        4 bytes
  4515 ;; Hardware stack levels used: 1
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		i2_setAmnioticPumpPWM
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           	psect	text45
  4524  000B4E                     __ptext45:
  4525                           	callstack 0
  4526  000B4E                     i2_PWM4_LoadDutyValue:
  4527                           	callstack 24
  4528  000B4E                     
  4529                           ;mcc_generated_files/pwm4.c: 74:  void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm4.c: 75:  {;mcc_generated_files/pwm4.c: 77:      PWM4DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  4530  000B4E  C013  F015         	movff	i2PWM4_LoadDutyValue@dutyValue,??i2_PWM4_LoadDutyValue
  4531  000B52  C014  F016         	movff	i2PWM4_LoadDutyValue@dutyValue+1,??i2_PWM4_LoadDutyValue+1
  4532  000B56  90D8               	bcf	status,0,c
  4533  000B58  3216               	rrcf	(??i2_PWM4_LoadDutyValue+1)^0,f,c
  4534  000B5A  3215               	rrcf	??i2_PWM4_LoadDutyValue^0,f,c
  4535  000B5C  90D8               	bcf	status,0,c
  4536  000B5E  3216               	rrcf	(??i2_PWM4_LoadDutyValue+1)^0,f,c
  4537  000B60  3215               	rrcf	??i2_PWM4_LoadDutyValue^0,f,c
  4538  000B62  5015               	movf	??i2_PWM4_LoadDutyValue^0,w,c
  4539  000B64  6EA1               	movwf	161,c	;volatile
  4540                           
  4541                           ;mcc_generated_files/pwm4.c: 80:      PWM4DCL = (dutyValue & 0x0003)<<6;
  4542  000B66  C013  F015         	movff	i2PWM4_LoadDutyValue@dutyValue,??i2_PWM4_LoadDutyValue
  4543  000B6A  0E03               	movlw	3
  4544  000B6C  1615               	andwf	??i2_PWM4_LoadDutyValue^0,f,c
  4545  000B6E  0E06               	movlw	6
  4546  000B70  6E16               	movwf	(??i2_PWM4_LoadDutyValue+1)^0,c
  4547  000B72                     i2u74_45:
  4548  000B72  90D8               	bcf	status,0,c
  4549  000B74  3615               	rlcf	??i2_PWM4_LoadDutyValue^0,f,c
  4550  000B76  2E16               	decfsz	(??i2_PWM4_LoadDutyValue+1)^0,f,c
  4551  000B78  EFB9  F005         	goto	i2u74_45
  4552  000B7C  5015               	movf	??i2_PWM4_LoadDutyValue^0,w,c
  4553  000B7E  6EA0               	movwf	160,c	;volatile
  4554  000B80  0012               	return		;funcret
  4555  000B82                     __end_ofi2_PWM4_LoadDutyValue:
  4556                           	callstack 0
  4557                           
  4558 ;; *************** function i2_setAmnioticOn *****************
  4559 ;; Defined at:
  4560 ;;		line 51 in file "pumps/pumps.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  in              1    wreg     _Bool 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  in              1    0[COMRAM] _Bool 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4575 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4577 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4578 ;;Total ram usage:        1 bytes
  4579 ;; Hardware stack levels used: 1
  4580 ;; Hardware stack levels required when called: 1
  4581 ;; This function calls:
  4582 ;;		i2_resetPumps
  4583 ;; This function is called by:
  4584 ;;		_readUART
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           	psect	text46
  4589  000FBE                     __ptext46:
  4590                           	callstack 0
  4591  000FBE                     i2_setAmnioticOn:
  4592                           	callstack 24
  4593                           
  4594                           ;incstack = 0
  4595                           ;i2setAmnioticOn@in stored from wreg
  4596  000FBE  6E13               	movwf	i2setAmnioticOn@in^0,c
  4597  000FC0                     
  4598                           ;pumps/pumps.c: 52:     Pumps.Amniotic_On = in;
  4599  000FC0  C013  F02A         	movff	i2setAmnioticOn@in,_Pumps+5	;volatile
  4600  000FC4                     
  4601                           ;pumps/pumps.c: 53:     resetPumps();
  4602  000FC4  EC40  F006         	call	i2_resetPumps	;wreg free
  4603  000FC8  0012               	return		;funcret
  4604  000FCA                     __end_ofi2_setAmnioticOn:
  4605                           	callstack 0
  4606                           
  4607 ;; *************** function i2_resetPumps *****************
  4608 ;; Defined at:
  4609 ;;		line 31 in file "pumps/pumps.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;		None
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;		None
  4614 ;; Return value:  Size  Location     Type
  4615 ;;                  1    wreg      void 
  4616 ;; Registers used:
  4617 ;;		wreg, status,2, status,0
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4627 ;;Total ram usage:        0 bytes
  4628 ;; Hardware stack levels used: 1
  4629 ;; This function calls:
  4630 ;;		Nothing
  4631 ;; This function is called by:
  4632 ;;		i2_setBloodOn
  4633 ;;		i2_setAmnioticOn
  4634 ;; This function uses a non-reentrant model
  4635 ;;
  4636                           
  4637                           	psect	text47
  4638  000C80                     __ptext47:
  4639                           	callstack 0
  4640  000C80                     i2_resetPumps:
  4641                           	callstack 24
  4642  000C80  9C86               	bcf	134,6,c	;volatile
  4643  000C82  9684               	bcf	132,3,c	;volatile
  4644  000C84  9A86               	bcf	134,5,c	;volatile
  4645  000C86                     
  4646                           ;pumps/pumps.c: 36:    if(Pumps.Blood_On == 1){
  4647  000C86  0429               	decf	(_Pumps+4)^0,w,c	;volatile
  4648  000C88  A4D8               	btfss	status,2,c
  4649  000C8A  EF49  F006         	goto	i2u71_41
  4650  000C8E  EF4B  F006         	goto	i2u71_40
  4651  000C92                     i2u71_41:
  4652  000C92  EF4D  F006         	goto	i2l2369
  4653  000C96                     i2u71_40:
  4654  000C96  8A86               	bsf	134,5,c	;volatile
  4655  000C98  8C86               	bsf	134,6,c	;volatile
  4656  000C9A                     i2l2369:
  4657                           
  4658                           ;pumps/pumps.c: 40:     if(Pumps.Amniotic_On == 1){
  4659  000C9A  042A               	decf	(_Pumps+5)^0,w,c	;volatile
  4660  000C9C  A4D8               	btfss	status,2,c
  4661  000C9E  EF53  F006         	goto	i2u72_41
  4662  000CA2  EF55  F006         	goto	i2u72_40
  4663  000CA6                     i2u72_41:
  4664  000CA6  EF57  F006         	goto	i2l255
  4665  000CAA                     i2u72_40:
  4666  000CAA  8684               	bsf	132,3,c	;volatile
  4667  000CAC  8C86               	bsf	134,6,c	;volatile
  4668  000CAE                     i2l255:
  4669  000CAE  0012               	return		;funcret
  4670  000CB0                     __end_ofi2_resetPumps:
  4671                           	callstack 0
  4672                           
  4673 ;; *************** function _EUSART1_Read *****************
  4674 ;; Defined at:
  4675 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;		None
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;		None
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      unsigned char 
  4682 ;; Registers used:
  4683 ;;		wreg, status,2
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4693 ;;Total ram usage:        0 bytes
  4694 ;; Hardware stack levels used: 1
  4695 ;; This function calls:
  4696 ;;		Nothing
  4697 ;; This function is called by:
  4698 ;;		_readUART
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           	psect	text48
  4703  000D08                     __ptext48:
  4704                           	callstack 0
  4705  000D08                     _EUSART1_Read:
  4706                           	callstack 25
  4707  000D08                     i2l327:
  4708                           
  4709                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR3bits.RC1IF)
  4710  000D08  010E               	movlb	14	; () banked
  4711  000D0A  ABCD               	btfss	205,5,b	;volatile
  4712  000D0C  EF8A  F006         	goto	i2u16_41
  4713  000D10  EF8C  F006         	goto	i2u16_40
  4714  000D14                     i2u16_41:
  4715  000D14  EF84  F006         	goto	i2l327
  4716  000D18                     i2u16_40:
  4717  000D18                     
  4718                           ; BSR set to: 14
  4719                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  4720  000D18  0E00               	movlw	0
  4721  000D1A  6E30               	movwf	_eusart1RxLastError^0,c	;volatile
  4722  000D1C                     
  4723                           ; BSR set to: 14
  4724                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RC1STAbits.OERR)
  4725  000D1C  A29D               	btfss	157,1,c	;volatile
  4726  000D1E  EF93  F006         	goto	i2u17_41
  4727  000D22  EF95  F006         	goto	i2u17_40
  4728  000D26                     i2u17_41:
  4729  000D26  EF97  F006         	goto	i2l1611
  4730  000D2A                     i2u17_40:
  4731  000D2A                     
  4732                           ; BSR set to: 14
  4733                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          C1STAbits.CREN = 0;
  4734  000D2A  989D               	bcf	157,4,c	;volatile
  4735                           
  4736                           ;mcc_generated_files/eusart1.c: 126:         RC1STAbits.CREN = 1;
  4737  000D2C  889D               	bsf	157,4,c	;volatile
  4738  000D2E                     i2l1611:
  4739                           
  4740                           ; BSR set to: 14
  4741                           ;mcc_generated_files/eusart1.c: 129:     return RC1REG;
  4742  000D2E  5099               	movf	153,w,c	;volatile
  4743  000D30                     
  4744                           ; BSR set to: 14
  4745  000D30  0012               	return		;funcret
  4746  000D32                     __end_of_EUSART1_Read:
  4747                           	callstack 0
  4748                           
  4749 ;; *************** function _INT2_ISR *****************
  4750 ;; Defined at:
  4751 ;;		line 92 in file "mcc_generated_files/ext_int.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;		None
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;		None
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  1    wreg      void 
  4758 ;; Registers used:
  4759 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4769 ;;Total ram usage:        0 bytes
  4770 ;; Hardware stack levels used: 1
  4771 ;; Hardware stack levels required when called: 4
  4772 ;; This function calls:
  4773 ;;		_INT2_CallBack
  4774 ;; This function is called by:
  4775 ;;		_INTERRUPT_InterruptManager
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text49
  4780  000FCA                     __ptext49:
  4781                           	callstack 0
  4782  000FCA                     _INT2_ISR:
  4783                           	callstack 22
  4784  000FCA                     
  4785                           ;mcc_generated_files/ext_int.c: 94:     (PIR0bits.INT2IF = 0);
  4786  000FCA  010E               	movlb	14	; () banked
  4787  000FCC  95CA               	bcf	202,2,b	;volatile
  4788  000FCE                     
  4789                           ; BSR set to: 14
  4790                           ;mcc_generated_files/ext_int.c: 97:     INT2_CallBack();
  4791  000FCE  ECC1  F005         	call	_INT2_CallBack	;wreg free
  4792  000FD2  0012               	return		;funcret
  4793  000FD4                     __end_of_INT2_ISR:
  4794                           	callstack 0
  4795                           
  4796 ;; *************** function _INT2_CallBack *****************
  4797 ;; Defined at:
  4798 ;;		line 101 in file "mcc_generated_files/ext_int.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;		None
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      void 
  4805 ;; Registers used:
  4806 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4816 ;;Total ram usage:        0 bytes
  4817 ;; Hardware stack levels used: 1
  4818 ;; Hardware stack levels required when called: 3
  4819 ;; This function calls:
  4820 ;;		Absolute function
  4821 ;;		_INT2_DefaultInterruptHandler
  4822 ;;		_encoderTrigger
  4823 ;; This function is called by:
  4824 ;;		_INT2_ISR
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828                           	psect	text50
  4829  000B82                     __ptext50:
  4830                           	callstack 0
  4831  000B82                     _INT2_CallBack:
  4832                           	callstack 22
  4833  000B82                     
  4834                           ;mcc_generated_files/ext_int.c: 104:     encoderTrigger();
  4835  000B82  ECC8  F004         	call	_encoderTrigger	;wreg free
  4836  000B86                     
  4837                           ;mcc_generated_files/ext_int.c: 105:     if(INT2_InterruptHandler)
  4838  000B86  5001               	movf	_INT2_InterruptHandler^0,w,c
  4839  000B88  1002               	iorwf	(_INT2_InterruptHandler+1)^0,w,c
  4840  000B8A  1003               	iorwf	(_INT2_InterruptHandler+2)^0,w,c
  4841  000B8C  B4D8               	btfsc	status,2,c
  4842  000B8E  EFCB  F005         	goto	i2u79_41
  4843  000B92  EFCD  F005         	goto	i2u79_40
  4844  000B96                     i2u79_41:
  4845  000B96  EFDA  F005         	goto	i2l412
  4846  000B9A                     i2u79_40:
  4847  000B9A                     
  4848                           ;mcc_generated_files/ext_int.c: 106:     {;mcc_generated_files/ext_int.c: 107:         I
      +                          NT2_InterruptHandler();
  4849  000B9A  D802               	call	i2u80_48
  4850  000B9C  EFDA  F005         	goto	i2u80_49
  4851  000BA0                     i2u80_48:
  4852  000BA0  0005               	push	
  4853  000BA2  6EFA               	movwf	pclath,c
  4854  000BA4  5001               	movf	_INT2_InterruptHandler^0,w,c
  4855  000BA6  6EFD               	movwf	tosl,c
  4856  000BA8  5002               	movf	(_INT2_InterruptHandler+1)^0,w,c
  4857  000BAA  6EFE               	movwf	tosh,c
  4858  000BAC  5003               	movf	(_INT2_InterruptHandler+2)^0,w,c
  4859  000BAE  6EFF               	movwf	tosu,c
  4860  000BB0  50FA               	movf	pclath,w,c
  4861  000BB2  0012               	return		;indir
  4862  000BB4                     i2u80_49:
  4863  000BB4                     i2l412:
  4864  000BB4  0012               	return		;funcret
  4865  000BB6                     __end_of_INT2_CallBack:
  4866                           	callstack 0
  4867                           
  4868 ;; *************** function _encoderTrigger *****************
  4869 ;; Defined at:
  4870 ;;		line 93 in file "encoder/encoder.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;		None
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;		None
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  1    wreg      void 
  4877 ;; Registers used:
  4878 ;;		wreg, status,2, status,0, cstack
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4888 ;;Total ram usage:        0 bytes
  4889 ;; Hardware stack levels used: 1
  4890 ;; Hardware stack levels required when called: 2
  4891 ;; This function calls:
  4892 ;;		_sendEncoderValueToBGMx8
  4893 ;;		_stepperIsAsleep
  4894 ;; This function is called by:
  4895 ;;		_INT2_CallBack
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899                           	psect	text51
  4900  000990                     __ptext51:
  4901                           	callstack 0
  4902  000990                     _encoderTrigger:
  4903                           	callstack 22
  4904  000990                     
  4905                           ;encoder/encoder.c: 94:     if(stepperIsAsleep()){
  4906  000990  EC0E  F007         	call	_stepperIsAsleep	;wreg free
  4907  000994  0900               	iorlw	0
  4908  000996  B4D8               	btfsc	status,2,c
  4909  000998  EFD0  F004         	goto	i2u66_41
  4910  00099C  EFD2  F004         	goto	i2u66_40
  4911  0009A0                     i2u66_41:
  4912  0009A0  EFD4  F004         	goto	i2l19
  4913  0009A4                     i2u66_40:
  4914  0009A4  EFF3  F004         	goto	i2l20
  4915  0009A8                     i2l19:
  4916                           
  4917                           ;encoder/encoder.c: 106:     if(LATDbits.LATD2){
  4918  0009A8  A486               	btfss	134,2,c	;volatile
  4919  0009AA  EFD9  F004         	goto	i2u67_41
  4920  0009AE  EFDB  F004         	goto	i2u67_40
  4921  0009B2                     i2u67_41:
  4922  0009B2  EFDF  F004         	goto	i2l2333
  4923  0009B6                     i2u67_40:
  4924  0009B6                     
  4925                           ;encoder/encoder.c: 107:         encoder_ticks++;
  4926  0009B6  4A2E               	infsnz	_encoder_ticks^0,f,c	;volatile
  4927  0009B8  2A2F               	incf	(_encoder_ticks+1)^0,f,c	;volatile
  4928                           
  4929                           ;encoder/encoder.c: 114:     }else{
  4930  0009BA  EFF1  F004         	goto	i2l2339
  4931  0009BE                     i2l2333:
  4932                           
  4933                           ;encoder/encoder.c: 115:         if(encoder_ticks > 0){
  4934  0009BE  502E               	movf	_encoder_ticks^0,w,c	;volatile
  4935  0009C0  102F               	iorwf	(_encoder_ticks+1)^0,w,c	;volatile
  4936  0009C2  B4D8               	btfsc	status,2,c
  4937  0009C4  EFE6  F004         	goto	i2u68_41
  4938  0009C8  EFE8  F004         	goto	i2u68_40
  4939  0009CC                     i2u68_41:
  4940  0009CC  EFED  F004         	goto	i2l2337
  4941  0009D0                     i2u68_40:
  4942  0009D0                     
  4943                           ;encoder/encoder.c: 116:             encoder_ticks--;
  4944  0009D0  062E               	decf	_encoder_ticks^0,f,c	;volatile
  4945  0009D2  A0D8               	btfss	status,0,c
  4946  0009D4  062F               	decf	(_encoder_ticks+1)^0,f,c	;volatile
  4947                           
  4948                           ;encoder/encoder.c: 117:         }else{
  4949  0009D6  EFF1  F004         	goto	i2l2339
  4950  0009DA                     i2l2337:
  4951                           
  4952                           ;encoder/encoder.c: 118:             encoder_ticks = 0;
  4953  0009DA  0E00               	movlw	0
  4954  0009DC  6E2F               	movwf	(_encoder_ticks+1)^0,c	;volatile
  4955  0009DE  0E00               	movlw	0
  4956  0009E0  6E2E               	movwf	_encoder_ticks^0,c	;volatile
  4957  0009E2                     i2l2339:
  4958                           
  4959                           ;encoder/encoder.c: 127:     sendEncoderValueToBGMx8();
  4960  0009E2  ECAC  F006         	call	_sendEncoderValueToBGMx8	;wreg free
  4961  0009E6                     i2l20:
  4962  0009E6  0012               	return		;funcret
  4963  0009E8                     __end_of_encoderTrigger:
  4964                           	callstack 0
  4965                           
  4966 ;; *************** function _stepperIsAsleep *****************
  4967 ;; Defined at:
  4968 ;;		line 28 in file "step/step.c"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;		None
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;		None
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  1    wreg      _Bool 
  4975 ;; Registers used:
  4976 ;;		wreg
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4986 ;;Total ram usage:        0 bytes
  4987 ;; Hardware stack levels used: 1
  4988 ;; This function calls:
  4989 ;;		Nothing
  4990 ;; This function is called by:
  4991 ;;		_encoderTrigger
  4992 ;;		_readUART
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text52
  4997  000E1C                     __ptext52:
  4998                           	callstack 0
  4999  000E1C                     _stepperIsAsleep:
  5000                           	callstack 25
  5001  000E1C                     
  5002                           ;step/step.c: 29:     if(LATDbits.LATD3){
  5003  000E1C  A686               	btfss	134,3,c	;volatile
  5004  000E1E  EF13  F007         	goto	i2u2_41
  5005  000E22  EF15  F007         	goto	i2u2_40
  5006  000E26                     i2u2_41:
  5007  000E26  EF18  F007         	goto	i2l1523
  5008  000E2A                     i2u2_40:
  5009  000E2A                     
  5010                           ;step/step.c: 31:         return 0;
  5011  000E2A  0E00               	movlw	0
  5012  000E2C  EF19  F007         	goto	i2l778
  5013  000E30                     i2l1523:
  5014                           
  5015                           ;step/step.c: 34:         return 1;
  5016  000E30  0E01               	movlw	1
  5017  000E32                     i2l778:
  5018  000E32  0012               	return		;funcret
  5019  000E34                     __end_of_stepperIsAsleep:
  5020                           	callstack 0
  5021                           
  5022 ;; *************** function _sendEncoderValueToBGMx8 *****************
  5023 ;; Defined at:
  5024 ;;		line 143 in file "encoder/encoder.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;		None
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;		None
  5029 ;; Return value:  Size  Location     Type
  5030 ;;                  1    wreg      void 
  5031 ;; Registers used:
  5032 ;;		wreg, status,2, status,0, cstack
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5042 ;;Total ram usage:        0 bytes
  5043 ;; Hardware stack levels used: 1
  5044 ;; Hardware stack levels required when called: 1
  5045 ;; This function calls:
  5046 ;;		i2_EUSART1_Write
  5047 ;; This function is called by:
  5048 ;;		_encoderTrigger
  5049 ;; This function uses a non-reentrant model
  5050 ;;
  5051                           
  5052                           	psect	text53
  5053  000D58                     __ptext53:
  5054                           	callstack 0
  5055  000D58                     _sendEncoderValueToBGMx8:
  5056                           	callstack 22
  5057  000D58                     
  5058                           ;encoder/encoder.c: 144:     if(encoder_ticks != 0){
  5059  000D58  502E               	movf	_encoder_ticks^0,w,c	;volatile
  5060  000D5A  102F               	iorwf	(_encoder_ticks+1)^0,w,c	;volatile
  5061  000D5C  B4D8               	btfsc	status,2,c
  5062  000D5E  EFB3  F006         	goto	i2u65_41
  5063  000D62  EFB5  F006         	goto	i2u65_40
  5064  000D66                     i2u65_41:
  5065  000D66  EFBC  F006         	goto	i2l32
  5066  000D6A                     i2u65_40:
  5067  000D6A                     
  5068                           ;encoder/encoder.c: 147:         EUSART1_Write(0xCC);
  5069  000D6A  0ECC               	movlw	204
  5070  000D6C  EC1A  F007         	call	i2_EUSART1_Write
  5071  000D70                     
  5072                           ;encoder/encoder.c: 148:         EUSART1_Write(encoder_ticks*2);
  5073  000D70  502E               	movf	_encoder_ticks^0,w,c	;volatile
  5074  000D72  242E               	addwf	_encoder_ticks^0,w,c	;volatile
  5075  000D74  EC1A  F007         	call	i2_EUSART1_Write
  5076  000D78                     i2l32:
  5077  000D78  0012               	return		;funcret
  5078  000D7A                     __end_of_sendEncoderValueToBGMx8:
  5079                           	callstack 0
  5080                           
  5081 ;; *************** function _INT2_DefaultInterruptHandler *****************
  5082 ;; Defined at:
  5083 ;;		line 115 in file "mcc_generated_files/ext_int.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;		None
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;		None
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  1    wreg      void 
  5090 ;; Registers used:
  5091 ;;		None
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5101 ;;Total ram usage:        0 bytes
  5102 ;; Hardware stack levels used: 1
  5103 ;; This function calls:
  5104 ;;		Nothing
  5105 ;; This function is called by:
  5106 ;;		_EXT_INT_Initialize
  5107 ;;		_INT2_CallBack
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111                           	psect	text54
  5112  00101E                     __ptext54:
  5113                           	callstack 0
  5114  00101E                     _INT2_DefaultInterruptHandler:
  5115                           	callstack 24
  5116  00101E  0012               	return		;funcret
  5117  001020                     __end_of_INT2_DefaultInterruptHandler:
  5118                           	callstack 0
  5119                           
  5120 ;; *************** function _INT1_ISR *****************
  5121 ;; Defined at:
  5122 ;;		line 65 in file "mcc_generated_files/ext_int.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;		None
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;		None
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  1    wreg      void 
  5129 ;; Registers used:
  5130 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5140 ;;Total ram usage:        0 bytes
  5141 ;; Hardware stack levels used: 1
  5142 ;; Hardware stack levels required when called: 3
  5143 ;; This function calls:
  5144 ;;		_INT1_CallBack
  5145 ;; This function is called by:
  5146 ;;		_INTERRUPT_InterruptManager
  5147 ;; This function uses a non-reentrant model
  5148 ;;
  5149                           
  5150                           	psect	text55
  5151  000FD4                     __ptext55:
  5152                           	callstack 0
  5153  000FD4                     _INT1_ISR:
  5154                           	callstack 23
  5155  000FD4                     
  5156                           ;mcc_generated_files/ext_int.c: 67:     (PIR0bits.INT1IF = 0);
  5157  000FD4  010E               	movlb	14	; () banked
  5158  000FD6  93CA               	bcf	202,1,b	;volatile
  5159  000FD8                     
  5160                           ; BSR set to: 14
  5161                           ;mcc_generated_files/ext_int.c: 70:     INT1_CallBack();
  5162  000FD8  ECDB  F005         	call	_INT1_CallBack	;wreg free
  5163  000FDC  0012               	return		;funcret
  5164  000FDE                     __end_of_INT1_ISR:
  5165                           	callstack 0
  5166                           
  5167 ;; *************** function _INT1_CallBack *****************
  5168 ;; Defined at:
  5169 ;;		line 74 in file "mcc_generated_files/ext_int.c"
  5170 ;; Parameters:    Size  Location     Type
  5171 ;;		None
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;		None
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  1    wreg      void 
  5176 ;; Registers used:
  5177 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5187 ;;Total ram usage:        0 bytes
  5188 ;; Hardware stack levels used: 1
  5189 ;; Hardware stack levels required when called: 2
  5190 ;; This function calls:
  5191 ;;		Absolute function
  5192 ;;		_INT1_DefaultInterruptHandler
  5193 ;;		_cervixLimitSwitchTrigger
  5194 ;; This function is called by:
  5195 ;;		_INT1_ISR
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           	psect	text56
  5200  000BB6                     __ptext56:
  5201                           	callstack 0
  5202  000BB6                     _INT1_CallBack:
  5203                           	callstack 23
  5204  000BB6                     
  5205                           ;mcc_generated_files/ext_int.c: 77:     cervixLimitSwitchTrigger();
  5206  000BB6  EC92  F007         	call	_cervixLimitSwitchTrigger	;wreg free
  5207  000BBA                     
  5208                           ;mcc_generated_files/ext_int.c: 78:     if(INT1_InterruptHandler)
  5209  000BBA  5004               	movf	_INT1_InterruptHandler^0,w,c
  5210  000BBC  1005               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
  5211  000BBE  1006               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
  5212  000BC0  B4D8               	btfsc	status,2,c
  5213  000BC2  EFE5  F005         	goto	i2u77_41
  5214  000BC6  EFE7  F005         	goto	i2u77_40
  5215  000BCA                     i2u77_41:
  5216  000BCA  EFF4  F005         	goto	i2l399
  5217  000BCE                     i2u77_40:
  5218  000BCE                     
  5219                           ;mcc_generated_files/ext_int.c: 79:     {;mcc_generated_files/ext_int.c: 80:         INT
      +                          1_InterruptHandler();
  5220  000BCE  D802               	call	i2u78_48
  5221  000BD0  EFF4  F005         	goto	i2u78_49
  5222  000BD4                     i2u78_48:
  5223  000BD4  0005               	push	
  5224  000BD6  6EFA               	movwf	pclath,c
  5225  000BD8  5004               	movf	_INT1_InterruptHandler^0,w,c
  5226  000BDA  6EFD               	movwf	tosl,c
  5227  000BDC  5005               	movf	(_INT1_InterruptHandler+1)^0,w,c
  5228  000BDE  6EFE               	movwf	tosh,c
  5229  000BE0  5006               	movf	(_INT1_InterruptHandler+2)^0,w,c
  5230  000BE2  6EFF               	movwf	tosu,c
  5231  000BE4  50FA               	movf	pclath,w,c
  5232  000BE6  0012               	return		;indir
  5233  000BE8                     i2u78_49:
  5234  000BE8                     i2l399:
  5235  000BE8  0012               	return		;funcret
  5236  000BEA                     __end_of_INT1_CallBack:
  5237                           	callstack 0
  5238                           
  5239 ;; *************** function _cervixLimitSwitchTrigger *****************
  5240 ;; Defined at:
  5241 ;;		line 345 in file "interrupt_additions/interrupt_additions.c"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;		None
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;		None
  5246 ;; Return value:  Size  Location     Type
  5247 ;;                  1    wreg      void 
  5248 ;; Registers used:
  5249 ;;		wreg, status,2, cstack
  5250 ;; Tracked objects:
  5251 ;;		On entry : 0/0
  5252 ;;		On exit  : 0/0
  5253 ;;		Unchanged: 0/0
  5254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5259 ;;Total ram usage:        0 bytes
  5260 ;; Hardware stack levels used: 1
  5261 ;; Hardware stack levels required when called: 1
  5262 ;; This function calls:
  5263 ;;		i2_EUSART1_Write
  5264 ;;		i2_reset_interruptAction
  5265 ;;		i2_set_INTERRUPT_STEPPER_BREAK_FLAG
  5266 ;; This function is called by:
  5267 ;;		_INT1_CallBack
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           	psect	text57
  5272  000F24                     __ptext57:
  5273                           	callstack 0
  5274  000F24                     _cervixLimitSwitchTrigger:
  5275                           	callstack 23
  5276  000F24                     
  5277                           ;interrupt_additions/interrupt_additions.c: 346:     EUSART1_Write(0x0F);
  5278  000F24  0E0F               	movlw	15
  5279  000F26  EC1A  F007         	call	i2_EUSART1_Write
  5280                           
  5281                           ;interrupt_additions/interrupt_additions.c: 347:     set_INTERRUPT_STEPPER_BREAK_FLAG(1)
      +                          ;
  5282  000F2A  0E01               	movlw	1
  5283  000F2C  ECFC  F007         	call	i2_set_INTERRUPT_STEPPER_BREAK_FLAG
  5284  000F30                     
  5285                           ;interrupt_additions/interrupt_additions.c: 348:     reset_interruptAction();
  5286  000F30  EC06  F008         	call	i2_reset_interruptAction	;wreg free
  5287  000F34  0012               	return		;funcret
  5288  000F36                     __end_of_cervixLimitSwitchTrigger:
  5289                           	callstack 0
  5290                           
  5291 ;; *************** function _INT1_DefaultInterruptHandler *****************
  5292 ;; Defined at:
  5293 ;;		line 88 in file "mcc_generated_files/ext_int.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;		None
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;		None
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  1    wreg      void 
  5300 ;; Registers used:
  5301 ;;		None
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5311 ;;Total ram usage:        0 bytes
  5312 ;; Hardware stack levels used: 1
  5313 ;; This function calls:
  5314 ;;		Nothing
  5315 ;; This function is called by:
  5316 ;;		_EXT_INT_Initialize
  5317 ;;		_INT1_CallBack
  5318 ;; This function uses a non-reentrant model
  5319 ;;
  5320                           
  5321                           	psect	text58
  5322  001020                     __ptext58:
  5323                           	callstack 0
  5324  001020                     _INT1_DefaultInterruptHandler:
  5325                           	callstack 24
  5326  001020  0012               	return		;funcret
  5327  001022                     __end_of_INT1_DefaultInterruptHandler:
  5328                           	callstack 0
  5329                           
  5330 ;; *************** function _INT0_ISR *****************
  5331 ;; Defined at:
  5332 ;;		line 38 in file "mcc_generated_files/ext_int.c"
  5333 ;; Parameters:    Size  Location     Type
  5334 ;;		None
  5335 ;; Auto vars:     Size  Location     Type
  5336 ;;		None
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  1    wreg      void 
  5339 ;; Registers used:
  5340 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5350 ;;Total ram usage:        0 bytes
  5351 ;; Hardware stack levels used: 1
  5352 ;; Hardware stack levels required when called: 4
  5353 ;; This function calls:
  5354 ;;		_INT0_CallBack
  5355 ;; This function is called by:
  5356 ;;		_INTERRUPT_InterruptManager
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           	psect	text59
  5361  000FDE                     __ptext59:
  5362                           	callstack 0
  5363  000FDE                     _INT0_ISR:
  5364                           	callstack 22
  5365  000FDE                     
  5366                           ;mcc_generated_files/ext_int.c: 40:     (PIR0bits.INT0IF = 0);
  5367  000FDE  010E               	movlb	14	; () banked
  5368  000FE0  91CA               	bcf	202,0,b	;volatile
  5369  000FE2                     
  5370                           ; BSR set to: 14
  5371                           ;mcc_generated_files/ext_int.c: 43:     INT0_CallBack();
  5372  000FE2  ECF5  F005         	call	_INT0_CallBack	;wreg free
  5373  000FE6  0012               	return		;funcret
  5374  000FE8                     __end_of_INT0_ISR:
  5375                           	callstack 0
  5376                           
  5377 ;; *************** function _INT0_CallBack *****************
  5378 ;; Defined at:
  5379 ;;		line 47 in file "mcc_generated_files/ext_int.c"
  5380 ;; Parameters:    Size  Location     Type
  5381 ;;		None
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;		None
  5384 ;; Return value:  Size  Location     Type
  5385 ;;                  1    wreg      void 
  5386 ;; Registers used:
  5387 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5388 ;; Tracked objects:
  5389 ;;		On entry : 0/0
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5397 ;;Total ram usage:        0 bytes
  5398 ;; Hardware stack levels used: 1
  5399 ;; Hardware stack levels required when called: 3
  5400 ;; This function calls:
  5401 ;;		Absolute function
  5402 ;;		_INT0_DefaultInterruptHandler
  5403 ;;		_motorLimitSwitchTrigger
  5404 ;; This function is called by:
  5405 ;;		_INT0_ISR
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           	psect	text60
  5410  000BEA                     __ptext60:
  5411                           	callstack 0
  5412  000BEA                     _INT0_CallBack:
  5413                           	callstack 22
  5414  000BEA                     
  5415                           ;mcc_generated_files/ext_int.c: 50:     motorLimitSwitchTrigger();
  5416  000BEA  EC73  F007         	call	_motorLimitSwitchTrigger	;wreg free
  5417  000BEE                     
  5418                           ;mcc_generated_files/ext_int.c: 51:     if(INT0_InterruptHandler)
  5419  000BEE  5007               	movf	_INT0_InterruptHandler^0,w,c
  5420  000BF0  1008               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
  5421  000BF2  1009               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
  5422  000BF4  B4D8               	btfsc	status,2,c
  5423  000BF6  EFFF  F005         	goto	i2u75_41
  5424  000BFA  EF01  F006         	goto	i2u75_40
  5425  000BFE                     i2u75_41:
  5426  000BFE  EF0E  F006         	goto	i2l386
  5427  000C02                     i2u75_40:
  5428  000C02                     
  5429                           ;mcc_generated_files/ext_int.c: 52:     {;mcc_generated_files/ext_int.c: 53:         INT
      +                          0_InterruptHandler();
  5430  000C02  D802               	call	i2u76_48
  5431  000C04  EF0E  F006         	goto	i2u76_49
  5432  000C08                     i2u76_48:
  5433  000C08  0005               	push	
  5434  000C0A  6EFA               	movwf	pclath,c
  5435  000C0C  5007               	movf	_INT0_InterruptHandler^0,w,c
  5436  000C0E  6EFD               	movwf	tosl,c
  5437  000C10  5008               	movf	(_INT0_InterruptHandler+1)^0,w,c
  5438  000C12  6EFE               	movwf	tosh,c
  5439  000C14  5009               	movf	(_INT0_InterruptHandler+2)^0,w,c
  5440  000C16  6EFF               	movwf	tosu,c
  5441  000C18  50FA               	movf	pclath,w,c
  5442  000C1A  0012               	return		;indir
  5443  000C1C                     i2u76_49:
  5444  000C1C                     i2l386:
  5445  000C1C  0012               	return		;funcret
  5446  000C1E                     __end_of_INT0_CallBack:
  5447                           	callstack 0
  5448                           
  5449 ;; *************** function _motorLimitSwitchTrigger *****************
  5450 ;; Defined at:
  5451 ;;		line 337 in file "interrupt_additions/interrupt_additions.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;		None
  5454 ;; Auto vars:     Size  Location     Type
  5455 ;;		None
  5456 ;; Return value:  Size  Location     Type
  5457 ;;                  1    wreg      void 
  5458 ;; Registers used:
  5459 ;;		wreg, status,2, cstack
  5460 ;; Tracked objects:
  5461 ;;		On entry : 0/0
  5462 ;;		On exit  : 0/0
  5463 ;;		Unchanged: 0/0
  5464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5469 ;;Total ram usage:        0 bytes
  5470 ;; Hardware stack levels used: 1
  5471 ;; Hardware stack levels required when called: 2
  5472 ;; This function calls:
  5473 ;;		_resetEncoderTicks
  5474 ;;		i2_EUSART1_Write
  5475 ;;		i2_reset_interruptAction
  5476 ;;		i2_set_INTERRUPT_STEPPER_BREAK_FLAG
  5477 ;; This function is called by:
  5478 ;;		_INT0_CallBack
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482                           	psect	text61
  5483  000EE6                     __ptext61:
  5484                           	callstack 0
  5485  000EE6                     _motorLimitSwitchTrigger:
  5486                           	callstack 22
  5487  000EE6                     
  5488                           ;interrupt_additions/interrupt_additions.c: 338:     EUSART1_Write(0x10);
  5489  000EE6  0E10               	movlw	16
  5490  000EE8  EC1A  F007         	call	i2_EUSART1_Write
  5491  000EEC                     
  5492                           ;interrupt_additions/interrupt_additions.c: 339:     resetEncoderTicks();
  5493  000EEC  EC9B  F007         	call	_resetEncoderTicks	;wreg free
  5494  000EF0                     
  5495                           ;interrupt_additions/interrupt_additions.c: 340:     set_INTERRUPT_STEPPER_BREAK_FLAG(1)
      +                          ;
  5496  000EF0  0E01               	movlw	1
  5497  000EF2  ECFC  F007         	call	i2_set_INTERRUPT_STEPPER_BREAK_FLAG
  5498                           
  5499                           ;interrupt_additions/interrupt_additions.c: 341:     reset_interruptAction();
  5500  000EF6  EC06  F008         	call	i2_reset_interruptAction	;wreg free
  5501  000EFA  0012               	return		;funcret
  5502  000EFC                     __end_of_motorLimitSwitchTrigger:
  5503                           	callstack 0
  5504                           
  5505 ;; *************** function i2_set_INTERRUPT_STEPPER_BREAK_FLAG *****************
  5506 ;; Defined at:
  5507 ;;		line 35 in file "interrupt_additions/interrupt_additions.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;  in              1    wreg     _Bool 
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;  in              1    0[COMRAM] _Bool 
  5512 ;; Return value:  Size  Location     Type
  5513 ;;                  1    wreg      void 
  5514 ;; Registers used:
  5515 ;;		wreg
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5524 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5525 ;;Total ram usage:        1 bytes
  5526 ;; Hardware stack levels used: 1
  5527 ;; This function calls:
  5528 ;;		Nothing
  5529 ;; This function is called by:
  5530 ;;		_motorLimitSwitchTrigger
  5531 ;;		_cervixLimitSwitchTrigger
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           	psect	text62
  5536  000FF8                     __ptext62:
  5537                           	callstack 0
  5538  000FF8                     i2_set_INTERRUPT_STEPPER_BREAK_FLAG:
  5539                           	callstack 23
  5540                           
  5541                           ;incstack = 0
  5542                           ;i2set_INTERRUPT_STEPPER_BREAK_FLAG@in stored from wreg
  5543  000FF8  6E13               	movwf	i2set_INTERRUPT_STEPPER_BREAK_FLAG@in^0,c
  5544  000FFA                     
  5545                           ;interrupt_additions/interrupt_additions.c: 36:     INTERRUPT_STEPPER_BREAK_FLAG = in;
  5546  000FFA  C013  F032         	movff	i2set_INTERRUPT_STEPPER_BREAK_FLAG@in,_INTERRUPT_STEPPER_BREAK_FLAG	;volatile
  5547  000FFE  0012               	return		;funcret
  5548  001000                     __end_ofi2_set_INTERRUPT_STEPPER_BREAK_FLAG:
  5549                           	callstack 0
  5550                           
  5551 ;; *************** function i2_reset_interruptAction *****************
  5552 ;; Defined at:
  5553 ;;		line 43 in file "interrupt_additions/interrupt_additions.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;		None
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;		None
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  1    wreg      void 
  5560 ;; Registers used:
  5561 ;;		wreg, status,2
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5571 ;;Total ram usage:        0 bytes
  5572 ;; Hardware stack levels used: 1
  5573 ;; This function calls:
  5574 ;;		Nothing
  5575 ;; This function is called by:
  5576 ;;		_motorLimitSwitchTrigger
  5577 ;;		_cervixLimitSwitchTrigger
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           	psect	text63
  5582  00100C                     __ptext63:
  5583                           	callstack 0
  5584  00100C                     i2_reset_interruptAction:
  5585                           	callstack 23
  5586  00100C                     
  5587                           ;interrupt_additions/interrupt_additions.c: 44:     interruptAction = NULL_ACTION;
  5588  00100C  0E00               	movlw	0
  5589  00100E  6E31               	movwf	_interruptAction^0,c	;volatile
  5590  001010  0012               	return		;funcret
  5591  001012                     __end_ofi2_reset_interruptAction:
  5592                           	callstack 0
  5593                           
  5594 ;; *************** function _resetEncoderTicks *****************
  5595 ;; Defined at:
  5596 ;;		line 39 in file "encoder/encoder.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;		None
  5599 ;; Auto vars:     Size  Location     Type
  5600 ;;		None
  5601 ;; Return value:  Size  Location     Type
  5602 ;;                  1    wreg      void 
  5603 ;; Registers used:
  5604 ;;		wreg, status,2, cstack
  5605 ;; Tracked objects:
  5606 ;;		On entry : 0/0
  5607 ;;		On exit  : 0/0
  5608 ;;		Unchanged: 0/0
  5609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5614 ;;Total ram usage:        0 bytes
  5615 ;; Hardware stack levels used: 1
  5616 ;; Hardware stack levels required when called: 1
  5617 ;; This function calls:
  5618 ;;		i2_EUSART1_Write
  5619 ;; This function is called by:
  5620 ;;		_motorLimitSwitchTrigger
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           	psect	text64
  5625  000F36                     __ptext64:
  5626                           	callstack 0
  5627  000F36                     _resetEncoderTicks:
  5628                           	callstack 22
  5629  000F36                     
  5630                           ;encoder/encoder.c: 40:     encoder_ticks = 0;
  5631  000F36  0E00               	movlw	0
  5632  000F38  6E2F               	movwf	(_encoder_ticks+1)^0,c	;volatile
  5633  000F3A  0E00               	movlw	0
  5634  000F3C  6E2E               	movwf	_encoder_ticks^0,c	;volatile
  5635  000F3E                     
  5636                           ;encoder/encoder.c: 41:     EUSART1_Write(0xCA);
  5637  000F3E  0ECA               	movlw	202
  5638  000F40  EC1A  F007         	call	i2_EUSART1_Write
  5639  000F44  0012               	return		;funcret
  5640  000F46                     __end_of_resetEncoderTicks:
  5641                           	callstack 0
  5642                           
  5643 ;; *************** function i2_EUSART1_Write *****************
  5644 ;; Defined at:
  5645 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;  txData          1    wreg     unsigned char 
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;  txData          1    0[COMRAM] unsigned char 
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  1    wreg      void 
  5652 ;; Registers used:
  5653 ;;		wreg
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5660 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5662 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5663 ;;Total ram usage:        1 bytes
  5664 ;; Hardware stack levels used: 1
  5665 ;; This function calls:
  5666 ;;		Nothing
  5667 ;; This function is called by:
  5668 ;;		_resetEncoderTicks
  5669 ;;		_sendEncoderValueToBGMx8
  5670 ;;		_readUART
  5671 ;;		_motorLimitSwitchTrigger
  5672 ;;		_cervixLimitSwitchTrigger
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           	psect	text65
  5677  000E34                     __ptext65:
  5678                           	callstack 0
  5679  000E34                     i2_EUSART1_Write:
  5680                           	callstack 25
  5681                           
  5682                           ;incstack = 0
  5683                           ;i2EUSART1_Write@txData stored from wreg
  5684  000E34  6E13               	movwf	i2EUSART1_Write@txData^0,c
  5685  000E36                     i2l334:
  5686                           
  5687                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR3bits.TX1IF)
  5688  000E36  010E               	movlb	14	; () banked
  5689  000E38  A9CD               	btfss	205,4,b	;volatile
  5690  000E3A  EF21  F007         	goto	i2u64_41
  5691  000E3E  EF23  F007         	goto	i2u64_40
  5692  000E42                     i2u64_41:
  5693  000E42  EF1B  F007         	goto	i2l334
  5694  000E46                     i2u64_40:
  5695  000E46                     
  5696                           ; BSR set to: 14
  5697                           ;mcc_generated_files/eusart1.c: 138:     TX1REG = txData;
  5698  000E46  C013  FF9A         	movff	i2EUSART1_Write@txData,3994	;volatile
  5699  000E4A                     
  5700                           ; BSR set to: 14
  5701  000E4A  0012               	return		;funcret
  5702  000E4C                     __end_ofi2_EUSART1_Write:
  5703                           	callstack 0
  5704                           
  5705 ;; *************** function _INT0_DefaultInterruptHandler *****************
  5706 ;; Defined at:
  5707 ;;		line 61 in file "mcc_generated_files/ext_int.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;		None
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;		None
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  1    wreg      void 
  5714 ;; Registers used:
  5715 ;;		None
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5725 ;;Total ram usage:        0 bytes
  5726 ;; Hardware stack levels used: 1
  5727 ;; This function calls:
  5728 ;;		Nothing
  5729 ;; This function is called by:
  5730 ;;		_EXT_INT_Initialize
  5731 ;;		_INT0_CallBack
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           	psect	text66
  5736  001022                     __ptext66:
  5737                           	callstack 0
  5738  001022                     _INT0_DefaultInterruptHandler:
  5739                           	callstack 24
  5740  001022  0012               	return		;funcret
  5741  001024                     __end_of_INT0_DefaultInterruptHandler:
  5742                           	callstack 0
  5743                           
  5744 ;; *************** function _EUSART1_is_rx_ready *****************
  5745 ;; Defined at:
  5746 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;		None
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;		None
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  1    wreg      _Bool 
  5753 ;; Registers used:
  5754 ;;		wreg
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5764 ;;Total ram usage:        0 bytes
  5765 ;; Hardware stack levels used: 1
  5766 ;; This function calls:
  5767 ;;		Nothing
  5768 ;; This function is called by:
  5769 ;;		_INTERRUPT_InterruptManager
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773                           	psect	text67
  5774  000EFC                     __ptext67:
  5775                           	callstack 0
  5776  000EFC                     _EUSART1_is_rx_ready:
  5777                           	callstack 26
  5778  000EFC                     
  5779                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR3bits.RC1IF);
  5780  000EFC  010E               	movlb	14	; () banked
  5781  000EFE  BBCD               	btfsc	205,5,b	;volatile
  5782  000F00  EF84  F007         	goto	i2u48_41
  5783  000F04  EF87  F007         	goto	i2u48_40
  5784  000F08                     i2u48_41:
  5785  000F08  0E01               	movlw	1
  5786  000F0A  EF88  F007         	goto	i2u48_46
  5787  000F0E                     i2u48_40:
  5788  000F0E  0E00               	movlw	0
  5789  000F10                     i2u48_46:
  5790  000F10                     
  5791                           ; BSR set to: 14
  5792  000F10  0012               	return		;funcret
  5793  000F12                     __end_of_EUSART1_is_rx_ready:
  5794                           	callstack 0
  5795  0000                     
  5796                           	psect	text68
  5797  000000                     __ptext68:
  5798                           	callstack 0
  5799  000000                     
  5800                           	psect	rparam
  5801  0000                     
  5802                           	psect	temp
  5803  000034                     btemp:
  5804                           	callstack 0
  5805  000034                     	ds	1
  5806  0000                     int$flags	set	btemp
  5807  0000                     wtemp8	set	btemp+1
  5808  0000                     ttemp5	set	btemp+1
  5809  0000                     ttemp6	set	btemp+4
  5810  0000                     ttemp7	set	btemp+8
  5811                           
  5812                           	psect	idloc
  5813                           
  5814                           ;Config register IDLOC0 @ 0x200000
  5815                           ;	unspecified, using default values
  5816  200000                     	org	2097152
  5817  200000  0FFF               	dw	4095
  5818                           
  5819                           ;Config register IDLOC1 @ 0x200002
  5820                           ;	unspecified, using default values
  5821  200002                     	org	2097154
  5822  200002  0FFF               	dw	4095
  5823                           
  5824                           ;Config register IDLOC2 @ 0x200004
  5825                           ;	unspecified, using default values
  5826  200004                     	org	2097156
  5827  200004  0FFF               	dw	4095
  5828                           
  5829                           ;Config register IDLOC3 @ 0x200006
  5830                           ;	unspecified, using default values
  5831  200006                     	org	2097158
  5832  200006  0FFF               	dw	4095
  5833                           
  5834                           ;Config register IDLOC4 @ 0x200008
  5835                           ;	unspecified, using default values
  5836  200008                     	org	2097160
  5837  200008  0FFF               	dw	4095
  5838                           
  5839                           ;Config register IDLOC5 @ 0x20000A
  5840                           ;	unspecified, using default values
  5841  20000A                     	org	2097162
  5842  20000A  0FFF               	dw	4095
  5843                           
  5844                           ;Config register IDLOC6 @ 0x20000C
  5845                           ;	unspecified, using default values
  5846  20000C                     	org	2097164
  5847  20000C  0FFF               	dw	4095
  5848                           
  5849                           ;Config register IDLOC7 @ 0x20000E
  5850                           ;	unspecified, using default values
  5851  20000E                     	org	2097166
  5852  20000E  0FFF               	dw	4095
  5853                           
  5854                           	psect	config
  5855                           
  5856                           ;Config register CONFIG1L @ 0x300000
  5857                           ;	External Oscillator mode Selection bits
  5858                           ;	FEXTOSC = OFF, Oscillator not enabled
  5859                           ;	Power-up default value for COSC bits
  5860                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  5861  300000                     	org	3145728
  5862  300000  EC                 	db	236
  5863                           
  5864                           ;Config register CONFIG1H @ 0x300001
  5865                           ;	Clock Out Enable bit
  5866                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  5867                           ;	Clock Switch Enable bit
  5868                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5869                           ;	Fail-Safe Clock Monitor Enable bit
  5870                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  5871  300001                     	org	3145729
  5872  300001  FF                 	db	255
  5873                           
  5874                           ;Config register CONFIG2L @ 0x300002
  5875                           ;	Master Clear Enable bit
  5876                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  5877                           ;	Power-up Timer Enable bit
  5878                           ;	PWRTE = OFF, Power up timer disabled
  5879                           ;	Low-power BOR enable bit
  5880                           ;	LPBOREN = OFF, ULPBOR disabled
  5881                           ;	Brown-out Reset Enable bits
  5882                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  5883  300002                     	org	3145730
  5884  300002  FF                 	db	255
  5885                           
  5886                           ;Config register CONFIG2H @ 0x300003
  5887                           ;	Brown Out Reset Voltage selection bits
  5888                           ;	BORV = 0x3, unprogrammed default
  5889                           ;	ZCD Disable bit
  5890                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  5891                           ;	PPSLOCK bit One-Way Set Enable bit
  5892                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  5893                           ;	Stack Full/Underflow Reset Enable bit
  5894                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5895                           ;	Debugger Enable bit
  5896                           ;	DEBUG = OFF, Background debugger disabled
  5897                           ;	Extended Instruction Set Enable bit
  5898                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  5899  300003                     	org	3145731
  5900  300003  FF                 	db	255
  5901                           
  5902                           ;Config register CONFIG3L @ 0x300004
  5903                           ;	WDT Period Select bits
  5904                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5905                           ;	WDT operating mode
  5906                           ;	WDTE = OFF, WDT Disabled
  5907  300004                     	org	3145732
  5908  300004  9F                 	db	159
  5909                           
  5910                           ;Config register CONFIG3H @ 0x300005
  5911                           ;	WDT Window Select bits
  5912                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  5913                           ;	WDT input clock selector
  5914                           ;	WDTCCS = SC, Software Control
  5915  300005                     	org	3145733
  5916  300005  FF                 	db	255
  5917                           
  5918                           ;Config register CONFIG4L @ 0x300006
  5919                           ;	Write Protection Block 0
  5920                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5921                           ;	Write Protection Block 1
  5922                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5923                           ;	Write Protection Block 2
  5924                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5925                           ;	Write Protection Block 3
  5926                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5927                           ;	Write Protection Block 3
  5928                           ;	WRT4 = 0x1, unprogrammed default
  5929                           ;	Write Protection Block 3
  5930                           ;	WRT5 = 0x1, unprogrammed default
  5931                           ;	Write Protection Block 3
  5932                           ;	WRT6 = 0x1, unprogrammed default
  5933                           ;	Write Protection Block 3
  5934                           ;	WRT7 = 0x1, unprogrammed default
  5935  300006                     	org	3145734
  5936  300006  FF                 	db	255
  5937                           
  5938                           ;Config register CONFIG4H @ 0x300007
  5939                           ;	Configuration Register Write Protection bit
  5940                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  5941                           ;	Boot Block Write Protection bit
  5942                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5943                           ;	Data EEPROM Write Protection bit
  5944                           ;	WRTD = OFF, Data EEPROM not write-protected
  5945                           ;	Scanner Enable bit
  5946                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  5947                           ;	Low Voltage Programming Enable bit
  5948                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  5949  300007                     	org	3145735
  5950  300007  DF                 	db	223
  5951                           
  5952                           ;Config register CONFIG5L @ 0x300008
  5953                           ;	UserNVM Program Memory Code Protection bit
  5954                           ;	CP = OFF, UserNVM code protection disabled
  5955                           ;	DataNVM Memory Code Protection bit
  5956                           ;	CPD = OFF, DataNVM code protection disabled
  5957  300008                     	org	3145736
  5958  300008  FF                 	db	255
  5959                           
  5960                           ;Config register CONFIG5H @ 0x300009
  5961                           ;	unspecified, using default values
  5962  300009                     	org	3145737
  5963  300009  FF                 	db	255
  5964                           
  5965                           ;Config register CONFIG6L @ 0x30000A
  5966                           ;	Table Read Protection Block 0
  5967                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5968                           ;	Table Read Protection Block 1
  5969                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5970                           ;	Table Read Protection Block 2
  5971                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5972                           ;	Table Read Protection Block 3
  5973                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5974                           ;	Table Read Protection Block 4
  5975                           ;	EBTR4 = 0x1, unprogrammed default
  5976                           ;	Table Read Protection Block 5
  5977                           ;	EBTR5 = 0x1, unprogrammed default
  5978                           ;	Table Read Protection Block 6
  5979                           ;	EBTR6 = 0x1, unprogrammed default
  5980                           ;	Table Read Protection Block 7
  5981                           ;	EBTR7 = 0x1, unprogrammed default
  5982  30000A                     	org	3145738
  5983  30000A  FF                 	db	255
  5984                           
  5985                           ;Config register CONFIG6H @ 0x30000B
  5986                           ;	Boot Block Table Read Protection bit
  5987                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5988  30000B                     	org	3145739
  5989  30000B  FF                 	db	255
  5990                           tosu	equ	0xFFF
  5991                           tosh	equ	0xFFE
  5992                           tosl	equ	0xFFD
  5993                           stkptr	equ	0xFFC
  5994                           pclatu	equ	0xFFB
  5995                           pclath	equ	0xFFA
  5996                           pcl	equ	0xFF9
  5997                           tblptru	equ	0xFF8
  5998                           tblptrh	equ	0xFF7
  5999                           tblptrl	equ	0xFF6
  6000                           tablat	equ	0xFF5
  6001                           prodh	equ	0xFF4
  6002                           prodl	equ	0xFF3
  6003                           indf0	equ	0xFEF
  6004                           postinc0	equ	0xFEE
  6005                           postdec0	equ	0xFED
  6006                           preinc0	equ	0xFEC
  6007                           plusw0	equ	0xFEB
  6008                           fsr0h	equ	0xFEA
  6009                           fsr0l	equ	0xFE9
  6010                           wreg	equ	0xFE8
  6011                           indf1	equ	0xFE7
  6012                           postinc1	equ	0xFE6
  6013                           postdec1	equ	0xFE5
  6014                           preinc1	equ	0xFE4
  6015                           plusw1	equ	0xFE3
  6016                           fsr1h	equ	0xFE2
  6017                           fsr1l	equ	0xFE1
  6018                           bsr	equ	0xFE0
  6019                           indf2	equ	0xFDF
  6020                           postinc2	equ	0xFDE
  6021                           postdec2	equ	0xFDD
  6022                           preinc2	equ	0xFDC
  6023                           plusw2	equ	0xFDB
  6024                           fsr2h	equ	0xFDA
  6025                           fsr2l	equ	0xFD9
  6026                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         15
    Persistent  18
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     18      51
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    uart_write	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMRAM

    _update_PIC18F_software_version_number->_send_number
    _send_number->_EUSART1_Write
    _moveUntilZ->_setStepSize
    _initPumps->_setAmnioticPumpPWM
    _initPumps->_setBloodPumpPWM
    _setBloodPumpPWM->_PWM3_LoadDutyValue
    _setAmnioticPumpPWM->_PWM4_LoadDutyValue
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_readUART
    _readUART->i2_setAmnioticPumpPWM
    _readUART->i2_setBloodPumpPWM
    i2_setBloodPumpPWM->i2_PWM3_LoadDutyValue
    i2_setAmnioticPumpPWM->i2_PWM4_LoadDutyValue
    _sendEncoderValueToBGMx8->i2_EUSART1_Write
    _cervixLimitSwitchTrigger->i2_EUSART1_Write
    _cervixLimitSwitchTrigger->i2_set_INTERRUPT_STEPPER_BREAK_FLAG
    _motorLimitSwitchTrigger->i2_EUSART1_Write
    _motorLimitSwitchTrigger->i2_set_INTERRUPT_STEPPER_BREAK_FLAG
    _resetEncoderTicks->i2_EUSART1_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3207
                                             16 COMRAM     2     2      0
                  _SYSTEM_Initialize
                _get_interruptAction
                          _initPumps
                         _moveUntilZ
              _reset_interruptAction
   _set_INTERRUPT_STEPPER_BREAK_FLAG
                       _stepperSleep
_update_PIC18F_software_version_numb
 ---------------------------------------------------------------------------------
 (1) _update_PIC18F_software_version_number                3     3      0      30
                                             12 COMRAM     3     3      0
                        _send_number
 ---------------------------------------------------------------------------------
 (2) _send_number                                          1     1      0      15
                                             11 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      15
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _set_INTERRUPT_STEPPER_BREAK_FLAG                     1     1      0      15
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _reset_interruptAction                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _moveUntilZ                                           2     1      1     849
                                             13 COMRAM     2     1      1
   _get_INTERRUPT_STEPPER_BREAK_FLAG
                       _setDirection
                        _setStepSize
                       _stepperSleep
 ---------------------------------------------------------------------------------
 (1) _stepperSleep                                         1     1      0      15
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setStepSize                                          3     3      0      15
                                             10 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _setDirection                                         1     1      0      15
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _get_INTERRUPT_STEPPER_BREAK_FLAG                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPumps                                            0     0      0    1710
                    _TMR2_StartTimer
                      _setAmnioticOn
                 _setAmnioticPumpPWM
                         _setBloodOn
                    _setBloodPumpPWM
 ---------------------------------------------------------------------------------
 (2) _setBloodPumpPWM                                      2     0      2     840
                                             14 COMRAM     2     0      2
                 _PWM3_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM3_LoadDutyValue                                   4     2      2     120
                                             10 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _setBloodOn                                           1     1      0      15
                                             10 COMRAM     1     1      0
                         _resetPumps
 ---------------------------------------------------------------------------------
 (2) _setAmnioticPumpPWM                                   2     0      2     840
                                             14 COMRAM     2     0      2
                 _PWM4_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM4_LoadDutyValue                                   4     2      2     120
                                             10 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _setAmnioticOn                                        1     1      0      15
                                             10 COMRAM     1     1      0
                         _resetPumps
 ---------------------------------------------------------------------------------
 (3) _resetPumps                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (3) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_interruptAction                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     588
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
             _interruptAdditionsInit
 ---------------------------------------------------------------------------------
 (3) _interruptAdditionsInit                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     294
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      98
                                             10 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      98
                                             10 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      98
                                             10 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       3     0      3      98
                                             10 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       3     0      3      98
                                             10 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              3     0      3      98
                                             10 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           2     2      0    1050
                                              8 COMRAM     2     2      0
                _EUSART1_is_rx_ready
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                           _readUART
 ---------------------------------------------------------------------------------
 (5) _readUART                                             2     2      0     918
                                              6 COMRAM     2     2      0
                       _EUSART1_Read
                    _stepperIsAsleep
                    i2_EUSART1_Write
                    i2_setAmnioticOn
               i2_setAmnioticPumpPWM
                       i2_setBloodOn
                  i2_setBloodPumpPWM
 ---------------------------------------------------------------------------------
 (6) i2_setBloodPumpPWM                                    2     0      2     426
                                              4 COMRAM     2     0      2
               i2_PWM3_LoadDutyValue
 ---------------------------------------------------------------------------------
 (7) i2_PWM3_LoadDutyValue                                 4     2      2      70
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) i2_setBloodOn                                         1     1      0      22
                                              0 COMRAM     1     1      0
                       i2_resetPumps
 ---------------------------------------------------------------------------------
 (6) i2_setAmnioticPumpPWM                                 2     0      2     426
                                              4 COMRAM     2     0      2
               i2_PWM4_LoadDutyValue
 ---------------------------------------------------------------------------------
 (7) i2_PWM4_LoadDutyValue                                 4     2      2      70
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) i2_setAmnioticOn                                      1     1      0      22
                                              0 COMRAM     1     1      0
                       i2_resetPumps
 ---------------------------------------------------------------------------------
 (7) i2_resetPumps                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             0     0      0      22
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT2_CallBack                                        0     0      0      22
                   Absolute function *
       _INT2_DefaultInterruptHandler *
                     _encoderTrigger
 ---------------------------------------------------------------------------------
 (7) _encoderTrigger                                       0     0      0      22
            _sendEncoderValueToBGMx8
                    _stepperIsAsleep
 ---------------------------------------------------------------------------------
 (6) _stepperIsAsleep                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _sendEncoderValueToBGMx8                              0     0      0      22
                    i2_EUSART1_Write
 ---------------------------------------------------------------------------------
 (7) _INT2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0      44
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT1_CallBack                                        0     0      0      44
                   Absolute function *
       _INT1_DefaultInterruptHandler *
           _cervixLimitSwitchTrigger
 ---------------------------------------------------------------------------------
 (7) _cervixLimitSwitchTrigger                             0     0      0      44
                    i2_EUSART1_Write
            i2_reset_interruptAction
 i2_set_INTERRUPT_STEPPER_BREAK_FLAG
 ---------------------------------------------------------------------------------
 (7) _INT1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0      66
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT0_CallBack                                        0     0      0      66
                   Absolute function *
       _INT0_DefaultInterruptHandler *
            _motorLimitSwitchTrigger
 ---------------------------------------------------------------------------------
 (7) _motorLimitSwitchTrigger                              0     0      0      66
                  _resetEncoderTicks
                    i2_EUSART1_Write
            i2_reset_interruptAction
 i2_set_INTERRUPT_STEPPER_BREAK_FLAG
 ---------------------------------------------------------------------------------
 (8) i2_set_INTERRUPT_STEPPER_BREAK_FLAG                   1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i2_reset_interruptAction                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _resetEncoderTicks                                    0     0      0      22
                    i2_EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) i2_EUSART1_Write                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _INT0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
       _interruptAdditionsInit
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR2_Initialize
   _get_interruptAction
   _initPumps
     _TMR2_StartTimer
       _TMR2_Start
     _setAmnioticOn
       _resetPumps
     _setAmnioticPumpPWM
       _PWM4_LoadDutyValue
     _setBloodOn
       _resetPumps
     _setBloodPumpPWM
       _PWM3_LoadDutyValue
   _moveUntilZ
     _get_INTERRUPT_STEPPER_BREAK_FLAG
     _setDirection
     _setStepSize
     _stepperSleep
   _reset_interruptAction
   _set_INTERRUPT_STEPPER_BREAK_FLAG
   _stepperSleep
   _update_PIC18F_software_version_number
     _send_number
       _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART1_is_rx_ready
   _INT0_ISR
     _INT0_CallBack
       Absolute function(Fake) *
       _INT0_DefaultInterruptHandler *
       _motorLimitSwitchTrigger *
         _resetEncoderTicks
           i2_EUSART1_Write
         i2_EUSART1_Write
         i2_reset_interruptAction
         i2_set_INTERRUPT_STEPPER_BREAK_FLAG
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _INT1_DefaultInterruptHandler *
       _cervixLimitSwitchTrigger *
         i2_EUSART1_Write
         i2_reset_interruptAction
         i2_set_INTERRUPT_STEPPER_BREAK_FLAG
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _INT2_DefaultInterruptHandler *
       _encoderTrigger *
         _sendEncoderValueToBGMx8
           i2_EUSART1_Write
         _stepperIsAsleep
   _readUART
     _EUSART1_Read
     _stepperIsAsleep
     i2_EUSART1_Write
     i2_setAmnioticOn
       i2_resetPumps
     i2_setAmnioticPumpPWM
       i2_PWM4_LoadDutyValue
     i2_setBloodOn
       i2_resetPumps
     i2_setBloodPumpPWM
       i2_PWM3_LoadDutyValue

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK14           88      0       0      32        0.0%
BANK14              88      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     12      33       1       54.3%
BITBIGSFRlhhhh      54      0       0      39        0.0%
BITBIGSFRhhhlhh     31      0       0      35        0.0%
BITBIGSFRlllll      14      0       0      56        0.0%
BITBIGSFRllllhh     11      0       0      55        0.0%
BITBIGSFRhhhh        D      0       0      34        0.0%
BITBIGSFRlhhlll      C      0       0      45        0.0%
BITBIGSFRlllh        C      0       0      54        0.0%
BITBIGSFRhhhlhh      C      0       0      36        0.0%
BITBIGSFRlhhlll      B      0       0      44        0.0%
BITBIGSFRhhllll      B      0       0      38        0.0%
BITBIGSFRlhhlll      9      0       0      43        0.0%
BITBIGSFRlhhlll      9      0       0      50        0.0%
BITBIGSFRhhhlhl      8      0       0      37        0.0%
BITBIGSFRlhll        4      0       0      52        0.0%
BITBIGSFRlhhlll      3      0       0      46        0.0%
BITBIGSFRlhhlll      3      0       0      42        0.0%
BITBIGSFRlhhllh      3      0       0      41        0.0%
BITBIGSFRlhhhl       3      0       0      40        0.0%
BITBIGSFRlhhlll      2      0       0      47        0.0%
BITBIGSFRllh         2      0       0      53        0.0%
BITBIGSFRlhlh        2      0       0      51        0.0%
BITBIGSFRlhhlll      1      0       0      48        0.0%
BITBIGSFRlhhlll      1      0       0      49        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      33      57        0.0%
DATA                 0      0      33       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue Nov 05 12:50:04 2024

                          __end_ofi2_setBloodOn 0FBE                              setBloodPumpPWM@pwm 0021  
                                            u40 0DFE                                              u41 0DFA  
                                            u80 0C66                                              u81 0C62  
                                            u90 0C7A                                              u91 0C76  
                       _motorLimitSwitchTrigger 0EE6                                             l121 1014  
                                           l130 1004                                             l124 0FEE  
                                           l310 0A7C                                             l118 0F22  
                                           l127 101C                                             l241 0C52  
                                           l402 0F60                                             l251 0C7A  
                                           l243 0C54                                             l236 0C4E  
                                           l421 0A32                                             l253 0C7C  
                                           l261 0FB0                                             l246 0C66  
                                           l334 0DEE                                             l415 0F52  
                                           l255 0C7E                                             l239 0C50  
                                           l352 0F7C                                             l600 0D96  
                                           l248 0C68                                             l264 0E76  
                                           l337 0E02                                             l442 0FF6  
                                           l258 0FA4                                             l355 0F98  
                                           l267 0E8C                                             l612 100A  
                                           l349 0F8A                                             l480 0EA2  
                                           l609 1018                                             l801 092A  
                                           l570 090C                                             l466 0EB8  
                                           l810 0936                                             l483 0B18  
                                           l803 092C                                             l820 0946  
                                           l389 0F6E                                             l469 0AE4  
                                           l813 093C                                             l806 0932  
                                           l822 098E                                             l831 0DCE  
                                           l815 093E                                             l743 0CDC  
                                           l719 07FC                                             l808 0934  
                                           l817 0940                                             l826 0DC6  
                                           l683 0D56                                             l763 0AA8  
                                           l739 0D06                                             l772 0DB0  
                                           l829 0DCC                                             l765 0AB0  
                                           l686 0E1A                                             l774 0DB2  
                                           l792 091E                                             l784 0914  
                                           l689 0DEA                                             l769 0DAA  
                                           l794 0920                                             l786 0916  
                                           l796 0922                                             l788 0918  
                                           l799 0928                                             u240 0DAA  
                                           u241 0DA6                                             u250 0DC6  
                                           u251 0DC2                                             _PR2 000FBC  
                               _setBloodPumpPWM 0E62                                             u705 0B0A  
                                           u695 0AD6                      ??_INT0_SetInterruptHandler 0020  
                               _TMR2_Initialize 0D7A                                 _PWM4_Initialize 0E8E  
                                           tosl 000FFD                                             wreg 000FE8  
                          __end_ofi2_resetPumps 0CB0                                   _INT0_CallBack 0BEA  
                         __end_of_setAmnioticOn 0FB2                                   _INT1_CallBack 0BB6  
                       __end_ofi2_setAmnioticOn 0FCA                                            l2021 0CE4  
                                          l2023 0CE8                                            l2025 0CFE  
                                          l2017 0CDE                                            l2027 0D04  
                                          l2019 0CE0                                            l2411 09E8  
                                          l2421 0A16                                            l2413 09EE  
                                          l1701 08E2                                            l1621 0FA0  
                                          l2423 0A1A                                            l2415 09FE  
                                          l1711 0E04                                            l1703 08E4  
                                          l1631 1006                                            l1615 0FA8  
                                          l2351 0AB2                                            l2361 0F62  
                                          l2425 0A1C                                            l2417 0A02  
                                          l1705 0D7A                                            l1617 0FAC  
                                          l2353 0AE6                                            l1721 0DB6  
                                          l1713 0D9A                                            l1537 0DEE  
                                          l2355 0F7E                                            l2363 0F54  
                                          l2427 0A2E                                            l2419 0A04  
                                          l1555 0F12                                            l1707 0D8E  
                                          l1571 0C6A                                            l1619 0F9C  
                                          l1723 0910                                            l1539 0DFE  
                                          l1715 0CB0                                            l2357 0F70  
                                          l2365 0F46                                            l1557 0F1E  
                                          l1709 0DD0                                            l2381 0E84  
                                          l1717 0CB6                                            l2359 0F8C  
                                          l2391 0A78                                            l2383 0A34  
                                          l2375 0E62                                            l1751 0FEA  
                                          l1719 0CC6                                            l2385 0A48  
                                          l1681 0FF2                                            l1753 101A  
                                          l1569 0C56                                            l2377 0E6E  
                                          l1729 094C                                            l2721 06DC  
                                          l2387 0A58                                            l1691 08D4  
                                          l1683 0EA4                                            l2379 0E78  
                                          l2731 0706                                            l2723 06E2  
                                          l2389 0A68                                            l1693 08D6  
                                          l1685 0E8E                                            l1589 1016  
                                          l2661 0C2A                                            l1757 1000  
                                          l2741 0728                                            l2733 070C  
                                          l2725 06E8                                            l2717 06D6  
                                          l1679 0FF0                                            l1695 08D8  
                                          l1687 086C                                            l2663 0C36  
                                          l2655 0C1E                                            l1599 1012  
                                          l2751 0754                                            l2743 072E  
                                          l2735 0710                                            l2727 0700  
                                          l2719 06DA                                            l1697 08DE  
                                          l1689 08D2                                            l2681 0D32  
                                          l2665 0C42                                            l2657 0C22  
                                          l2761 0776                                            l2753 0758  
                                          l2745 073C                                            l2737 0716  
                                          l2729 0704                                            l1699 08E0  
                                          l2683 0D4E                                            l2667 0C48  
                                          l2659 0C26                                            l2691 0A8C  
                                          l2771 07A0                                            l2763 0784  
                                          l2755 075E                                            l2747 0740  
                                          l2739 0724                                            l2685 0D52  
                                          l2693 0A92                                            l2861 0812  
                                          l2781 07CC                                            l2773 07A6  
                                          l2765 0788                                            l2757 076C  
                                          l2749 0746                                            l2863 0960  
                                          l2695 0A94                                            l2687 0A80  
                                          l2791 07EE                                            l2783 07D0  
                                          l2775 07B4                                            l2767 078E  
                                          l2759 0770                                            l2697 0AAA  
                                          l2689 0A86                                            l2785 07D6  
                                          l2777 07B8                                            l2769 079C  
                                          l2787 07E4                                            l2779 07BE  
                                          l2795 07FC                                            l2789 07E8  
                                          u1030 0AA8                                            u1031 0AA4  
                                          u1117 06F2                                            u1127 0CF2  
                                          u1137 0CBC                                            u1147 0CD2  
                                          _LATA 000F83                                            _LATB 000F84  
                                          _LATC 000F85                                            _LATD 000F86  
                                          _LATE 000F87                                            _T2PR 000FBC  
                                          _PMD0 000EE1                                            _PMD1 000EE2  
                                          _PMD2 000EE3                                            _PMD3 000EE4  
                                          _PMD4 000EE5                                            _PMD5 000EE6  
                                          i2l20 09E6                                            i2l13 0F44  
                                          i2l32 0D78                                            i2l19 09A8  
                                          _TMR2 000FBB                                            _WPUA 000F10  
                                          _WPUB 000F18                                            _WPUC 000F20  
                                          _WPUD 000F25                                            _WPUE 000F2D  
                                 _INT2_CallBack 0B82                                   _EUSART1_Write 0DEC  
                  __end_ofi2_PWM3_LoadDutyValue 0B4E                                            _main 06D6  
                                 ?_EUSART1_Read 0013                                            btemp 0034  
                     ?_INT2_SetInterruptHandler 001D                                            start 00A8  
                                  ___param_bank 000000                                    _stepperSleep 0D98  
                              __end_of_INT0_ISR 0FE8                                __end_of_INT1_ISR 0FDE  
                              __end_of_INT2_ISR 0FD4                   __end_of_OSCILLATOR_Initialize 0E1C  
                                         ?_main 0013              set_INTERRUPT_STEPPER_BREAK_FLAG@in 001D  
          i2set_INTERRUPT_STEPPER_BREAK_FLAG@in 0013                                           _T2CON 000FBD  
                                         _T2HLT 000FBE                                           _T2TMR 000FBB  
                                         _T2RST 000FC0                                           i2l130 1010  
                                         i2l210 0EFA                                           i2l124 0FFE  
                                         i2l213 0F34                                           i2l141 0102  
                                         i2l207 06D4                                           i2l136 00B6  
                                         i2l241 0C82                                           i2l331 0D30  
                                         i2l251 0CAA                                           i2l243 0C84  
                                         i2l412 0BB4                                           i2l405 1020  
                                         i2l253 0CAC                                           i2l261 0FC8  
                                         i2l318 0F10                                           i2l334 0E36  
                                         i2l246 0C96                                           i2l327 0D08  
                                         i2l255 0CAE                                           i2l239 0C80  
                                         i2l408 0FD2                                           i2l248 0C98  
                                         i2l264 0ECE                                           i2l337 0E4A  
                                         i2l418 101E                                           i2l258 0FBC  
                                         i2l450 009C                                           i2l267 0EE4  
                                         i2l382 0FE6                                           i2l455 009C  
                                         i2l447 0038                                           i2l392 1022  
                                         i2l449 005C                                           i2l386 0C1C  
                                         i2l395 0FDC                                           i2l483 0B80  
                                         i2l469 0B4C                                           i2l399 0BE8  
                                         i2l778 0E32                                           _OSCEN 000EDC  
                            _PWM4_LoadDutyValue 0AE6                                           _TRISA 000F88  
                                         _TRISB 000F89                                  ?_INT0_CallBack 0013  
                                         _TRISC 000F8A                                           _TRISD 000F8B  
                                         _TRISE 000F8C                                           _Pumps 0025  
                                ?_INT1_CallBack 0013                                     ?_TMR2_Start 0013  
                ??_INT1_DefaultInterruptHandler 0013                             ?_PWM4_LoadDutyValue 001D  
                                ?_INT2_CallBack 0013                        _INT1_SetInterruptHandler 0F54  
                                ?_EUSART1_Write 0013                         __end_of_PWM3_Initialize 0EBA  
                                         pclath 000FFA                                           pclatu 000FFB  
                                stepperSleep@in 001D                                  ??_EUSART1_Read 0013  
                                         ttemp5 0035                                           ttemp6 0038  
                                         ttemp7 003C                                           status 000FD8  
                                         wtemp8 0035                             _get_interruptAction 101A  
                               _TMR2_StartTimer 1006              _EUSART1_DefaultFramingErrorHandler 000000  
                               setAmnioticOn@in 001D                        _cervixLimitSwitchTrigger 0F24  
                               __initialization 0E4C                      __end_of_EUSART1_Initialize 0A7E  
                                  __end_of_main 086C                   i2PWM4_LoadDutyValue@dutyValue 0013  
                       __end_of_setBloodPumpPWM 0E78                            ??_PWM4_LoadDutyValue 001F  
                     ??_motorLimitSwitchTrigger 0014                         __end_of_PWM4_Initialize 0EA4  
                       __end_of_TMR2_Initialize 0D98                     ?_INTERRUPT_InterruptManager 0013  
                                        ??_main 0023                            ?_get_interruptAction 0013  
                                 __activetblptr 000003                                          _ANSELA 000F11  
                                        _ANSELB 000F19                                          _ANSELC 000F21  
                                        _ANSELD 000F26                                          _ANSELE 000F2E  
                              ?i2_setAmnioticOn 0013                                    ?_send_number 0013  
                                        _RC1REG 000F99                                          _RA3PPS 000EEA  
                                        _RC0PPS 000EF7                                          _RC1STA 000F9D  
                                        _ODCONA 000F0F                                          _ODCONB 000F17  
                                        _RD4PPS 000F03                                          _ODCONC 000F1F  
                                        _ODCOND 000F24                                          _ODCONE 000F2C  
                                        i2l2311 0E36                                          i2l2313 0E46  
                                        i2l2401 0BBA                                          i2l2321 0D6A  
                                        i2l2315 0F36                                          i2l2403 0BCE  
                                        i2l2323 0D70                                          i2l1523 0E30  
                                        i2l1515 0E1C                                          i2l2331 09B6  
                                        i2l1611 0D2E                                          i2l1603 0D08  
                                        i2l2317 0F3E                                          i2l2325 0FFA  
                                        i2l2341 0EE6                                          i2l1517 0E2A  
                                        i2l2333 09BE                                          i2l2405 0B82  
                                        i2l1605 0D18                                          i2l2501 01D2  
                                        i2l1535 100C                                          i2l2343 0EEC  
                                        i2l2319 0D58                                          i2l2335 09D0  
                                        i2l2327 0990                                          i2l2407 0B86  
                                        i2l1607 0D1C                                          i2l2431 0FB8  
                                        i2l2511 0206                                          i2l2503 01E6  
                                        i2l2345 0EF0                                          i2l2337 09DA  
                                        i2l2409 0B9A                                          i2l1609 0D2A  
                                        i2l2433 0FC0                                          i2l2441 0ED0  
                                        i2l2601 03B4                                          i2l2521 0236  
                                        i2l2513 0210                                          i2l2505 01F0  
                                        i2l2347 0F24                                          i2l2339 09E2  
                                        i2l2435 0FC4                                          i2l2443 0EDC  
                                        i2l2371 0B1A                                          i2l2611 0416  
                                        i2l2603 03BE                                          i2l2531 026A  
                                        i2l2523 0244                                          i2l2515 0214  
                                        i2l2507 01F4                                          i2l2451 00E0  
                                        i2l2349 0F30                                          i2l2373 0B4E  
                                        i2l2429 0FB4                                          i2l2437 0EBA  
                                        i2l2621 0484                                          i2l2613 042C  
                                        i2l2605 03D4                                          i2l2541 0294  
                                        i2l2533 0274                                          i2l2525 0248  
                                        i2l2517 0228                                          i2l2509 0202  
                                        i2l2461 0120                                          i2l2453 00E4  
                                        i2l2445 00AC                                          i2l2701 0022  
                                        i2l2367 0C86                                          i2l2439 0EC6  
                                        i2l2631 04F2                                          i2l2623 049A  
                                        i2l2615 0442                                          i2l2607 03EA  
                                        i2l2551 02C8                                          i2l2543 0298  
                                        i2l2535 0278                                          i2l2527 0252  
                                        i2l2519 0232                                          i2l2471 014A  
                                        i2l2463 012A                                          i2l2455 00F8  
                                        i2l2447 00B8                                          i2l2711 0078  
                                        i2l2703 0030                                          i2l2393 0BEA  
                                        i2l2369 0C9A                                          i2l2641 0560  
                                        i2l2633 0508                                          i2l2625 04B0  
                                        i2l2617 0458                                          i2l2609 0400  
                                        i2l2561 02F8                                          i2l2553 02CC  
                                        i2l2545 02AC                                          i2l2537 0286  
                                        i2l2529 0256                                          i2l2481 017E  
                                        i2l2473 014E                                          i2l2465 012E  
                                        i2l2457 0104                                          i2l2449 00DC  
                                        i2l2713 0080                                          i2l2705 0046  
                                        i2l2395 0BEE                                          i2l2643 0576  
                                        i2l2635 051E                                          i2l2627 04C6  
                                        i2l2619 046E                                          i2l2571 031C  
                                        i2l2563 02FC                                          i2l2555 02D6  
                                        i2l2547 02B6                                          i2l2539 028A  
                                        i2l2491 01AE                                          i2l2483 0182  
                                        i2l2475 0162                                          i2l2467 013C  
                                        i2l2459 010C                                          i2l2715 0094  
                                        i2l2707 0054                                          i2l2397 0C02  
                                        i2l2645 058C                                          i2l2637 0534  
                                        i2l2629 04DC                                          i2l2581 0350  
                                        i2l2573 0330                                          i2l2565 030A  
                                        i2l2557 02DA                                          i2l2549 02BA  
                                        i2l2493 01B2                                          i2l2485 018C  
                                        i2l2477 016C                                          i2l2469 0140  
                                        i2l2709 006A                                          i2l2671 0FE2  
                                        i2l2399 0BB6                                          i2l2639 054A  
                                        i2l2591 0380                                          i2l2583 035A  
                                        i2l2575 033A                                          i2l2567 030E  
                                        i2l2559 02EE                                          i2l2495 01C0  
                                        i2l2487 0190                                          i2l2479 0170  
                                        i2l2673 0FD4                                          i2l2593 038E  
                                        i2l2585 035E                                          i2l2577 033E  
                                        i2l2569 0318                                          i2l2497 01C4  
                                        i2l2489 01A4                                          i2l2649 05A2  
                                        i2l2675 0FD8                                          i2l2595 0392  
                                        i2l2587 0372                                          i2l2579 034C  
                                        i2l2499 01CE                                          i2l2669 0FDE  
                                        i2l2677 0FCA                                          i2l2597 039C  
                                        i2l2589 037C                                          i2l1983 0EFC  
                                        i2l2679 0FCE                                          i2l2599 03A0  
                                        i2l2865 05B6                                          _INLVLA 000F0D  
                                        _INLVLB 000F15                                          i2l2699 0012  
                                        _INLVLC 000F1D                                          _INLVLD 000F22  
                                        _INLVLE 000F2A                                    ?_setStepSize 0013  
                              ??_encoderTrigger 0014                                          _OSCFRQ 000EDE  
                                        _RX1PPS 000EB5                                          _TX1REG 000F9A  
                                        i2u2_40 0E2A                                          i2u2_41 0E26  
                                        _TX1STA 000F9E                                 setDirection@dir 001D  
                            _setAmnioticPumpPWM 0E78                             ?_setAmnioticPumpPWM 0021  
                              __end_of_readUART 06D6                           setAmnioticPumpPWM@pwm 0021  
                      ?_EUSART1_SetErrorHandler 001D                                          clear_0 0E52  
                                        isa$std 000001                           ??_get_interruptAction 001D  
                      ?_sendEncoderValueToBGMx8 0013                ??_EUSART1_SetOverrunErrorHandler 0020  
               ?_EUSART1_SetOverrunErrorHandler 001D                                 ??_INT0_CallBack 0014  
                          i2_PWM3_LoadDutyValue 0B1A                               ??i2_EUSART1_Write 0013  
                                _PMD_Initialize 0DD0            __end_of_INT2_DefaultInterruptHandler 1020  
                  _INT2_DefaultInterruptHandler 101E                         ?_interruptAdditionsInit 0013  
                               ??_INT1_CallBack 0014   update_PIC18F_software_version_number@numTimes 0021  
                               ??_INT2_CallBack 0014                                 ??_EUSART1_Write 001D  
                       __end_of_TMR2_StartTimer 100C        INT2_SetInterruptHandler@InterruptHandler 001D  
      INT1_SetInterruptHandler@InterruptHandler 001D        INT0_SetInterruptHandler@InterruptHandler 001D  
                          ??_setAmnioticPumpPWM 0023                                    i2_setBloodOn 0FB2  
               __end_of_motorLimitSwitchTrigger 0EFC      __end_ofi2_set_INTERRUPT_STEPPER_BREAK_FLAG 1000  
      __end_of_get_INTERRUPT_STEPPER_BREAK_FLAG 1016        __end_of_set_INTERRUPT_STEPPER_BREAK_FLAG 0FF0  
            ??_set_INTERRUPT_STEPPER_BREAK_FLAG 001D              ??_get_INTERRUPT_STEPPER_BREAK_FLAG 001D  
          ??i2_set_INTERRUPT_STEPPER_BREAK_FLAG 0013             ?i2_set_INTERRUPT_STEPPER_BREAK_FLAG 0013  
             ?_set_INTERRUPT_STEPPER_BREAK_FLAG 0013               ?_get_INTERRUPT_STEPPER_BREAK_FLAG 0013  
            i2_set_INTERRUPT_STEPPER_BREAK_FLAG 0FF8                _get_INTERRUPT_STEPPER_BREAK_FLAG 1012  
              _set_INTERRUPT_STEPPER_BREAK_FLAG 0FE8                                ?_PWM3_Initialize 0013  
                             _SYSTEM_Initialize 0D32                                      __accesstop 0060  
                       __end_of__initialization 0E58                                       ?_INT0_ISR 0013  
                                     ?_INT1_ISR 0013                                       ?_INT2_ISR 0013  
                                moveUntilZ@size 0020                              ?_SYSTEM_Initialize 0013  
                                 ___rparam_used 000001                                    i2_resetPumps 0C80  
                                __pcstackCOMRAM 0013                   __end_of_reset_interruptAction 1006  
                           ??_SYSTEM_Initialize 0020                                ?_setBloodPumpPWM 0021  
                              ?_TMR2_Initialize 0013                                ?_PWM4_Initialize 0013  
                        __end_of_PMD_Initialize 0DEC                           ?i2_PWM3_LoadDutyValue 0013  
                   PWM4_LoadDutyValue@dutyValue 001D                            __end_of_EUSART1_Read 0D32  
                __end_of_interruptAdditionsInit 0F24                                   ?_setDirection 0013  
              __end_of_INT2_SetInterruptHandler 0F54                 fp__INT2_DefaultInterruptHandler 0000  
                 ?_INT2_DefaultInterruptHandler 0013                               ??_stepperIsAsleep 0013  
                         i2EUSART1_Write@txData 0013                       __end_of_SYSTEM_Initialize 0D58  
                      ?i2_reset_interruptAction 0013                           _INT0_InterruptHandler 0007  
                                    ??_INT0_ISR 0014                                      ??_INT1_ISR 0014  
                                    ??_INT2_ISR 0014                    __end_ofi2_PWM4_LoadDutyValue 0B82  
                                    __pnvCOMRAM 0001                 __end_of_EUSART1_SetErrorHandler 0F9A  
                                ??_setDirection 001D                                 ?_PMD_Initialize 0013  
        __end_of_EUSART1_SetFramingErrorHandler 0F8C                  _EUSART1_SetFramingErrorHandler 0F7E  
                    ??_INT1_SetInterruptHandler 0020                                         _INT0PPS 000EA1  
                                       _INT1PPS 000EA2                                         _INT2PPS 000EA3  
                                       _SP1BRGH 000F9C                                         _SP1BRGL 000F9B  
                               setStepSize@size 001F                                         _OSCCON1 000ED8  
                                       _OSCCON3 000EDA                                         i2u16_40 0D18  
                                       i2u16_41 0D14                                         i2u17_40 0D2A  
                                       i2u17_41 0D26                                         _OSCTUNE 000EDD  
                                       _PWM3DCH 000FA4                                         _PWM3DCL 000FA3  
                                       i2u71_40 0C96                                         i2u71_41 0C92  
                                       _PWM4DCH 000FA1                                         _PWM4DCL 000FA0  
                                       i2u48_40 0F0E                                         i2u64_40 0E46  
                                       i2u72_40 0CAA                                         i2u48_41 0F08  
                                       i2u64_41 0E42                                         i2u72_41 0CA6  
                                       i2u48_46 0F10                                         i2u65_40 0D6A  
                                       i2u80_48 0BA0                                         i2u81_40 00F8  
                                       i2u65_41 0D66                                         i2u80_49 0BB4  
                                       i2u81_41 00F4                                         _PWM3CON 000FA5  
                                       i2u73_45 0B3E                                         i2u66_40 09A4  
                                       i2u90_40 0228                                         i2u82_40 0120  
                                       i2u66_41 09A0                                         i2u90_41 0224  
                                       i2u82_41 011C                                         _PWM4CON 000FA2  
                                       i2u74_45 0B72                                         i2u75_40 0C02  
                                       i2u67_40 09B6                                         i2u91_40 0244  
                                       i2u83_40 013C                                         i2u75_41 0BFE  
                                       i2u67_41 09B2                                         i2u91_41 0240  
                                       i2u83_41 0138                                         i2u68_40 09D0  
                                       i2u92_40 026A                                         i2u84_40 0162  
                                       i2u68_41 09CC                                         i2u92_41 0266  
                                       i2u84_41 015E                                         i2u76_48 0C08  
                                       i2u77_40 0BCE                                         i2u93_40 0286  
                                       i2u85_40 017E                                         i2u76_49 0C1C  
                                       i2u77_41 0BCA                                         i2u93_41 0282  
                                       i2u85_41 017A                                         i2u94_40 02AC  
                                       i2u86_40 01A4                                         i2u94_41 02A8  
                                       i2u86_41 01A0                                         i2u78_48 0BD4  
                                       i2u79_40 0B9A                                         i2u95_40 02C8  
                                       i2u87_40 01C0                                         i2u78_49 0BE8  
                                       i2u79_41 0B96                                         i2u95_41 02C4  
                                       i2u87_41 01BC                                         i2u96_40 02EE  
                                       i2u88_40 01E6                                         i2u96_41 02EA  
                                       i2u88_41 01E2                                         i2u97_40 030A  
                                       i2u89_40 0202                                         i2u97_41 0306  
                                       i2u89_41 01FE                                         i2u98_40 0330  
                                       i2u98_41 032C                                         i2u99_40 034C  
                                       i2u99_41 0348                                         _SLRCONA 000F0E  
                                       _SLRCONB 000F16                                         _SLRCONC 000F1E  
                                       _SLRCOND 000F23                                         _SLRCONE 000F2B  
                                  ??_TMR2_Start 001D                      ??_cervixLimitSwitchTrigger 0014  
                              ?_TMR2_StartTimer 0013                                       ?_readUART 0013  
                     ?_INT0_SetInterruptHandler 001D                    _INTERRUPT_STEPPER_BREAK_FLAG 0032  
                                       __Hparam 0000                                         __Lparam 0000  
                       i2setAmnioticPumpPWM@pwm 0017                            i2setBloodPumpPWM@pwm 0017  
                        ??i2_PWM3_LoadDutyValue 0015                             _EUSART1_is_rx_ready 0EFC  
                            __end_of_TMR2_Start 101A                                         __pcinit 0E4C  
                                       __ramtop 0F00                                         __ptext0 06D6  
                                       __ptext1 0CDE                                         __ptext2 0CB0  
                                       __ptext3 0DEC                                         __ptext4 0FE8  
                                       __ptext5 1000                                         __ptext6 0A7E  
                                       __ptext7 0D98                                         __ptext8 090E  
                                       __ptext9 0DB4                    __end_ofi2_setAmnioticPumpPWM 0EE6  
                             __end_of_initPumps 0C50                           _OSCILLATOR_Initialize 0E04  
                                     _T2CONbits 000FBD                              _EUSART1_Initialize 0A34  
                      ??_PIN_MANAGER_Initialize 001D                                       _T2HLTbits 000FBE  
               __end_ofi2_reset_interruptAction 1012                                      _setBloodOn 0F9A  
                          end_of_initialization 0E58                            ?_EUSART1_is_rx_ready 0013  
                                     _T2RSTbits 000FC0                        _INT2_SetInterruptHandler 0F46  
                           ?_EUSART1_Initialize 0013                  ??_INT2_DefaultInterruptHandler 0013  
                                    ??_readUART 0019                     _EUSART1_OverrunErrorHandler 000D  
                                    _moveUntilZ 0A7E                                      _resetPumps 0C50  
                               i2_EUSART1_Write 0E34                                         postinc0 000FEE  
                          ??_EUSART1_Initialize 0020                                      _uart_write 002B  
                                     _PORTAbits 000F8D                           _INT1_InterruptHandler 0004  
                          i2_PWM4_LoadDutyValue 0B4E   __end_of_update_PIC18F_software_version_number 0D08  
       ??_update_PIC18F_software_version_number 001F          ?_update_PIC18F_software_version_number 0013  
         _update_PIC18F_software_version_number 0CDE                                   _setAmnioticOn 0FA6  
                           EUSART1_Write@txData 001D                           ??_EUSART1_is_rx_ready 0013  
                          __end_of_setDirection 0DD0                                    _EUSART1_Read 0D08  
                    __end_of_PWM3_LoadDutyValue 0AE6                        ?_motorLimitSwitchTrigger 0013  
                   __end_of_get_interruptAction 101E                    __end_of_INTERRUPT_Initialize 0FF8  
          __end_of_INT0_DefaultInterruptHandler 1024                    _INT0_DefaultInterruptHandler 1022  
                               _stepperIsAsleep 0E1C                          ?_OSCILLATOR_Initialize 0013  
                         ?i2_PWM4_LoadDutyValue 0013                           __end_of_INT0_CallBack 0C1E  
                           start_initialization 0E4C                           __end_of_INT1_CallBack 0BEA  
                                ?_setAmnioticOn 0013                __end_of_cervixLimitSwitchTrigger 0F36  
                                   ?_setBloodOn 0013                           __end_of_INT2_CallBack 0BB6  
                         __end_of_EUSART1_Write 0E04                         __end_ofi2_EUSART1_Write 0E4C  
                          i2_setAmnioticPumpPWM 0ED0                                     ?_moveUntilZ 0020  
                                   ?_resetPumps 0013                                ??_PMD_Initialize 001D  
                                 ?_stepperSleep 0013                                     _CCPTMRSbits 000FAE  
                         _reset_interruptAction 1000                      __end_of_EXT_INT_Initialize 0A34  
               fp__INT0_DefaultInterruptHandler 0000                   ?_INT0_DefaultInterruptHandler 0013  
                                 moveUntilZ@dir 0021                                     __pbssCOMRAM 0025  
              __end_of_INT0_SetInterruptHandler 0F70                                    setBloodOn@in 001D  
              ??_EUSART1_SetFramingErrorHandler 0020                 ?_EUSART1_SetFramingErrorHandler 001D  
                         _INT2_InterruptHandler 0001                           ?i2_setAmnioticPumpPWM 0017  
                        _PIN_MANAGER_Initialize 086C                         __end_of_stepperIsAsleep 0E34  
                             _resetEncoderTicks 0F36                                  ??_stepperSleep 001D  
                                     __pintcode 0008                              ?_resetEncoderTicks 0013  
                             ??i2_setAmnioticOn 0013                          ??i2_PWM4_LoadDutyValue 0015  
                  ??_INTERRUPT_InterruptManager 001B                             ??_resetEncoderTicks 0014  
                                      _BAUD1CON 000F9F                      ??_INT2_SetInterruptHandler 0020  
            _EUSART1_DefaultOverrunErrorHandler 000000                                 ??_setAmnioticOn 001D  
                          _EUSART1_ErrorHandler 000A                               i2_setBloodPumpPWM 0EBA  
                       _EUSART1_SetErrorHandler 0F8C                                       _initPumps 0C1E  
                            ?i2_setBloodPumpPWM 0017                         _sendEncoderValueToBGMx8 0D58  
                                      _T2CLKCON 000FBF                                   ??_send_number 001E  
                          _INTERRUPT_Initialize 0FF0                                   ??_setStepSize 001D  
                                      _INT0_ISR 0FDE                                ?i2_EUSART1_Write 0013  
                                      _INT1_ISR 0FD4                                        _INT2_ISR 0FCA  
       EUSART1_SetErrorHandler@interruptHandler 001D                                        _LATBbits 000F84  
                                      _LATCbits 000F85                                        _LATDbits 000F86  
                           ??i2_setBloodPumpPWM 0019                       ?_INT1_SetInterruptHandler 001D  
                     __end_of_resetEncoderTicks 0F46                                        _PIE0bits 000EC2  
                                      _PIE3bits 000EC5                                        i2u100_40 0372  
                                      i2u100_41 036E                                        i2u101_40 038E  
                                      i2u101_41 038A                                        i2u102_40 03B4  
                                      i2u110_40 0094                                        i2u102_41 03B0  
                                      i2u110_41 0090                                        i2u104_40 0022  
                                      i2u104_41 001E                                        i2u105_40 0030  
                                      i2u105_41 002C                                        i2u106_40 0046  
                                      i2u106_41 0042                                        i2u107_40 0054  
                                      i2u107_41 0050                                        i2u108_40 006A  
                                      i2u108_41 0066                                        i2u109_40 0078  
                                      i2u109_41 0074                                        _PIR0bits 000ECA  
                                      _PIR3bits 000ECD                                        _PIR4bits 000ECE  
                      ??_interruptAdditionsInit 001D                       ?_cervixLimitSwitchTrigger 0013  
                        ?_reset_interruptAction 0013                               ??_PWM3_Initialize 001D  
                     __end_ofi2_setBloodPumpPWM 0ED0                                    _setDirection 0DB4  
                ??_INT0_DefaultInterruptHandler 0013                                      ?_initPumps 0013  
                                 ?i2_setBloodOn 0013                           ?_INTERRUPT_Initialize 0013  
                      _INT0_SetInterruptHandler 0F62                               ??_setBloodPumpPWM 0023  
                        ??i2_setAmnioticPumpPWM 0019                               ??_TMR2_Initialize 001D  
                             ??_PWM4_Initialize 001D                             __end_of_send_number 0CDE  
                                      __Hrparam 0000                                   ?i2_resetPumps 0013  
                 i2PWM3_LoadDutyValue@dutyValue 0013                             __end_of_setStepSize 0990  
                             i2setAmnioticOn@in 0013                      __end_of_PWM4_LoadDutyValue 0B1A  
                              ?_stepperIsAsleep 0013                                        __Lrparam 0000  
                                _encoderTrigger 0990                         i2_reset_interruptAction 100C  
                       ??_OSCILLATOR_Initialize 001D                              _PWM3_LoadDutyValue 0AB2  
                     ??_EUSART1_SetErrorHandler 0020                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 0F12                       ??_sendEncoderValueToBGMx8 0014  
                                ??i2_setBloodOn 0013                                    ??_setBloodOn 001D  
                          __end_of_stepperSleep 0DB4                                        __ptext10 1012  
                                      __ptext11 0C1E                                        __ptext20 1016  
                                      __ptext12 0E62                                        __ptext21 101A  
                                      __ptext13 0AB2                                        __ptext30 0F12  
                                      __ptext22 0D32                                        __ptext14 0F9A  
                                      __ptext31 09E8                                        __ptext23 0D7A  
                                      __ptext15 0E78                                        __ptext40 00AC  
                                      __ptext32 0F46                                        __ptext24 0E8E  
                                      __ptext16 0AE6                                        __ptext41 0EBA  
                                      __ptext33 0F54                                        __ptext25 0EA4  
                                      __ptext17 0FA6                                        __ptext50 0B82  
                                      __ptext42 0B1A                                        __ptext34 0F62  
                                      __ptext26 0DD0                                        __ptext18 0C50  
                                      __ptext51 0990                                        __ptext43 0FB2  
                                      __ptext35 0A34                                        __ptext27 086C  
                                      __ptext19 1006                                        __ptext60 0BEA  
                                      __ptext52 0E1C                                        __ptext44 0ED0  
                                      __ptext36 0F70                                        __ptext28 0E04  
                                      __ptext61 0EE6                                        __ptext53 0D58  
                                      __ptext45 0B4E                                        __ptext37 0F7E  
                                      __ptext29 0FF0                                        __ptext62 0FF8  
                                      __ptext54 101E                                        __ptext46 0FBE  
                                      __ptext38 0F8C                                        __ptext63 100C  
                                      __ptext55 0FD4                                        __ptext47 0C80  
                                      __ptext64 0F36                                        __ptext56 0BB6  
                                      __ptext48 0D08                                        __ptext65 0E34  
                                      __ptext57 0F24                                        __ptext49 0FCA  
                                      __ptext66 1022                                        __ptext58 1020  
                           ?_PWM3_LoadDutyValue 001D                                        __ptext67 0EFC  
                                      __ptext59 0FDE                                        __ptext68 0000  
                                i2setBloodOn@in 0013                                        _readUART 00AC  
                                  ??_moveUntilZ 0021                                  ??i2_resetPumps 0013  
                                  ??_resetPumps 001D                          __end_of_encoderTrigger 09E8  
                                    _RC1STAbits 000F9D  EUSART1_SetOverrunErrorHandler@interruptHandler 001D  
                          ??_PWM3_LoadDutyValue 001F                                        isa$xinst 000000  
                                      int$flags 0034                               ??_TMR2_StartTimer 001D  
            __end_of_INTERRUPT_InterruptManager 00A8                      _INTERRUPT_InterruptManager 0008  
                            __end_of_setBloodOn 0FA6                     _EUSART1_FramingErrorHandler 0010  
          __end_of_INT1_DefaultInterruptHandler 1022                    _INT1_DefaultInterruptHandler 1020  
                                    _INTCONbits 000FF2                      __end_of_setAmnioticPumpPWM 0E8E  
                            __end_of_moveUntilZ 0AB2                          ??_INTERRUPT_Initialize 001D  
                                   ??_initPumps 0023                              __end_of_resetPumps 0C80  
                            _EXT_INT_Initialize 09E8                                 _interruptAction 0031  
                                 _encoder_ticks 002E                                        intlevel2 0000  
                                   _send_number 0CB0                                     _setStepSize 090E  
                       ?_PIN_MANAGER_Initialize 0013                             ?_EXT_INT_Initialize 0013  
        __end_of_EUSART1_SetOverrunErrorHandler 0F7E                  _EUSART1_SetOverrunErrorHandler 0F70  
                               i2_setAmnioticOn 0FBE                 __end_of_sendEncoderValueToBGMx8 0D7A  
                     ??i2_reset_interruptAction 0013                                 ?_encoderTrigger 0013  
EUSART1_SetFramingErrorHandler@interruptHandler 001D                     PWM3_LoadDutyValue@dutyValue 001D  
                            _eusart1RxLastError 0030                            ??_EXT_INT_Initialize 0020  
               fp__INT1_DefaultInterruptHandler 0000                   ?_INT1_DefaultInterruptHandler 0013  
                                    _UART_RX_in 0033                __end_of_INT1_SetInterruptHandler 0F62  
                                    _TX1STAbits 000F9E                          _interruptAdditionsInit 0F12  
                                    _TMR2_Start 1016                  __end_of_PIN_MANAGER_Initialize 090E  
                               _PWM3_Initialize 0EA4                         ??_reset_interruptAction 001D  
